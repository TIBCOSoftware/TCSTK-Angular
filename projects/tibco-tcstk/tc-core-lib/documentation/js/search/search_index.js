var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AccessToken.html",[0,0.187,1,1.508]],["body/classes/AccessToken.html",[0,0.367,1,2.073,2,0.959,3,0.111,4,0.126,5,0.111,6,1.81,7,1.8,8,0.832,9,1.876,10,0.158,11,0.514,12,2.934,13,2.934,14,2.934,15,0.357,16,1.77,17,0.257,18,0.015,19,0.623,20,0.211,21,3.962,22,1.386,23,3.962,24,3.962,25,2.022,26,3.962,27,0.226,28,0.262,29,0.226,30,1.386,31,0.158,32,0.246,33,2.16,34,2.459,35,1.1,36,1.551,37,1.58,38,2.352,39,2.934,40,2.934,41,2.576,42,2.88,43,2.459,44,2.459,45,1.885,46,1.951,47,0.622,48,1.8,49,1.885,50,1.721,51,1.885,52,1.885,53,1.58,54,1.885,55,1.8,56,1.885,57,1.517,58,0.576,59,2.459,60,2.576,61,1.885,62,2.576,63,2.459,64,2.16,65,1.8,66,2.352,67,1.885,68,1.648,69,1.885,70,1.885,71,1.885,72,1.58,73,1.8,74,1.648,75,0.007,76,0.01,77,0.007]],["title/classes/AccountInfo.html",[0,0.187,66,1.711]],["body/classes/AccountInfo.html",[0,0.367,1,1.517,2,0.959,3,0.111,4,0.126,5,0.111,6,1.869,7,1.8,8,0.806,9,1.843,10,0.158,11,0.514,12,1.885,13,1.885,14,1.885,17,0.263,18,0.015,19,0.624,20,0.221,22,1.216,25,1.986,28,0.192,30,1.361,31,0.158,32,0.246,33,2.16,34,2.459,35,1.1,36,1.551,37,1.58,38,2.352,39,2.934,40,2.934,41,2.576,42,2.88,43,2.459,44,2.459,45,1.885,46,1.951,47,0.622,48,1.8,49,1.885,50,1.721,51,1.885,52,1.885,53,1.58,54,1.885,55,1.8,56,1.885,57,1.517,58,0.576,59,3.011,60,3.154,61,1.885,62,3.154,63,3.011,64,2.46,65,1.8,66,2.68,67,2.934,68,1.648,69,1.885,70,1.885,71,1.885,72,1.58,73,1.8,74,1.648,75,0.007,76,0.01,77,0.007,78,3.962,79,3.962,80,3.962,81,3.962,82,3.962]],["title/classes/AccountsInfo.html",[0,0.187,68,1.639]],["body/classes/AccountsInfo.html",[0,0.368,1,1.552,2,0.981,3,0.113,4,0.129,5,0.113,6,1.628,7,1.841,8,0.838,9,1.886,10,0.162,11,0.522,12,1.928,13,1.928,14,1.928,15,0.363,16,1.798,17,0.24,18,0.015,19,0.623,20,0.175,22,1.235,25,2.032,27,0.231,28,0.266,29,0.231,30,1.393,31,0.162,32,0.247,33,2.194,34,2.498,35,1.114,36,1.557,37,1.617,38,2.389,39,2.969,40,2.969,41,2.616,42,2.907,43,2.498,44,2.498,45,1.928,46,1.966,47,0.626,48,1.841,49,1.928,50,1.761,51,1.928,52,1.928,53,1.617,54,1.928,55,1.841,56,1.928,57,1.552,58,0.589,59,2.498,60,2.616,61,1.928,62,2.616,63,2.498,64,2.194,65,1.841,66,2.711,67,1.928,68,2.288,69,2.969,70,1.928,71,1.928,72,1.617,73,1.841,74,1.687,75,0.007,76,0.01,77,0.007,83,4.054,84,4.054]],["title/interceptors/AuthErrorInterceptor.html",[85,2.622,86,2.622]],["body/interceptors/AuthErrorInterceptor.html",[0,0.175,3,0.103,4,0.117,5,0.103,8,0.428,10,0.147,11,0.489,15,0.34,17,0.251,18,0.015,19,0.509,20,0.223,27,0.294,28,0.287,29,0.294,31,0.27,32,0.117,47,0.437,58,0.536,75,0.007,76,0.009,77,0.007,86,3.428,87,2.882,88,6.246,89,3.49,90,2.644,91,2.617,92,5.156,93,5.156,94,5.156,95,5.156,96,4.027,97,2.882,98,5.479,99,5.151,100,4.027,101,4.61,102,4.642,103,5.026,104,3.686,105,2.644,106,0.428,107,2.697,108,2.022,109,1.615,110,4.473,111,3.686,112,4.473,113,4.473,114,4.473,115,3.686,116,4.027,117,4.473,118,3.686,119,1.503,120,0.632,121,2.882,122,4.027,123,2.644,124,5.937,125,1.84,126,1.674,127,3.201,128,2.644,129,1.674,130,2.882,131,3.201,132,1.753,133,1.534,134,3.201,135,3.686,136,4.473,137,2.882,138,2.644,139,3.694,140,3.686,141,3.686,142,3.686,143,3.686,144,2.882,145,2.644,146,3.686,147,3.686,148,3.686,149,2.453,150,3.686,151,2.644,152,2.04,153,3.686,154,2.644,155,3.686,156,5.937,157,3.951,158,1.601,159,3.686,160,3.686,161,3.686,162,3.686,163,2.295,164,1.82,165,1.447,166,3.201,167,2.882,168,2.703,169,2.295,170,2.453,171,3.201,172,5.156,173,1.935,174,3.201,175,3.201,176,3.201,177,1.668,178,2.453,179,3.201,180,5.583,181,5.156,182,2.453,183,2.295,184,1.674,185,3.201,186,3.201,187,3.201,188,3.686,189,3.686,190,3.686,191,5.156,192,3.201,193,3.201,194,4.473,195,3.201,196,3.201,197,5.151,198,3.201,199,3.201,200,3.686,201,3.686]],["title/guards/AuthGuard.html",[202,2.452,203,2.825]],["body/guards/AuthGuard.html",[0,0.201,3,0.118,4,0.135,5,0.118,8,0.491,10,0.169,11,0.401,15,0.373,17,0.203,18,0.015,20,0.18,27,0.323,28,0.274,29,0.323,31,0.226,32,0.135,47,0.48,58,0.615,75,0.007,76,0.01,77,0.007,91,2.482,92,4.916,93,5.915,94,4.916,95,4.916,97,3.309,98,5.712,106,0.491,110,3.675,112,3.675,113,4.916,114,3.675,116,3.309,117,3.675,119,1.651,120,0.726,130,5.325,131,5.915,132,2.013,133,1.76,138,4.06,157,2.816,164,1.495,165,1.189,168,2.971,169,2.634,170,2.816,171,3.675,172,5.54,173,2.221,174,3.675,175,3.675,176,3.675,177,2.053,178,2.816,179,3.675,180,5.915,181,5.54,182,2.816,183,2.634,184,1.922,185,3.675,186,3.675,187,3.675,191,5.54,192,3.675,193,3.675,194,4.916,195,3.675,196,3.675,198,3.675,199,3.675,203,4.06,204,2.634,205,3.675,206,6.811,207,4.231,208,5.661,209,3.736,210,4.231,211,1.556,212,3.675,213,4.231,214,3.309,215,4.231,216,4.231,217,3.309,218,3.675,219,4.231,220,2.355,221,2.634,222,4.231,223,4.231,224,4.231,225,5.54,226,5.661,227,4.231,228,3.309,229,5.661,230,3.035,231,5.661,232,4.231,233,4.231,234,4.231,235,4.231,236,3.675,237,4.231,238,4.231,239,2.221,240,4.231,241,4.231,242,4.231,243,4.231]],["title/classes/AuthInfo.html",[0,0.187,53,1.571]],["body/classes/AuthInfo.html",[0,0.364,1,1.467,2,0.928,3,0.107,4,0.122,5,0.107,6,1.932,7,1.741,8,0.823,9,1.862,10,0.153,11,0.502,12,1.823,13,1.823,14,1.823,15,0.349,16,1.73,17,0.27,18,0.015,19,0.624,20,0.232,22,1.362,25,2.005,27,0.218,28,0.256,29,0.218,30,1.375,31,0.153,32,0.245,33,2.111,34,2.404,35,1.081,36,1.541,37,1.529,38,2.299,39,3.263,40,3.263,41,2.517,42,2.84,43,2.404,44,2.969,45,1.823,46,1.928,47,0.617,48,1.741,49,1.823,50,1.665,51,1.823,52,1.823,53,2.111,54,2.883,55,2.753,56,2.883,57,1.467,58,0.557,59,2.404,60,2.517,61,1.823,62,2.517,63,2.404,64,2.111,65,1.741,66,2.299,67,1.823,68,1.594,69,1.823,70,1.823,71,1.823,72,1.529,73,1.741,74,1.594,75,0.007,76,0.009,77,0.007,244,3.832,245,3.832,246,3.832,247,3.832,248,3.832,249,3.832,250,3.832]],["title/interceptors/CachingInterceptor.html",[85,2.622,251,2.622]],["body/interceptors/CachingInterceptor.html",[0,0.212,3,0.125,4,0.142,5,0.125,8,0.519,10,0.179,15,0.387,17,0.235,18,0.015,20,0.209,27,0.373,28,0.317,29,0.373,31,0.289,32,0.142,47,0.59,58,0.649,75,0.008,76,0.01,77,0.008,87,3.493,90,3.204,96,4.588,100,4.588,101,5.423,102,5.998,103,5.912,105,4.7,106,0.681,107,2.976,119,1.712,120,0.766,121,3.493,122,4.588,123,4.209,125,2.23,126,2.029,128,3.204,129,2.029,133,1.859,137,3.493,154,4.209,221,2.781,251,3.905,252,6.044,253,5.691,254,4.468,255,4.707,256,3.88,257,4.545,258,4.468,259,4.468,260,4.468,261,3.88,262,3.88,263,6.553,264,4.468,265,4.468,266,4.468,267,4.468,268,4.468,269,4.468,270,2.781,271,4.468,272,4.468,273,3.88,274,3.88,275,4.079,276,5.868,277,2.23,278,3.88,279,3.88,280,4.468,281,4.468,282,3.88,283,1.579,284,4.468,285,4.588,286,4.468]],["title/classes/Claim.html",[0,0.187,37,1.571]],["body/classes/Claim.html",[0,0.363,1,1.435,2,0.908,3,0.105,4,0.119,5,0.105,6,1.976,7,1.703,8,0.818,9,1.852,10,0.15,11,0.494,12,1.784,13,1.784,14,1.784,15,0.344,16,1.704,17,0.275,18,0.015,19,0.624,20,0.238,22,1.171,25,1.995,27,0.214,28,0.252,29,0.214,30,1.367,31,0.15,32,0.244,33,2.079,34,2.368,35,1.214,36,1.535,37,2.079,38,2.813,39,3.238,40,3.238,41,3.081,42,3.061,43,2.942,44,2.942,45,2.85,46,1.913,47,0.613,48,1.703,49,1.784,50,1.629,51,1.784,52,1.784,53,1.496,54,1.784,55,1.703,56,1.784,57,1.435,58,0.545,59,2.368,60,2.48,61,1.784,62,2.48,63,2.368,64,2.079,65,1.703,66,2.265,67,1.784,68,1.56,69,1.784,70,1.784,71,1.784,72,1.496,73,1.703,74,1.56,75,0.007,76,0.009,77,0.007,287,3.75,288,3.75,289,3.75,290,3.75,291,3.75,292,3.75,293,3.75,294,3.75,295,3.75]],["title/classes/ConfigurationMenuConfig.html",[0,0.187,296,2.452]],["body/classes/ConfigurationMenuConfig.html",[0,0.321,2,1.359,3,0.157,4,0.179,5,0.157,6,1.899,9,1.703,10,0.224,11,0.643,15,0.447,16,2.215,17,0.243,18,0.015,19,0.51,20,0.216,25,1.834,27,0.32,28,0.271,29,0.32,30,1.257,31,0.224,32,0.216,46,1.577,47,0.476,75,0.01,76,0.012,77,0.01,106,0.652,296,4.219,297,3.633,298,2.671,299,2.802,300,5.221,301,4.026,302,4.026,303,3.288,304,3.736]],["title/guards/ConfigurationMenuConfigResolver.html",[202,2.452,305,3.08]],["body/guards/ConfigurationMenuConfigResolver.html",[0,0.209,3,0.123,4,0.141,5,0.162,8,0.512,10,0.176,11,0.418,15,0.384,17,0.209,18,0.015,19,0.332,20,0.185,27,0.332,28,0.281,29,0.332,31,0.309,32,0.141,47,0.627,58,0.641,75,0.008,76,0.01,77,0.008,91,2.446,106,0.512,107,3.145,119,1.698,120,0.756,125,2.202,126,2.004,129,2.004,130,5.414,132,2.098,133,1.835,152,3.221,163,2.746,177,1.635,204,2.746,296,4.054,297,2.202,298,2.353,305,4.55,306,5.656,307,3.164,308,4.55,309,4.55,310,4.55,311,5.819,312,4.966,313,3.164,314,4.311,315,3.586,316,4.411,317,5.819,318,4.411,319,4.411,320,3.814,321,2.139,322,2.442,323,3.098,324,2.098,325,3.449,326,2.004,327,1.916,328,2.202,329,1.835,330,2.004,331,2.004,332,4.411,333,3.164,334,3.449,335,3.449,336,3.449,337,3.221,338,3.098,339,3.831,340,3.831,341,3.449,342,3.164,343,3.449,344,3.449,345,3.449,346,1.167,347,3.449,348,3.449,349,4.411,350,4.411,351,4.411,352,4.411]],["title/classes/ConfigurationMenuEntry.html",[0,0.187,300,2.825]],["body/classes/ConfigurationMenuEntry.html",[0,0.324,2,1.381,3,0.159,4,0.182,5,0.159,6,1.912,9,1.719,10,0.228,11,0.649,17,0.246,18,0.015,19,0.572,20,0.218,25,1.544,30,1.059,31,0.228,32,0.218,46,1.603,47,0.484,75,0.01,76,0.012,77,0.01,296,3.551,297,3.658,298,2.582,299,2.847,300,5.257,303,4.293,304,4.878,353,5.705,354,4.955]],["title/interfaces/Deserializable.html",[9,0.99,355,2.825]],["body/interfaces/Deserializable.html",[3,0.171,4,0.195,5,0.171,9,1.792,10,0.244,15,0.47,16,2.331,17,0.219,18,0.014,20,0.195,25,1.93,27,0.349,28,0.296,29,0.349,30,1.135,32,0.195,75,0.011,76,0.013,77,0.011,355,4.386,356,6.115,357,5.311,358,6.115]],["title/pipes/DurationSincePipe.html",[283,1.392,359,2.622]],["body/pipes/DurationSincePipe.html",[0,0.196,3,0.115,4,0.131,5,0.115,8,0.479,15,0.272,17,0.148,18,0.015,19,0.474,20,0.131,22,1.25,27,0.235,28,0.304,29,0.235,31,0.165,32,0.131,47,0.67,75,0.007,76,0.01,77,0.007,106,0.479,109,1.037,120,0.707,177,1.159,184,3.564,283,1.966,346,0.827,359,3.704,360,2.568,361,4.833,362,3.583,363,1.349,364,5.565,365,2.746,366,4.351,367,4.924,368,4.126,369,3.226,370,3.704,371,4.126,372,4.126,373,3.583,374,4.126,375,4.126,376,8.242,377,7.252,378,4.126,379,5.565,380,4.126,381,7.788,382,5.565,383,4.126,384,4.126,385,5.565,386,4.126,387,4.126,388,5.565,389,4.126,390,4.126,391,5.565,392,4.126,393,3.583,394,5.565,395,4.126,396,4.126,397,4.126]],["title/pipes/EllipsisPipe.html",[283,1.392,398,2.622]],["body/pipes/EllipsisPipe.html",[0,0.263,3,0.155,4,0.177,5,0.155,8,0.645,15,0.367,17,0.199,18,0.015,20,0.177,22,1.628,27,0.317,28,0.35,29,0.317,31,0.222,32,0.177,47,0.615,75,0.01,76,0.012,77,0.01,106,0.645,109,1.893,120,0.953,277,2.774,283,2.38,360,3.46,363,1.817,365,3.699,366,5.266,367,6.133,369,4.345,370,4.483,398,4.483,399,4.827,400,6.735,401,5.557,402,5.557,403,5.557]],["title/classes/GeneralConfig.html",[0,0.187,404,2.18]],["body/classes/GeneralConfig.html",[0,0.288,2,1.14,3,0.131,4,0.15,5,0.131,6,2.061,8,0.705,9,1.784,10,0.188,11,0.576,15,0.4,16,1.985,17,0.281,18,0.015,19,0.614,20,0.25,25,1.819,27,0.268,28,0.228,29,0.268,30,1.247,31,0.188,32,0.193,33,1.878,35,1.267,36,1.509,46,1.706,47,0.515,75,0.008,76,0.011,77,0.008,106,0.547,211,2.471,297,2.35,299,2.35,338,3.197,404,3.361,405,3.288,406,5.255,407,5.837,408,5.255,409,5.255,410,2.919,411,5.837,412,3.681,413,3.681,414,4.089,415,4.089,416,4.089,417,4.473,418,4.708,419,4.089,420,4.089,421,4.708,422,2.931,423,3.377,424,4.089]],["title/guards/GeneralConfigResolver.html",[202,2.452,425,3.08]],["body/guards/GeneralConfigResolver.html",[0,0.175,3,0.103,4,0.117,5,0.144,8,0.428,10,0.147,11,0.35,15,0.34,17,0.132,18,0.015,19,0.277,20,0.164,22,1.157,27,0.21,28,0.178,29,0.21,31,0.305,32,0.117,36,1.289,47,0.648,58,0.536,75,0.011,76,0.009,77,0.007,91,2.593,106,0.428,107,2.92,119,1.503,120,0.632,125,1.84,126,1.674,129,1.674,132,1.753,133,1.534,152,3.286,158,1.601,163,2.295,177,1.668,204,2.295,209,2.159,220,2.143,257,2.159,270,2.295,277,1.84,283,1.82,307,2.644,308,4.027,309,4.027,310,4.027,312,5.025,314,4.002,315,3.421,320,3.478,321,1.894,322,2.851,323,3.058,324,2.45,325,4.642,326,1.674,327,1.601,328,1.84,329,1.534,330,1.674,331,1.674,333,3.694,334,2.882,335,2.882,336,4.642,337,2.851,338,2.824,341,2.882,342,2.644,343,2.882,344,2.882,345,2.882,346,1.033,347,2.882,348,2.882,404,3.558,405,2.143,425,4.027,426,4.642,427,4.473,428,3.072,429,4.473,430,3.201,431,3.558,432,5.156,433,4.002,434,3.686,435,4.473,436,3.686,437,2.295,438,4.027,439,3.201,440,2.703,441,1.753,442,2.453,443,2.453,444,3.686,445,2.644,446,3.201,447,2.882,448,2.882,449,3.201,450,3.201,451,3.201,452,3.201,453,1.302,454,2.882,455,3.201,456,3.478,457,3.686,458,4.027,459,3.201,460,4.473,461,3.201,462,3.686,463,3.201,464,3.201,465,5.937,466,3.686,467,5.151,468,3.686,469,5.156,470,3.201,471,3.686,472,3.686,473,3.201,474,2.295,475,3.201,476,2.644,477,2.882,478,3.201,479,3.686,480,2.882,481,4.473,482,3.201]],["title/classes/GeneralLandingPageConfig.html",[0,0.187,483,2.18]],["body/classes/GeneralLandingPageConfig.html",[0,0.323,2,1.171,3,0.135,4,0.154,5,0.135,6,1.933,8,0.717,9,1.802,10,0.193,11,0.586,15,0.407,16,2.02,17,0.257,18,0.015,19,0.61,20,0.229,22,1.087,25,1.942,27,0.276,28,0.234,29,0.276,30,1.331,31,0.193,32,0.217,35,1.215,36,1.592,46,1.913,47,0.578,75,0.009,76,0.011,77,0.009,106,0.562,239,3.89,299,2.415,405,3.083,410,2.102,483,3.42,484,4.102,485,4.882,486,4.238,487,4.838,488,3.987,489,4.838,490,4.838,491,4.838,492,3.619,493,4.112,494,2.198,495,3.783,496,3.22,497,2.415,498,3.47,499,3.783,500,3.783,501,3.22,502,3.783]],["title/guards/GeneralLandingPageConfigResolver.html",[202,2.452,503,3.08]],["body/guards/GeneralLandingPageConfigResolver.html",[0,0.166,3,0.098,4,0.112,5,0.139,8,0.408,10,0.14,11,0.333,15,0.328,17,0.126,18,0.015,19,0.264,20,0.159,22,1.118,27,0.2,28,0.17,29,0.2,31,0.305,32,0.112,36,1.261,47,0.642,58,0.723,75,0.01,76,0.009,77,0.006,91,2.594,106,0.408,107,2.857,119,1.452,120,0.602,125,1.752,126,1.595,129,1.595,132,1.67,152,3.2,158,1.525,163,2.186,177,1.625,204,2.186,209,2.056,220,2.071,239,3.486,257,2.056,270,2.186,277,1.752,283,1.758,307,2.518,308,3.891,309,3.891,310,3.891,312,4.947,314,3.916,315,3.374,320,3.387,321,2.126,322,2.755,323,3.159,324,2.368,325,4.521,326,1.595,327,1.525,328,1.752,329,1.461,330,1.595,331,1.595,333,2.518,334,2.745,335,2.745,336,2.745,337,2.755,338,2.75,339,3.049,340,3.049,341,2.745,342,2.518,343,2.745,344,2.745,345,2.745,346,0.998,347,2.745,348,2.745,404,3.2,405,2.405,426,4.521,427,4.322,428,3.017,429,4.322,430,3.049,431,3.482,435,4.322,438,3.891,439,3.049,440,2.612,441,1.67,442,2.336,443,2.336,445,2.518,446,3.049,447,2.745,448,2.745,449,3.049,450,3.049,451,3.049,452,3.049,453,1.24,454,2.745,455,3.049,456,3.387,458,5.193,459,3.049,460,4.322,461,3.049,463,3.049,464,3.049,469,5.022,470,3.049,473,3.049,474,2.186,475,3.049,476,2.518,477,2.745,478,3.049,480,2.745,481,4.322,482,3.049,483,2.755,484,3.676,503,3.891,504,4.977,505,5.022,506,4.187,507,3.51,508,3.51,509,3.51,510,3.51,511,5.782,512,3.51,513,3.51,514,3.51,515,3.51,516,3.51]],["title/classes/Group.html",[0,0.187,33,1.571]],["body/classes/Group.html",[0,0.367,1,1.523,2,0.963,3,0.111,4,0.127,5,0.111,6,1.732,7,1.807,8,0.807,9,1.845,10,0.159,11,0.515,12,1.893,13,1.893,14,1.893,17,0.272,18,0.015,19,0.625,20,0.197,22,1.22,25,1.988,27,0.227,28,0.263,29,0.227,30,1.363,31,0.159,32,0.247,33,2.466,34,2.467,35,1.28,36,1.592,37,1.587,38,2.359,39,2.941,40,2.941,41,2.583,42,2.885,43,2.467,44,2.467,45,1.893,46,1.953,47,0.623,48,1.807,49,1.893,50,1.729,51,1.893,52,1.893,53,1.587,54,1.893,55,1.807,56,1.893,57,1.523,58,0.789,59,2.467,60,2.583,61,1.893,62,2.583,63,2.467,64,2.166,65,1.807,66,2.359,67,1.893,68,1.655,69,1.893,70,1.893,71,1.893,72,1.587,73,1.807,74,1.655,75,0.007,76,0.01,77,0.007,517,3.979,518,3.979,519,3.979,520,3.979]],["title/pipes/HighlightPipe.html",[283,1.392,521,2.622]],["body/pipes/HighlightPipe.html",[0,0.193,3,0.113,4,0.13,5,0.113,8,0.472,11,0.386,15,0.268,17,0.24,18,0.015,19,0.604,20,0.214,27,0.232,28,0.302,29,0.232,31,0.22,32,0.13,47,0.468,75,0.007,76,0.01,77,0.007,106,0.472,108,2.272,109,1.684,120,0.697,158,2.394,170,2.706,177,1.143,211,2.298,221,3.891,283,1.947,346,1.343,360,2.531,363,1.329,365,2.706,370,3.667,521,3.667,522,3.531,523,5.239,524,5.51,525,7.003,526,5.476,527,6.701,528,6.251,529,4.066,530,4.16,531,6.686,532,7.003,533,7.996,534,6.271,535,6.251,536,5.646,537,5.51,538,4.887,539,4.066,540,5.51,541,4.066,542,5.51,543,4.066,544,3.531,545,3.179,546,4.066,547,4.066,548,4.066,549,4.066,550,4.066,551,4.066,552,5.51,553,7.003,554,6.701,555,3.531,556,5.82,557,6.251,558,5.429,559,4.066,560,3.531,561,4.066,562,4.066,563,4.066]],["title/classes/LandingPageConfig.html",[0,0.187,488,2.307]],["body/classes/LandingPageConfig.html",[0,0.303,2,1.032,3,0.119,4,0.136,5,0.119,6,2.043,8,0.495,9,1.609,10,0.17,11,0.54,15,0.375,16,1.86,17,0.279,18,0.015,19,0.611,20,0.247,22,1.278,25,1.849,27,0.243,28,0.206,29,0.243,30,1.268,31,0.17,32,0.204,35,0.761,36,1.645,46,1.799,47,0.543,75,0.008,76,0.01,77,0.008,106,0.495,239,4.111,299,2.128,354,3.703,405,3.258,410,2.782,412,3.334,413,3.334,414,3.703,415,3.703,416,3.703,419,3.703,420,3.703,483,2.36,484,4.335,485,3.058,486,2.654,488,3.75,492,3.75,493,4.547,494,1.937,495,3.334,496,4.262,497,3.196,498,4.592,499,5.006,500,5.006,501,4.262,502,5.006,564,4.264,565,4.264]],["title/classes/LandingPageItemConfig.html",[0,0.187,492,2.307]],["body/classes/LandingPageItemConfig.html",[0,0.322,2,1.163,3,0.134,4,0.153,5,0.134,6,1.929,8,0.558,9,1.705,10,0.192,11,0.583,15,0.406,16,2.011,17,0.257,18,0.015,19,0.611,20,0.228,22,1.079,25,1.937,27,0.274,28,0.232,29,0.274,30,1.328,31,0.192,32,0.216,35,0.857,36,1.634,46,1.907,47,0.576,75,0.008,76,0.011,77,0.008,106,0.558,239,3.882,299,2.398,301,3.446,302,3.446,405,3.077,410,2.087,483,2.659,484,4.093,485,3.446,486,2.991,488,3.603,492,3.974,493,4.761,494,3.082,495,5.305,496,3.198,497,2.398,498,3.446,499,3.757,500,3.757,501,3.198,502,3.757,566,3.757,567,3.757]],["title/injectables/LogService.html",[119,1.149,568,2.825]],["body/injectables/LogService.html",[0,0.14,3,0.181,4,0.094,5,0.082,10,0.118,11,0.416,15,0.289,17,0.258,18,0.015,19,0.601,20,0.235,27,0.409,28,0.347,29,0.409,31,0.118,32,0.14,47,0.444,75,0.005,76,0.008,77,0.005,89,2.757,91,2.507,106,0.834,108,1.647,109,1.736,119,1.279,120,0.506,151,2.115,158,1.281,165,0.829,177,0.829,182,1.963,183,1.836,184,1.34,211,1.612,220,2.178,346,0.591,373,2.561,555,2.561,556,5.84,558,6,568,3.145,569,1.632,570,4.128,571,2.306,572,7.289,573,5.235,574,5.034,575,5.034,576,4.385,577,4.385,578,5.034,579,4.385,580,5.034,581,4.385,582,4.385,583,7.92,584,2.949,585,6.908,586,2.376,587,4.385,588,2.949,589,4.385,590,2.949,591,4.385,592,2.949,593,5.38,594,4.385,595,2.949,596,4.385,597,2.949,598,4.385,599,2.949,600,4.385,601,6.13,602,2.949,603,4.385,604,2.949,605,4.385,606,2.949,607,6.195,608,2.949,609,2.949,610,2.949,611,4.385,612,2.949,613,2.949,614,2.949,615,2.949,616,2.949,617,2.949,618,2.949,619,2.949,620,6.724,621,4.385,622,4.385,623,2.949,624,2.561,625,2.918,626,2.115,627,2.949,628,2.949,629,2.949,630,2.949,631,2.949,632,2.561,633,2.949,634,6.493,635,4.385,636,4.385,637,4.385,638,4.385,639,4.385,640,6.13,641,2.561,642,2.949,643,1.129,644,2.561,645,2.115,646,2.561]],["title/classes/LoginPrefill.html",[0,0.187,72,1.571]],["body/classes/LoginPrefill.html",[0,0.367,1,1.534,2,0.97,3,0.112,4,0.128,5,0.112,6,1.737,7,1.82,8,0.835,9,1.881,10,0.16,11,0.518,12,1.906,13,1.906,14,1.906,15,0.36,16,1.784,17,0.25,18,0.015,19,0.624,20,0.198,22,1.226,25,2.027,27,0.228,28,0.264,29,0.228,30,1.389,31,0.16,32,0.247,33,2.176,34,2.479,35,1.107,36,1.554,37,1.599,38,2.371,39,2.951,40,2.951,41,2.596,42,2.894,43,2.479,44,2.479,45,1.906,46,1.958,47,0.624,48,1.82,49,1.906,50,1.741,51,1.906,52,1.906,53,1.599,54,1.906,55,1.82,56,1.906,57,1.534,58,0.583,59,2.479,60,2.596,61,1.906,62,2.596,63,2.479,64,2.176,65,1.82,66,2.371,67,1.906,68,1.667,69,1.906,70,1.906,71,1.906,72,2.176,73,2.818,74,2.581,75,0.007,76,0.01,77,0.007,647,4.008,648,4.008,649,4.008]],["title/guards/LoginPrefillResolver.html",[202,2.452,650,3.08]],["body/guards/LoginPrefillResolver.html",[0,0.249,3,0.146,4,0.167,5,0.146,8,0.609,10,0.21,11,0.498,15,0.429,18,0.015,19,0.489,20,0.207,31,0.282,32,0.225,35,1.16,38,2.279,47,0.599,58,1.027,72,2.818,73,2.383,74,2.182,75,0.009,76,0.012,77,0.009,91,2.509,106,0.609,119,1.897,120,0.899,132,2.495,168,3.708,177,1.827,204,3.266,312,5.548,321,1.928,346,1.052,650,5.083,651,5.524,652,4.101,653,6.501,654,6.501,655,5.245,656,5.245,657,3.762,658,3.598,659,3.762,660,3.762,661,5.245,662,5.245,663,5.245,664,5.245,665,5.245]],["title/interceptors/MockingInterceptor.html",[85,2.622,666,2.825]],["body/interceptors/MockingInterceptor.html",[0,0.159,3,0.094,4,0.107,5,0.182,8,0.39,10,0.134,11,0.458,15,0.318,17,0.203,18,0.015,19,0.425,20,0.208,27,0.322,28,0.273,29,0.322,31,0.247,32,0.107,36,1.132,47,0.608,58,0.489,75,0.006,76,0.009,77,0.006,87,2.63,89,1.6,90,2.412,96,3.774,100,3.774,101,5.14,102,5.317,103,5.108,105,4.425,106,0.56,107,2.802,108,1.519,109,1.213,119,1.408,120,0.577,121,2.63,122,3.774,123,3.462,125,1.679,126,1.528,127,4.192,129,1.528,133,1.399,134,2.921,145,2.412,152,3.125,154,4.686,170,2.238,173,2.963,177,1.968,182,2.238,184,1.528,217,2.63,230,2.412,253,4.904,256,4.192,273,2.921,275,2.094,278,2.921,279,4.192,282,2.921,304,3.758,313,2.412,314,3.841,324,2.296,337,2.672,342,3.462,346,1.132,474,2.094,530,4.106,531,2.921,538,2.63,666,3.462,667,5.906,668,5.646,669,4.827,670,3.363,671,4.827,672,3.363,673,4.827,674,3.363,675,3.363,676,3.363,677,3.363,678,2.921,679,2.63,680,3.363,681,3.363,682,4.827,683,5.108,684,3.363,685,3.363,686,3.363,687,3.363,688,3.363,689,3.363,690,3.363,691,4.827,692,3.363,693,3.363,694,3.363,695,3.363,696,3.363,697,4.827,698,3.363,699,7.166,700,3.363,701,2.63,702,3.363,703,3.363,704,3.363,705,6.533,706,5.646,707,3.363,708,5.646,709,2.921,710,4.827,711,2.921,712,3.827,713,3.363,714,2.63,715,3.363,716,3.363,717,3.363,718,3.363,719,3.363,720,3.363,721,3.363,722,3.363,723,3.774,724,3.363,725,3.363,726,2.63,727,3.363,728,3.363,729,6.169,730,3.363,731,4.827,732,4.827,733,3.363,734,4.827,735,3.363,736,2.412,737,4.827,738,3.363,739,3.363]],["title/directives/OnCreateDirective.html",[740,1.392,741,1.338]],["body/directives/OnCreateDirective.html",[0,0.253,3,0.149,4,0.17,5,0.149,8,0.763,10,0.213,15,0.433,17,0.236,18,0.015,20,0.237,22,1.476,30,1.219,31,0.213,32,0.17,58,1.035,75,0.009,76,0.012,77,0.009,106,0.619,120,0.915,346,1.317,363,1.744,586,2.321,740,2.321,741,2.232,742,2.128,743,6.625,744,4.634,745,3.093,746,2.62,747,2.62,748,3.375,749,3.125,750,6.183,751,3.448,752,7.119,753,6.57,754,5.335,755,4.077,756,5.335,757,3.736,758,5.335,759,4.634,760,4.634,761,5.335]],["title/pipes/OrderByDatePipe.html",[283,1.392,762,2.622]],["body/pipes/OrderByDatePipe.html",[0,0.267,3,0.157,4,0.18,5,0.157,8,0.654,15,0.372,17,0.202,18,0.015,19,0.549,20,0.18,27,0.321,28,0.352,29,0.321,31,0.225,32,0.18,47,0.576,75,0.01,76,0.012,77,0.01,106,0.654,120,0.966,184,2.56,283,2.4,346,1.362,360,3.509,363,1.842,365,3.751,370,4.521,626,4.042,762,4.521,763,5.899,764,4.895,765,6.793,766,6.793,767,6.333,768,5.636,769,5.636,770,5.23,771,5.636,772,5.636]],["title/classes/Owner.html",[0,0.187,64,1.571]],["body/classes/Owner.html",[0,0.366,1,1.504,2,0.951,3,0.11,4,0.125,5,0.11,6,1.864,7,1.785,8,0.803,9,1.839,10,0.157,11,0.511,12,1.869,13,1.869,14,1.869,15,0.355,16,1.76,17,0.263,18,0.015,19,0.624,20,0.221,22,1.209,25,2.017,27,0.224,28,0.26,29,0.224,30,1.383,31,0.157,32,0.246,33,2.147,34,2.445,35,1.096,36,1.548,37,1.567,38,2.87,39,3.292,40,3.292,41,2.561,42,2.87,43,2.445,44,2.445,45,1.869,46,1.945,47,0.621,48,1.785,49,1.869,50,1.707,51,1.869,52,1.869,53,1.567,54,1.869,55,1.785,56,1.869,57,1.504,58,0.571,59,2.445,60,2.561,61,1.869,62,2.561,63,2.445,64,2.449,65,2.789,66,2.339,67,1.869,68,1.635,69,1.869,70,1.869,71,1.869,72,1.567,73,1.785,74,1.635,75,0.007,76,0.01,77,0.007,773,3.929,774,3.929,775,3.929,776,3.929,777,3.929]],["title/injectables/RequestCacheService.html",[119,1.149,255,2.452]],["body/injectables/RequestCacheService.html",[0,0.23,3,0.135,4,0.155,5,0.135,10,0.194,11,0.587,15,0.408,17,0.222,18,0.015,20,0.217,27,0.353,28,0.299,29,0.353,31,0.248,32,0.155,47,0.412,75,0.009,76,0.011,77,0.009,101,5.44,105,4.441,106,0.719,108,1.527,109,1.22,119,1.807,120,0.832,123,5.44,125,2.423,154,5.151,173,3.579,177,2.167,255,3.855,257,4.206,275,3.855,277,3.403,303,3.627,324,2.946,346,1.241,393,4.216,569,2.687,586,2.188,778,5.615,779,3.796,780,6.192,781,6.192,782,4.855,783,4.855,784,4.855,785,4.855,786,3.796,787,4.842,788,4.216,789,3.022,790,3.022,791,4.855,792,4.855,793,4.855,794,4.855,795,4.855,796,4.855,797,4.855,798,6.192,799,4.855,800,4.855,801,4.855,802,4.855]],["title/pipes/ReversePipe.html",[283,1.392,803,2.622]],["body/pipes/ReversePipe.html",[0,0.275,3,0.162,4,0.185,5,0.162,8,0.675,15,0.383,17,0.209,18,0.014,20,0.185,27,0.331,28,0.357,29,0.331,31,0.232,32,0.185,47,0.493,75,0.01,76,0.012,77,0.01,106,0.675,109,1.46,120,0.996,158,2.525,283,2.444,360,3.618,363,1.9,365,3.868,366,5.409,367,5.776,369,4.544,370,4.605,803,4.605,804,5.047,805,6.918,806,5.811,807,5.811,808,5.811]],["title/classes/RoleAttribute.html",[0,0.187,417,2.622]],["body/classes/RoleAttribute.html",[0,0.29,2,1.155,3,0.133,4,0.152,5,0.133,6,2.029,8,0.554,9,1.7,10,0.191,11,0.581,15,0.404,16,2.002,17,0.276,18,0.014,19,0.613,20,0.245,25,1.831,27,0.272,28,0.231,29,0.272,30,1.255,31,0.191,32,0.195,33,2.698,35,1.273,36,1.641,46,1.721,47,0.52,75,0.008,76,0.011,77,0.008,106,0.554,211,2.486,297,3.376,299,2.382,301,3.423,302,3.423,338,2.27,404,2.641,405,3.236,406,3.731,407,4.144,408,3.731,409,3.731,410,2.073,411,4.144,417,4.502,422,4.211,423,4.851,424,5.874,566,3.731,567,3.731,809,4.144,810,4.144,811,4.144]],["title/classes/RouteAction.html",[0,0.187,812,2.825]],["body/classes/RouteAction.html",[0,0.27,2,1.378,3,0.159,4,0.181,5,0.159,6,1.981,10,0.228,11,0.648,17,0.263,18,0.014,19,0.571,20,0.233,27,0.324,28,0.275,29,0.324,32,0.181,34,2.586,36,1.557,58,0.828,75,0.01,76,0.012,77,0.01,812,4.901,813,5.447,814,4.944,815,7.595,816,7.768,817,5.693,818,5.693,819,5.693,820,5.693]],["title/classes/Sandbox.html",[0,0.187,42,1.711]],["body/classes/Sandbox.html",[0,0.362,1,1.411,2,0.892,3,0.103,4,0.117,5,0.103,6,1.914,7,1.674,8,0.785,9,1.807,10,0.147,11,0.489,12,1.753,13,1.753,14,1.753,17,0.278,18,0.015,19,0.626,20,0.229,22,1.157,25,1.947,27,0.21,28,0.339,29,0.21,30,1.335,31,0.147,32,0.243,33,2.698,34,2.34,35,1.283,36,1.621,37,1.47,38,2.238,39,2.824,40,2.824,41,2.45,42,2.938,43,3.183,44,2.34,45,1.753,46,1.901,47,0.61,48,2.92,49,3.217,50,1.601,51,1.753,52,1.753,53,1.47,54,1.753,55,1.674,56,1.753,57,1.411,58,0.749,59,2.34,60,2.45,61,1.753,62,2.45,63,2.34,64,2.054,65,1.674,66,2.238,67,1.753,68,1.534,69,1.753,70,1.753,71,1.753,72,1.47,73,1.674,74,1.534,75,0.007,76,0.009,77,0.007,821,3.686,822,3.686,823,3.686,824,3.686,825,3.686,826,3.686,827,3.686,828,3.686]],["title/classes/SandboxList.html",[0,0.187,50,1.711]],["body/classes/SandboxList.html",[0,0.368,1,1.556,2,0.984,3,0.113,4,0.13,5,0.113,6,1.63,7,1.847,8,0.813,9,1.856,10,0.163,11,0.523,12,1.934,13,1.934,14,1.934,15,0.363,16,1.801,17,0.24,18,0.015,19,0.623,20,0.176,22,1.238,25,2.034,27,0.232,28,0.266,29,0.232,30,1.394,31,0.163,32,0.248,33,2.198,34,2.503,35,1.115,36,1.558,37,1.622,38,2.394,39,2.973,40,2.973,41,3.188,42,3.042,43,2.503,44,2.503,45,1.934,46,1.968,47,0.627,48,1.847,49,1.934,50,2.394,51,1.934,52,1.934,53,1.622,54,1.934,55,1.847,56,1.934,57,1.556,58,0.591,59,2.503,60,2.621,61,1.934,62,2.621,63,2.503,64,2.198,65,1.847,66,2.394,67,1.934,68,1.691,69,1.934,70,1.934,71,1.934,72,1.622,73,1.847,74,1.691,75,0.007,76,0.01,77,0.007,829,4.066,830,4.066]],["title/classes/SharedStateContent.html",[0,0.187,831,2.18]],["body/classes/SharedStateContent.html",[0,0.316,2,1.123,3,0.129,4,0.148,5,0.129,6,1.74,8,0.82,9,1.883,10,0.185,11,0.57,15,0.397,16,1.966,17,0.239,18,0.015,19,0.606,20,0.192,22,1.351,25,1.911,27,0.264,28,0.291,29,0.264,30,1.238,31,0.185,32,0.213,35,0.827,46,1.303,47,0.566,75,0.008,76,0.011,77,0.008,106,0.538,211,2.21,337,3.693,410,2.015,428,2.107,441,3.174,456,2.716,494,2.107,497,2.315,831,3.693,832,3.326,833,4.638,834,4.638,835,3.328,836,3.326,837,3.626,838,3.626,839,3.626,840,3.626,841,3.326,842,3.626,843,3.626,844,3.626,845,3.626,846,3.626,847,3.626,848,4.701,849,3.626,850,3.626,851,3.626,852,3.626,853,3.626,854,3.626,855,3.626,856,3.326,857,3.626,858,3.626,859,3.626,860,3.626,861,3.626,862,3.626,863,3.626,864,3.626,865,3.626,866,3.626,867,3.626,868,3.087,869,3.626,870,3.326,871,3.626,872,3.626,873,3.626,874,3.626,875,3.626,876,3.626,877,3.626,878,2.567,879,3.626,880,3.626,881,3.626]],["title/classes/SharedStateEntry.html",[0,0.187,835,2.18]],["body/classes/SharedStateEntry.html",[0,0.284,2,0.909,3,0.105,4,0.12,5,0.105,6,2.089,8,0.752,9,1.771,10,0.15,11,0.495,15,0.344,16,1.706,17,0.289,18,0.015,19,0.612,20,0.254,22,1.456,25,1.754,27,0.214,28,0.313,29,0.214,30,1.113,31,0.15,32,0.191,35,1.07,46,1.055,47,0.509,75,0.007,76,0.009,77,0.007,211,2.382,337,2.079,410,2.605,428,2.724,441,3.81,456,2.199,494,2.724,497,2.993,831,3.319,832,2.693,835,3.319,836,4.301,837,4.689,838,4.689,839,4.689,840,4.689,841,4.301,842,4.689,843,4.689,844,4.689,845,4.689,846,2.936,847,2.936,848,4.08,849,2.936,850,2.936,851,2.936,852,2.936,853,2.936,854,2.936,855,2.936,856,2.693,857,2.936,858,2.936,859,2.936,860,2.936,861,2.936,862,2.936,863,2.936,864,2.936,865,2.936,866,2.936,867,2.936,868,2.499,869,2.936,870,2.693,871,2.936,872,2.936,873,2.936,874,2.936,875,2.936,876,2.936,877,2.936,878,2.079,879,2.936,880,2.936,881,2.936,882,3.755,883,3.755,884,3.755,885,3.755,886,3.755,887,3.755,888,3.755,889,3.755,890,3.755,891,3.755,892,3.755,893,3.755,894,3.755,895,3.755,896,3.755,897,3.755,898,3.755,899,3.755]],["title/classes/SharedStateList.html",[0,0.187,878,2.18]],["body/classes/SharedStateList.html",[0,0.317,2,1.127,3,0.13,4,0.148,5,0.13,6,1.743,8,0.821,9,1.885,10,0.186,11,0.572,15,0.397,16,1.97,17,0.24,18,0.015,19,0.604,20,0.192,22,1.354,25,1.914,27,0.265,28,0.291,29,0.265,30,1.24,31,0.186,32,0.213,35,0.83,46,1.308,47,0.567,75,0.008,76,0.011,77,0.008,211,2.215,337,2.576,410,2.021,428,2.114,441,3.179,456,2.725,494,2.114,497,2.322,831,3.335,832,3.337,835,3.699,836,3.337,837,3.638,838,3.638,839,3.638,840,3.638,841,3.337,842,3.638,843,3.638,844,3.638,845,3.638,846,3.638,847,3.638,848,4.712,849,3.638,850,3.638,851,3.638,852,3.638,853,3.638,854,3.638,855,3.638,856,3.337,857,3.638,858,3.638,859,3.638,860,3.638,861,3.638,862,3.638,863,3.638,864,3.638,865,3.638,866,3.638,867,3.638,868,3.097,869,3.638,870,3.337,871,3.638,872,3.638,873,3.638,874,3.638,875,3.638,876,3.638,877,3.638,878,3.335,879,5.225,880,3.638,881,3.638,900,4.653,901,4.653]],["title/classes/Subscription.html",[0,0.187,57,1.508]],["body/classes/Subscription.html",[0,0.363,1,1.437,2,0.909,3,0.105,4,0.12,5,0.105,6,1.886,7,1.706,8,0.79,9,1.817,10,0.15,11,0.495,12,1.786,13,1.786,14,1.786,17,0.265,18,0.015,19,0.627,20,0.225,22,1.172,25,1.957,27,0.214,28,0.252,29,0.214,30,1.341,31,0.15,32,0.244,33,2.081,34,2.37,35,1.07,36,1.615,37,1.498,38,2.267,39,2.853,40,2.853,41,2.482,42,2.815,43,2.37,44,2.37,45,1.786,46,1.914,47,0.613,48,1.706,49,1.786,50,1.631,51,1.786,52,1.786,53,1.498,54,1.786,55,1.706,56,1.786,57,1.997,58,0.759,59,3.093,60,3.353,61,3.239,62,3.353,63,3.202,64,2.081,65,1.706,66,2.267,67,1.786,68,1.562,69,1.786,70,1.786,71,1.786,72,1.498,73,1.706,74,1.562,75,0.007,76,0.009,77,0.007,902,3.755,903,3.755,904,3.755,905,3.755,906,3.755,907,3.755,908,3.755]],["title/injectables/TcButtonsHelperService.html",[119,1.149,909,2.452]],["body/injectables/TcButtonsHelperService.html",[0,0.203,3,0.119,4,0.136,5,0.119,10,0.171,11,0.541,18,0.015,19,0.482,20,0.227,31,0.228,32,0.136,35,1.144,36,1.582,47,0.58,58,0.932,75,0.008,76,0.01,77,0.008,108,2.152,109,1.719,119,1.663,120,0.733,177,1.802,184,2.59,211,2.358,321,1.572,346,0.857,569,2.367,570,4.056,750,5.569,789,2.663,790,2.663,909,3.549,910,5.45,911,3.714,912,6.413,913,6.413,914,6.413,915,6.413,916,4.277,917,4.277,918,4.277,919,4.277,920,4.277,921,4.59,922,1.511,923,1.706,924,3.992,925,5.014,926,5.569,927,5.014,928,5.569,929,5.701,930,4.277,931,4.277,932,5.255,933,4.277,934,5.701,935,5.701,936,5.701,937,4.277,938,4.277,939,4.277,940,2.846,941,3.714,942,4.277,943,5.701,944,4.277,945,4.277,946,4.277]],["title/classes/TcCoreCommonFunctions.html",[0,0.187,327,1.711]],["body/classes/TcCoreCommonFunctions.html",[0,0.184,2,0.939,3,0.108,4,0.124,5,0.108,10,0.155,11,0.506,15,0.352,18,0.015,19,0.459,20,0.237,27,0.393,28,0.333,29,0.393,31,0.155,32,0.124,36,1.381,47,0.619,55,2.424,75,0.007,76,0.009,77,0.007,106,0.8,108,1.92,109,1.533,137,4.173,177,1.714,183,2.415,184,2.985,315,2.902,326,1.762,327,2.319,329,3.137,330,3.425,536,6.321,560,3.37,626,3.828,640,4.635,643,2.043,701,4.173,712,2.273,770,2.783,947,6.548,948,3.37,949,5.337,950,5.337,951,6.101,952,5.337,953,5.337,954,5.337,955,5.337,956,5.337,957,3.88,958,3.88,959,3.88,960,5.337,961,3.88,962,6.89,963,5.337,964,3.88,965,5.337,966,3.88,967,5.337,968,3.88,969,2.801,970,3.88,971,5.337,972,3.88,973,6.101,974,3.88,975,3.88,976,3.88,977,3.88,978,3.88,979,3.88,980,3.88,981,3.88,982,3.88,983,5.337,984,5.337,985,3.88,986,3.88,987,3.88,988,3.88,989,3.88,990,5.337,991,3.88,992,3.88,993,5.337,994,3.88]],["title/modules/TcCoreLibModule.html",[995,3.08,996,2.825]],["body/modules/TcCoreLibModule.html",[0,0.108,3,0.064,4,0.073,5,0.064,15,0.151,17,0.082,18,0.015,20,0.115,31,0.319,32,0.115,47,0.194,58,0.332,75,0.004,76,0.006,77,0.004,85,3.377,86,3.906,89,1.717,106,0.419,120,0.392,125,1.142,132,1.088,139,1.64,165,2.188,173,1.2,177,1.014,203,2.588,214,1.788,220,1.859,221,1.424,251,4.089,255,3.654,261,1.986,262,1.986,298,1.724,315,1.088,326,1.039,327,0.994,328,1.142,329,2.111,330,1.039,331,1.039,346,0.723,359,4.632,398,4.632,405,0.951,431,1.997,433,2.247,440,2.346,441,1.088,442,1.522,443,1.522,521,4.632,536,2.821,538,3.495,544,3.134,545,1.788,586,0.808,643,0.875,666,1.64,683,1.788,741,2.365,762,4.632,803,4.632,909,3.654,910,1.64,922,1.275,995,1.788,996,5.906,997,1.788,998,1.522,999,0.875,1000,3.882,1001,1.986,1002,4.407,1003,3.882,1004,1.986,1005,1.986,1006,1.986,1007,1.986,1008,2.459,1009,2.459,1010,2.459,1011,2.459,1012,2.459,1013,2.459,1014,2.526,1015,2.459,1016,2.074,1017,2.459,1018,2.459,1019,2.459,1020,2.459,1021,2.459,1022,3.134,1023,1.986,1024,3.495,1025,1.788,1026,3.608,1027,4.469,1028,2.287,1029,4.469,1030,4.469,1031,2.287,1032,4.469,1033,7.149,1034,1.64,1035,2.287,1036,1.327,1037,1.788,1038,2.287,1039,1.788,1040,2.287,1041,5.075,1042,3.608,1043,3.608,1044,2.287,1045,3.608,1046,2.287,1047,4.469,1048,3.608,1049,5.075,1050,4.469,1051,4.469,1052,3.608,1053,4.469,1054,4.469,1055,2.287,1056,4.469,1057,4.469,1058,4.469,1059,4.469,1060,3.608,1061,4.469,1062,3.608,1063,3.608,1064,4.469,1065,3.608,1066,4.469,1067,1.424,1068,4.469,1069,3.608,1070,2.287,1071,3.608,1072,2.287,1073,1.788,1074,3.608,1075,2.287,1076,2.287,1077,2.287,1078,2.287,1079,2.287,1080,2.287,1081,2.287,1082,2.287,1083,2.287,1084,2.287,1085,2.287,1086,1.64,1087,1.986,1088,1.788,1089,2.287,1090,1.986,1091,1.788,1092,2.287,1093,2.287,1094,2.287,1095,2.247,1096,3.134,1097,1.381,1098,1.942,1099,1.788,1100,2.287,1101,1.381,1102,1.788,1103,2.287,1104,1.788,1105,2.287,1106,3.608,1107,1.381,1108,1.788,1109,2.287,1110,3.608,1111,1.788,1112,2.287,1113,1.64,1114,1.986,1115,2.821,1116,1.986,1117,1.986,1118,1.986,1119,1.986,1120,1.986,1121,1.986,1122,2.287,1123,2.287,1124,2.114,1125,2.287,1126,3.882,1127,4.469,1128,2.287,1129,1.64,1130,2.287,1131,2.287]],["title/injectables/TcGeneralConfigService.html",[119,1.149,433,2.452]],["body/injectables/TcGeneralConfigService.html",[0,0.173,3,0.102,4,0.116,5,0.102,10,0.146,15,0.337,17,0.229,18,0.015,19,0.578,20,0.204,22,1.568,27,0.364,28,0.309,29,0.364,31,0.292,32,0.116,35,1.141,36,1.541,47,0.592,58,0.53,75,0.006,76,0.009,77,0.006,91,1.238,106,0.685,107,2.68,109,0.915,119,1.49,120,0.625,126,1.655,129,1.655,133,1.516,158,1.583,177,2.056,209,2.134,211,2.566,220,1.516,257,2.134,275,2.268,277,3.192,283,2.085,303,2.134,315,3.321,321,1.878,323,1.733,324,1.733,326,1.655,327,1.583,328,1.818,329,1.516,330,1.655,331,1.655,338,3.583,346,1.4,404,4.287,405,2.904,428,2.905,431,3.54,433,3.18,441,2.43,442,2.425,453,1.287,474,2.268,476,2.613,486,2.268,494,2.905,569,2.016,570,3.727,643,1.394,789,2.268,790,2.268,831,3.727,835,3.265,878,3.265,1129,2.613,1132,2.848,1133,5.108,1134,5.108,1135,5.108,1136,3.164,1137,5.124,1138,3.164,1139,5.108,1140,3.643,1141,5.108,1142,5.265,1143,5,1144,3.643,1145,5.108,1146,3.643,1147,5,1148,5.9,1149,3.994,1150,5.108,1151,3.164,1152,4.613,1153,2.613,1154,2.848,1155,3.164,1156,2.848,1157,3.994,1158,3.643,1159,2.848,1160,2.848,1161,2.848,1162,2.848,1163,2.848,1164,2.848,1165,2.848,1166,2.848,1167,2.848,1168,2.848,1169,3.164,1170,3.643,1171,3.164,1172,3.643]],["title/injectables/TcGeneralLandingPageConfigService.html",[119,1.149,506,2.622]],["body/injectables/TcGeneralLandingPageConfigService.html",[0,0.144,3,0.085,4,0.097,5,0.085,10,0.122,11,0.426,15,0.296,17,0.211,18,0.015,19,0.578,20,0.209,22,1.475,27,0.335,28,0.284,29,0.335,31,0.271,32,0.097,35,1.05,36,1.557,47,0.637,58,0.652,75,0.005,76,0.008,77,0.005,91,1.034,106,0.619,107,2.851,108,1.412,109,1.34,119,1.309,120,0.522,126,1.382,129,1.382,158,1.321,177,2.127,184,1.382,209,1.782,211,2.414,220,2.218,239,3.799,257,1.782,275,1.894,277,2.937,283,1.884,303,1.782,321,1.649,323,1.447,324,1.447,327,1.321,328,1.518,329,1.265,330,1.382,331,1.382,338,3.533,346,1.316,405,2.9,410,1.321,428,2.673,431,3.257,441,2.134,442,2.024,453,1.075,474,1.894,476,2.182,480,3.508,483,4.153,484,3.858,485,4.22,486,1.894,488,1.782,494,2.673,496,2.986,506,2.986,569,1.684,570,3.759,643,2.041,789,1.894,790,1.894,831,3.474,835,2.951,878,2.951,1129,2.182,1132,2.378,1137,3.897,1138,2.642,1142,4.907,1143,4.601,1147,4.601,1149,3.508,1151,2.642,1152,4.168,1153,2.182,1154,2.378,1155,2.642,1156,2.378,1157,3.508,1159,2.378,1160,2.378,1161,2.378,1162,2.378,1163,2.378,1164,2.378,1165,2.378,1166,2.378,1167,2.378,1168,2.378,1169,2.642,1171,2.642,1173,5.331,1174,5.331,1175,4.487,1176,4.487,1177,4.487,1178,3.042,1179,4.487,1180,3.042,1181,4.487,1182,3.042,1183,4.487,1184,3.042,1185,3.042,1186,3.042,1187,5.331,1188,4.487,1189,3.042,1190,5.331,1191,3.042,1192,4.487,1193,4.487,1194,3.042,1195,3.042,1196,3.042,1197,3.042,1198,3.042,1199,3.042,1200,4.487,1201,3.042,1202,3.042,1203,4.487,1204,4.487,1205,4.487,1206,3.042]],["title/injectables/TcLoginService.html",[119,1.149,1207,2.622]],["body/injectables/TcLoginService.html",[0,0.179,1,2.704,3,0.105,4,0.12,5,0.105,10,0.151,15,0.346,17,0.245,18,0.015,20,0.207,27,0.37,28,0.314,29,0.37,31,0.289,32,0.12,36,1.503,44,3.101,47,0.511,53,2.4,58,0.55,59,2.952,74,2.84,75,0.007,76,0.009,77,0.007,91,1.285,106,0.699,107,3.29,119,1.529,120,0.648,125,1.887,126,1.717,128,4.661,129,1.717,133,1.573,144,5.522,145,4.661,152,2.902,164,1.336,165,1.062,168,3.411,173,3.159,177,2.107,283,2.126,313,2.711,314,4.046,315,3.445,321,1.39,324,3.091,326,1.717,346,1.503,445,2.711,569,2.093,570,3.778,657,2.711,659,2.711,726,4.705,789,2.354,790,2.354,1126,4.553,1207,3.489,1208,3.283,1209,5.242,1210,5.242,1211,3.78,1212,5.242,1213,3.78,1214,5.242,1215,6.511,1216,3.78,1217,5.242,1218,3.78,1219,6.499,1220,3.78,1221,3.78,1222,4.553,1223,3.78,1224,3.78,1225,3.78,1226,3.78,1227,5.242,1228,3.78,1229,5.242,1230,5.242,1231,6.018,1232,3.78,1233,5.227,1234,6.018,1235,6.018,1236,5.227,1237,6.018,1238,5.227,1239,6.018,1240,6.018,1241,5.227,1242,5.227,1243,5.242,1244,3.78,1245,3.78,1246,3.78,1247,3.78,1248,3.78,1249,3.78,1250,3.283,1251,3.283,1252,3.78,1253,3.78,1254,3.78,1255,3.78,1256,3.78,1257,3.78,1258,3.78]],["title/injectables/TcSharedStateService.html",[119,1.149,431,2.18]],["body/injectables/TcSharedStateService.html",[0,0.126,3,0.074,4,0.085,5,0.074,10,0.106,15,0.267,17,0.271,18,0.015,19,0.606,20,0.207,22,1.541,27,0.37,28,0.353,29,0.37,31,0.268,32,0.085,35,0.981,36,1.55,47,0.594,58,0.386,75,0.005,76,0.007,77,0.005,91,0.903,106,0.725,107,3.317,109,0.668,119,1.183,120,0.456,125,1.327,126,1.207,128,1.906,129,1.207,133,1.106,144,5.471,145,4.248,152,2.244,158,1.155,173,2.58,177,2.125,209,1.557,211,2.652,220,1.687,270,1.655,275,1.655,277,2.745,283,2.206,303,1.557,304,3.272,313,1.906,314,3.424,315,3.088,321,1.491,322,2.721,323,2.339,324,1.264,326,1.207,327,1.155,328,1.327,329,1.106,330,1.207,331,1.207,338,3.328,346,1.426,410,2.573,428,3.115,431,2.244,437,4.546,441,3.263,474,1.655,486,1.655,494,3.115,497,2.956,569,1.471,570,3.705,643,1.017,678,2.309,726,3.171,789,1.655,790,1.655,831,3.705,835,2.721,836,4.248,841,4.248,878,3.278,1129,1.906,1142,5.363,1143,5.234,1147,4.301,1149,3.171,1152,3.844,1153,1.906,1154,2.078,1156,2.078,1157,3.171,1159,2.078,1160,2.078,1161,2.078,1162,2.078,1163,2.078,1164,2.078,1165,2.078,1166,2.078,1167,2.078,1168,2.078,1233,3.522,1238,2.309,1241,4.27,1242,4.27,1259,2.309,1260,4.055,1261,4.055,1262,4.055,1263,4.055,1264,4.055,1265,4.055,1266,2.658,1267,4.055,1268,2.658,1269,4.055,1270,2.658,1271,4.055,1272,2.658,1273,4.055,1274,2.658,1275,4.055,1276,2.658,1277,4.055,1278,2.658,1279,4.055,1280,5.5,1281,4.055,1282,4.055,1283,4.916,1284,2.658,1285,2.658,1286,2.658,1287,2.658,1288,2.658,1289,2.658,1290,2.309,1291,2.309,1292,2.658,1293,2.658,1294,2.658,1295,2.658,1296,4.055,1297,4.916,1298,2.658,1299,2.658,1300,4.055,1301,2.658,1302,2.658,1303,2.658]],["title/components/TibcoCloudConfigurationComponent.html",[1008,1.392,1304,0.919]],["body/components/TibcoCloudConfigurationComponent.html",[0,0.125,3,0.073,4,0.084,5,0.073,8,0.467,10,0.105,11,0.381,15,0.265,17,0.223,18,0.015,19,0.486,20,0.226,27,0.15,28,0.264,29,0.15,30,0.906,31,0.258,32,0.084,35,0.717,36,1.246,47,0.223,58,0.382,75,0.005,76,0.007,77,0.005,91,2.112,97,2.055,98,5.056,106,0.305,108,1.721,109,1.374,120,0.451,132,1.25,133,1.093,149,1.749,164,2.714,165,2.285,169,3.404,173,1.379,177,1.372,220,2.031,296,3.039,297,2.941,298,1.659,315,3.076,321,1.795,323,1.25,326,1.194,346,0.806,363,0.859,440,1.379,453,2.626,526,3.817,586,0.929,643,2.553,658,2.702,712,2.355,740,0.929,741,0.893,742,1.048,745,2.121,746,3.01,747,1.048,748,2.484,749,1.912,751,2.11,755,2.87,757,2.11,786,3.143,812,3.922,813,1.885,909,3.404,910,3.501,921,3.203,922,1.42,923,1.947,924,3.039,932,3.501,969,1.379,999,1.006,1008,1.932,1009,0.929,1010,0.929,1011,0.929,1012,0.929,1013,0.929,1014,0.929,1015,0.929,1016,0.929,1017,0.929,1018,0.929,1019,0.929,1020,0.929,1021,0.929,1036,0.966,1073,4.276,1090,2.283,1097,1.006,1098,1.539,1101,1.006,1104,5.627,1107,1.006,1124,1.539,1304,1.139,1305,1.603,1306,1.093,1307,1.093,1308,1.093,1309,1.093,1310,2.543,1311,2.283,1312,1.673,1313,4.882,1314,1.673,1315,4.02,1316,4.882,1317,4.882,1318,4.882,1319,4.882,1320,4.882,1321,4.882,1322,4.882,1323,3.922,1324,4.882,1325,4.02,1326,2.628,1327,2.628,1328,2.628,1329,2.628,1330,2.628,1331,2.628,1332,2.628,1333,2.628,1334,2.628,1335,2.628,1336,4.02,1337,2.628,1338,4.882,1339,4.882,1340,2.628,1341,2.628,1342,2.628,1343,2.628,1344,4.02,1345,2.628,1346,2.628,1347,2.628,1348,2.283,1349,2.628,1350,2.628,1351,2.628,1352,4.749,1353,4.749,1354,4.882,1355,2.729,1356,2.283,1357,1.749,1358,1.749,1359,1.885,1360,1.885,1361,3.501,1362,3.039,1363,2.283,1364,2.225,1365,1.636,1366,1.885,1367,2.055,1368,3.404,1369,3.249,1370,4.276,1371,2.628,1372,2.225,1373,1.749,1374,3.143,1375,2.283,1376,4.226,1377,3.922,1378,3.143,1379,2.676,1380,3.143,1381,2.883,1382,2.883,1383,2.676,1384,2.676,1385,3.491,1386,2.503,1387,3.491,1388,1.636,1389,3.143,1390,3.143,1391,4.02,1392,4.02,1393,2.283,1394,2.283,1395,2.628,1396,2.055,1397,1.885,1398,1.673,1399,1.673,1400,2.275,1401,1.093,1402,1.093,1403,1.093,1404,1.093,1405,1.093,1406,1.093,1407,1.093,1408,1.093,1409,1.093,1410,1.673,1411,1.093,1412,1.093,1413,1.093,1414,1.093,1415,1.093]],["title/components/TibcoCloudErrorComponent.html",[1009,1.392,1304,0.919]],["body/components/TibcoCloudErrorComponent.html",[0,0.145,3,0.086,4,0.098,5,0.086,8,0.524,10,0.123,11,0.428,15,0.298,17,0.212,18,0.015,19,0.445,20,0.201,27,0.175,28,0.286,29,0.175,31,0.181,32,0.098,35,0.956,48,2.051,57,2.262,58,0.446,64,2.357,75,0.005,76,0.008,77,0.005,89,3.24,106,0.356,108,0.965,109,1.135,120,0.526,132,1.46,133,1.277,149,3.005,151,4.884,164,2.747,165,2.267,169,2.811,170,2.042,257,2.645,297,2.254,298,1.534,346,0.615,363,1.003,453,2.655,454,3.531,578,3.922,586,1.084,593,2.665,625,2.042,740,1.084,741,1.043,742,1.224,745,2.328,746,3.085,747,1.224,748,2.684,922,1.084,923,1.224,941,2.665,999,1.175,1008,1.084,1009,2.088,1010,1.084,1011,1.084,1012,1.084,1013,1.084,1014,1.084,1015,1.084,1016,1.084,1017,1.084,1018,1.084,1019,1.084,1020,1.084,1021,1.084,1036,1.128,1091,5.15,1097,1.175,1098,1.729,1101,1.175,1107,1.175,1304,1.25,1305,1.801,1306,1.277,1307,1.277,1308,1.277,1309,1.277,1310,2.327,1312,1.879,1314,1.879,1323,4.238,1398,1.879,1399,1.879,1400,2.458,1401,1.277,1402,1.277,1403,2.229,1404,1.277,1405,1.277,1406,1.277,1407,1.277,1408,1.277,1409,1.277,1410,1.879,1411,1.277,1412,1.277,1413,1.277,1414,1.277,1415,1.277,1416,2.665,1417,5.358,1418,4.516,1419,6.987,1420,5.358,1421,2.399,1422,3.068,1423,3.068,1424,3.068,1425,7.252,1426,4.516,1427,7.252,1428,4.516,1429,6.012,1430,5.909,1431,5.909,1432,4.516,1433,4.516,1434,3.922,1435,4.516,1436,4.516,1437,4.516,1438,4.516,1439,6.587,1440,6.587,1441,4.516,1442,4.516,1443,4.516,1444,4.516,1445,4.516,1446,4.516,1447,3.068,1448,3.068,1449,2.665,1450,5.909,1451,3.068,1452,3.068,1453,3.068,1454,3.068,1455,3.068,1456,4.516,1457,4.516,1458,3.068,1459,3.068,1460,3.068,1461,3.068,1462,4.516]],["title/components/TibcoCloudLoginComponent.html",[1010,1.392,1304,0.919]],["body/components/TibcoCloudLoginComponent.html",[0,0.136,1,2.187,3,0.12,4,0.091,5,0.08,8,0.498,10,0.115,11,0.407,15,0.283,17,0.256,18,0.015,19,0.483,20,0.239,27,0.293,28,0.322,29,0.163,30,0.796,31,0.257,32,0.091,47,0.243,53,2.793,57,1.969,58,0.624,68,2.672,72,2.562,74,2.14,75,0.005,76,0.008,77,0.005,89,1.363,91,0.973,106,0.498,107,2.337,108,0.901,109,0.72,120,0.491,126,1.301,129,1.301,138,3.078,157,1.907,158,2.482,164,2.747,165,2.31,166,2.488,167,2.24,168,3.892,220,1.192,228,4.467,230,2.054,274,2.488,277,1.43,298,1.458,321,1.577,324,1.363,346,0.86,363,0.936,438,3.355,440,1.504,447,2.24,453,2.667,586,1.516,740,1.012,741,0.973,742,1.143,745,2.235,746,3.053,747,1.143,748,2.595,749,2.041,751,2.252,755,2.7,757,2.252,868,1.907,922,1.012,923,1.143,940,2.856,999,1.096,1008,1.012,1009,1.012,1010,2.019,1011,1.012,1012,1.012,1013,1.012,1014,1.012,1015,1.012,1016,1.012,1017,1.012,1018,1.012,1019,1.012,1020,1.012,1021,1.012,1036,1.053,1039,5.902,1097,1.096,1098,1.642,1101,1.096,1107,1.096,1207,3.803,1215,4.468,1250,3.727,1304,1.2,1305,1.712,1306,1.192,1307,1.192,1308,1.192,1309,1.192,1310,2.667,1312,1.785,1314,1.785,1355,2.142,1372,2.375,1386,2.671,1390,2.24,1398,1.785,1399,1.785,1400,2.377,1401,1.192,1402,1.192,1403,1.192,1404,1.192,1405,1.192,1406,1.192,1407,1.192,1408,1.192,1409,1.192,1410,1.785,1411,1.192,1412,1.192,1413,1.192,1414,1.192,1415,1.192,1463,2.488,1464,5.145,1465,4.291,1466,5.145,1467,4.468,1468,6.119,1469,5.713,1470,5.145,1471,2.488,1472,4.291,1473,3.727,1474,2.865,1475,2.865,1476,2.865,1477,2.865,1478,2.865,1479,2.865,1480,2.865,1481,2.865,1482,2.865,1483,2.865,1484,2.865,1485,2.865,1486,2.865,1487,2.488,1488,2.865,1489,2.865,1490,2.865,1491,2.865,1492,2.865,1493,2.865,1494,4.468,1495,4.291,1496,2.865,1497,2.865,1498,2.865,1499,2.865,1500,2.865,1501,2.865,1502,2.865,1503,2.865,1504,2.865,1505,2.865,1506,2.865,1507,2.865,1508,2.865,1509,2.865,1510,2.865,1511,2.865,1512,3.727,1513,4.291,1514,5.315,1515,2.488,1516,2.488,1517,2.865,1518,3.078,1519,3.355,1520,3.727,1521,2.865,1522,2.865]],["title/components/TibcoCloudMenuBarComponent.html",[1011,1.392,1304,0.919]],["body/components/TibcoCloudMenuBarComponent.html",[0,0.154,3,0.091,4,0.15,5,0.091,8,0.546,10,0.13,15,0.31,17,0.231,18,0.014,19,0.354,20,0.226,27,0.185,28,0.293,29,0.185,30,0.602,31,0.221,32,0.103,35,0.579,58,0.805,75,0.006,76,0.008,77,0.006,106,0.546,108,1.021,109,0.816,120,0.557,164,2.802,165,2.27,178,3.684,211,1.193,220,1.351,298,2.635,321,1.193,346,0.651,363,1.061,453,2.723,494,2.514,586,1.663,643,2.717,658,3.719,712,1.901,714,4.327,740,1.147,741,1.103,742,1.295,745,2.404,746,3.11,747,1.295,748,2.757,749,2.238,751,2.47,755,2.47,757,1.704,921,2.756,922,2.276,923,2.208,924,2.929,925,3.679,932,3.375,940,3.684,969,1.704,999,1.243,1008,1.147,1009,1.147,1010,1.147,1011,2.144,1012,1.147,1013,1.147,1014,1.147,1015,1.147,1016,1.147,1017,1.147,1018,1.147,1019,1.147,1020,1.147,1021,2.596,1036,1.193,1086,2.328,1087,2.819,1088,4.327,1097,1.243,1098,1.801,1101,1.243,1107,1.243,1124,1.901,1304,1.291,1305,1.877,1306,1.351,1307,1.351,1308,1.351,1309,1.351,1310,1.955,1312,1.958,1314,1.958,1355,2.348,1357,2.161,1358,2.161,1361,3.375,1362,2.929,1363,2.819,1364,3.566,1365,2.021,1368,2.021,1369,2.161,1379,2.161,1380,2.538,1381,3.375,1382,2.328,1384,3.132,1386,2.929,1388,2.929,1389,3.679,1390,2.538,1394,4.087,1398,1.958,1399,1.958,1400,2.525,1401,1.351,1402,1.351,1403,1.351,1404,1.351,1405,1.351,1406,1.351,1407,1.351,1408,1.351,1409,1.351,1410,1.958,1411,1.351,1412,1.351,1413,1.351,1414,1.351,1415,1.351,1518,2.328,1523,2.819,1524,3.679,1525,5.534,1526,5.534,1527,4.705,1528,4.087,1529,5.271,1530,4.087,1531,4.087,1532,3.246,1533,5.835,1534,3.246,1535,3.246,1536,4.087,1537,3.246,1538,3.246,1539,3.246,1540,3.246,1541,2.819,1542,3.246,1543,2.538,1544,3.246,1545,2.819,1546,3.246,1547,3.132,1548,4.087,1549,3.679,1550,2.538,1551,2.538,1552,2.538,1553,2.538,1554,4.621,1555,2.161,1556,2.328,1557,4.327,1558,4.327,1559,2.538,1560,4.807,1561,2.161,1562,3.246]],["title/components/TibcoCloudMultipleSubscriptionComponent.html",[1012,1.392,1304,0.919]],["body/components/TibcoCloudMultipleSubscriptionComponent.html",[0,0.137,1,1.979,3,0.081,4,0.092,5,0.081,10,0.115,11,0.409,17,0.206,18,0.015,20,0.205,27,0.165,28,0.297,29,0.165,30,0.959,31,0.207,32,0.092,36,1.292,43,1.312,57,2.87,58,0.628,63,1.961,64,1.722,65,1.961,75,0.005,76,0.008,77,0.005,89,1.374,91,0.981,108,0.909,109,0.726,120,0.495,138,4.115,139,2.071,149,1.922,158,2.246,164,2.75,165,2.271,168,3.223,183,1.798,220,1.202,221,2.688,228,4.801,298,1.467,321,1.062,346,0.866,363,0.944,440,1.516,453,2.671,497,1.442,625,2.873,643,2.196,701,2.258,723,3.376,740,1.02,741,0.981,742,1.152,746,3.057,747,1.152,749,2.054,751,2.266,755,2.714,757,2.266,760,3.75,922,1.02,923,1.152,969,1.516,999,1.106,1008,1.02,1009,1.02,1010,1.02,1011,1.02,1012,2.027,1013,1.02,1014,1.02,1015,1.02,1016,1.02,1017,1.02,1018,1.02,1019,1.02,1020,1.02,1021,1.02,1036,2.905,1037,5.221,1097,1.979,1098,1.653,1101,1.106,1107,1.106,1207,3.818,1222,3.75,1251,3.75,1304,1.637,1305,1.722,1306,1.202,1307,1.202,1308,1.202,1309,1.202,1310,2.359,1312,1.796,1314,1.796,1355,1.442,1364,2.39,1365,1.798,1367,2.258,1368,2.688,1369,2.873,1372,1.599,1376,3.096,1377,2.071,1382,2.071,1383,1.922,1386,3.219,1388,1.798,1389,3.376,1396,2.258,1397,3.096,1398,1.796,1399,1.796,1400,2.387,1401,1.202,1402,1.202,1403,1.202,1404,1.202,1405,1.202,1406,1.202,1407,1.202,1408,1.202,1409,1.202,1410,1.796,1411,1.202,1412,1.202,1413,1.202,1414,1.202,1415,1.202,1434,3.75,1467,4.49,1471,2.508,1473,3.75,1487,2.508,1494,3.75,1514,5.333,1515,2.508,1516,2.508,1518,2.071,1519,3.376,1520,2.508,1547,1.922,1563,2.508,1564,7.347,1565,7.147,1566,4.317,1567,5.737,1568,4.317,1569,3.096,1570,5.17,1571,4.317,1572,5.17,1573,5.17,1574,4.317,1575,4.317,1576,5.737,1577,2.888,1578,5.737,1579,2.888,1580,4.317,1581,2.888,1582,4.317,1583,4.317,1584,3.75,1585,3.75,1586,4.317,1587,2.888,1588,2.888,1589,2.888,1590,2.888,1591,2.888,1592,2.888,1593,4.317,1594,4.317,1595,4.317,1596,4.317,1597,2.888,1598,2.888,1599,2.888,1600,2.508,1601,2.888,1602,2.888,1603,2.888,1604,2.888,1605,2.071,1606,2.071,1607,2.888,1608,2.888,1609,4.317,1610,3.75,1611,2.508]],["title/components/TibcoCloudNavbarComponent.html",[1013,1.392,1304,0.919]],["body/components/TibcoCloudNavbarComponent.html",[0,0.16,3,0.094,4,0.107,5,0.094,8,0.561,10,0.135,11,0.459,15,0.319,17,0.222,18,0.015,19,0.492,20,0.217,27,0.192,28,0.316,29,0.192,30,1.049,31,0.226,32,0.107,36,1.134,58,0.49,75,0.006,76,0.009,77,0.006,91,1.921,106,0.391,108,1.061,109,0.847,120,0.578,133,1.403,152,1.866,158,2.841,164,2.805,165,2.298,177,0.947,220,1.403,230,2.418,270,2.099,285,2.636,298,1.643,315,3.237,326,1.531,327,1.465,328,1.683,329,1.403,330,1.531,331,1.531,333,2.418,346,0.969,363,1.102,453,2.74,534,2.928,586,1.191,711,4.199,740,1.191,741,1.145,742,1.345,745,2.456,746,3.127,747,1.345,748,2.806,749,2.3,813,3.468,922,1.191,923,1.345,927,5.113,999,1.29,1008,1.191,1009,1.191,1010,1.191,1011,1.191,1012,1.191,1013,2.182,1014,1.191,1015,1.191,1016,1.191,1017,1.191,1018,1.191,1019,1.191,1020,1.191,1021,1.191,1034,5.027,1036,1.239,1097,1.29,1098,1.851,1101,1.29,1107,1.29,1136,2.928,1304,1.319,1305,1.929,1306,2.352,1307,1.403,1308,1.403,1309,1.403,1310,2.477,1312,2.012,1314,2.012,1398,2.352,1399,2.012,1400,2.72,1401,1.403,1402,1.403,1403,1.403,1404,1.403,1405,1.403,1406,1.403,1407,1.403,1408,1.403,1409,1.403,1410,2.012,1411,1.403,1412,1.403,1413,1.403,1414,1.403,1415,1.403,1612,2.636,1613,6.176,1614,5.654,1615,4.835,1616,5.654,1617,5.654,1618,5.654,1619,5.654,1620,4.835,1621,3.371,1622,3.371,1623,3.371,1624,5.654,1625,2.418,1626,4.835,1627,3.371,1628,2.928,1629,3.371,1630,3.371,1631,3.781,1632,6.176,1633,3.371,1634,3.371,1635,3.371,1636,3.371,1637,4.835,1638,3.371,1639,3.371,1640,3.371,1641,3.371,1642,3.371,1643,3.371,1644,3.371,1645,3.371,1646,3.371,1647,3.371,1648,5.654,1649,3.371,1650,3.371,1651,3.371,1652,3.371,1653,3.371,1654,3.371,1655,3.371,1656,3.371,1657,3.371,1658,2.418,1659,3.371]],["title/components/TibcoCloudNewElementComponent.html",[1014,1.392,1304,0.919]],["body/components/TibcoCloudNewElementComponent.html",[0,0.167,3,0.098,4,0.112,5,0.098,10,0.141,11,0.473,15,0.329,17,0.248,18,0.014,19,0.519,20,0.226,27,0.201,28,0.351,29,0.201,31,0.199,32,0.112,35,1.124,36,1.565,58,0.725,75,0.006,76,0.009,77,0.006,106,0.409,120,0.603,164,2.819,165,2.31,212,3.057,285,2.752,298,1.694,346,1.624,363,1.15,422,2.191,448,4.924,453,2.757,530,4.424,586,1.243,658,1.948,740,1.243,741,1.196,742,1.404,746,3.145,747,1.404,759,5.47,856,2.524,868,2.342,922,1.243,923,1.404,999,1.347,1008,1.243,1009,1.243,1010,1.243,1011,1.243,1012,1.243,1013,1.243,1014,2.225,1015,1.243,1016,1.243,1017,1.243,1018,1.243,1019,1.243,1020,1.243,1021,1.243,1036,1.294,1067,2.191,1097,1.347,1098,1.908,1101,1.347,1107,1.347,1113,5.201,1304,1.35,1305,1.989,1306,1.464,1307,1.464,1308,1.464,1309,1.464,1310,2.562,1312,2.074,1314,2.074,1355,1.757,1373,2.342,1393,3.057,1398,2.074,1399,2.62,1400,2.62,1401,1.464,1402,1.464,1403,1.464,1404,1.464,1405,1.464,1406,1.464,1407,1.464,1408,1.464,1409,1.464,1410,2.074,1411,1.464,1412,1.464,1413,1.464,1414,1.464,1415,1.464,1518,2.524,1625,2.524,1660,3.057,1661,5.79,1662,4.986,1663,5.47,1664,6.648,1665,3.519,1666,6.648,1667,4.986,1668,3.519,1669,4.986,1670,3.519,1671,3.519,1672,3.519,1673,3.519,1674,3.519,1675,3.519,1676,3.519,1677,3.519,1678,3.519,1679,4.986,1680,2.752,1681,4.986,1682,3.519,1683,3.519]],["title/components/TibcoCloudSelectTableComponent.html",[1015,1.392,1304,0.919]],["body/components/TibcoCloudSelectTableComponent.html",[0,0.13,3,0.076,4,0.087,5,0.076,10,0.109,11,0.393,15,0.274,17,0.257,18,0.015,19,0.42,20,0.24,27,0.342,28,0.327,29,0.342,31,0.2,32,0.087,35,0.74,36,1.004,58,0.398,75,0.005,76,0.007,77,0.005,91,0.93,106,0.733,108,1.757,109,1.404,120,0.47,133,1.139,164,2.743,165,2.261,177,1.407,298,1.409,346,1.004,363,0.895,422,1.705,440,1.437,453,2.646,523,3.243,568,4.006,586,2.12,625,1.823,626,2.975,740,0.968,741,0.93,742,1.092,745,1.19,746,3.031,747,1.092,748,2.274,749,1.973,751,2.177,755,2.932,757,2.177,922,0.968,923,1.997,969,1.437,999,1.048,1008,0.968,1009,0.968,1010,0.968,1011,0.968,1012,0.968,1013,0.968,1014,0.968,1015,1.973,1016,0.968,1017,0.968,1018,0.968,1019,0.968,1020,2.646,1021,0.968,1036,1.007,1095,4.084,1096,2.378,1097,2.958,1098,1.588,1101,1.048,1107,1.048,1124,2.43,1304,1.168,1305,1.655,1306,1.139,1307,1.139,1308,1.139,1309,1.139,1310,2.231,1312,1.726,1314,1.726,1348,4.349,1360,1.964,1362,3.117,1364,1.516,1372,2.296,1373,1.823,1379,4.203,1398,1.726,1399,2.083,1400,2.324,1401,1.139,1402,1.139,1403,1.139,1404,1.139,1405,1.139,1406,1.139,1407,1.139,1408,1.139,1409,1.139,1410,1.726,1411,1.139,1412,1.139,1413,1.139,1414,1.139,1415,1.139,1449,3.603,1524,3.243,1533,6.223,1543,2.141,1553,2.141,1561,1.823,1605,1.964,1606,1.964,1625,2.975,1684,2.141,1685,3.994,1686,4.349,1687,3.603,1688,4.006,1689,3.243,1690,3.603,1691,3.243,1692,2.975,1693,4.148,1694,3.603,1695,3.603,1696,4.349,1697,3.603,1698,5.007,1699,2.739,1700,2.378,1701,2.739,1702,2.378,1703,4.148,1704,2.739,1705,2.739,1706,4.148,1707,2.378,1708,2.378,1709,2.739,1710,2.378,1711,2.739,1712,2.378,1713,2.739,1714,2.739,1715,2.378,1716,2.739,1717,1.823,1718,2.739,1719,2.739,1720,2.141,1721,2.378,1722,2.378,1723,2.378,1724,2.378,1725,2.378,1726,2.378,1727,2.378,1728,2.739,1729,2.141,1730,2.378,1731,2.739,1732,2.141,1733,2.378,1734,2.739,1735,2.739,1736,4.148,1737,2.739,1738,2.739,1739,2.739,1740,2.141,1741,2.739,1742,4.148,1743,2.739,1744,2.739,1745,4.148,1746,2.739,1747,2.739,1748,3.603,1749,2.739,1750,2.739,1751,2.739,1752,2.739,1753,2.739,1754,2.739,1755,2.739,1756,3.603,1757,3.603,1758,4.148,1759,5.585,1760,2.378,1761,4.148,1762,2.739,1763,2.739,1764,2.739,1765,2.739,1766,2.378,1767,2.141,1768,2.378,1769,2.378,1770,2.378,1771,2.141,1772,2.141,1773,2.378,1774,2.378,1775,2.739,1776,2.378,1777,2.378,1778,2.378]],["title/components/TibcoCloudSettingLandingComponent.html",[1016,1.392,1304,0.919]],["body/components/TibcoCloudSettingLandingComponent.html",[0,0.118,3,0.069,4,0.079,5,0.069,8,0.447,10,0.154,11,0.365,15,0.254,17,0.241,18,0.015,19,0.399,20,0.232,22,0.865,27,0.142,28,0.257,29,0.142,31,0.262,32,0.079,36,1.424,37,1.88,47,0.211,58,0.56,75,0.008,76,0.007,77,0.004,91,2.52,106,0.547,108,1.211,109,0.967,120,0.426,132,1.181,136,2.157,157,2.562,163,2.396,164,2.705,165,2.294,168,1.304,169,2.396,177,1.492,184,1.128,211,0.913,225,2.157,239,3.014,277,1.24,297,3.032,298,1.308,321,1.732,323,1.831,338,2.242,346,1.348,363,0.812,405,1.96,410,1.672,417,3.822,423,2.76,428,2.141,440,1.304,443,1.653,453,2.597,456,1.455,458,3.009,483,2.608,484,3.625,488,3.364,492,3.109,496,1.653,497,1.24,501,1.653,505,4.093,506,3.533,530,1.653,586,1.875,643,0.951,658,1.375,679,3.009,736,2.76,740,0.878,741,0.844,742,0.991,745,2.047,746,2.981,747,0.991,748,2.411,922,0.878,923,0.991,999,0.951,1008,0.878,1009,0.878,1010,0.878,1011,0.878,1012,0.878,1013,0.878,1014,1.36,1015,0.878,1016,1.875,1017,0.878,1018,0.878,1019,0.878,1020,0.878,1021,0.878,1036,0.913,1067,1.546,1097,0.951,1098,3.079,1101,0.951,1107,0.951,1111,5.748,1113,1.781,1114,2.157,1304,1.099,1305,1.535,1306,1.033,1307,1.033,1308,1.033,1309,1.033,1310,2.597,1312,1.601,1314,1.601,1323,3.807,1355,1.24,1372,1.375,1398,1.601,1399,1.96,1400,2.208,1401,1.033,1402,1.033,1403,1.033,1404,1.033,1405,1.033,1406,1.033,1407,1.033,1408,1.033,1409,1.033,1410,1.601,1411,1.033,1412,1.033,1413,1.033,1414,1.033,1415,1.033,1421,1.942,1555,1.653,1663,2.157,1680,4.15,1748,3.343,1779,2.157,1780,4.712,1781,3.849,1782,4.712,1783,4.093,1784,4.712,1785,4.712,1786,4.712,1787,4.712,1788,4.712,1789,4.712,1790,5.308,1791,4.61,1792,4.093,1793,4.61,1794,5.308,1795,3.849,1796,2.484,1797,2.484,1798,2.484,1799,2.484,1800,2.484,1801,2.484,1802,2.484,1803,2.484,1804,2.484,1805,2.484,1806,2.484,1807,2.484,1808,3.849,1809,2.484,1810,3.849,1811,2.484,1812,2.484,1813,2.484,1814,2.484,1815,2.484,1816,2.484,1817,2.484,1818,2.484,1819,2.484,1820,5.743,1821,2.157,1822,3.343,1823,3.343,1824,2.157,1825,2.157,1826,2.484,1827,4.712,1828,2.484,1829,2.484,1830,2.484,1831,2.484,1832,2.484,1833,2.484,1834,2.484,1835,2.484,1836,2.484,1837,2.484,1838,2.484,1839,3.849,1840,2.484,1841,2.484,1842,2.484,1843,2.484,1844,3.849,1845,3.849,1846,3.849,1847,3.849,1848,3.849,1849,3.849]],["title/components/TibcoCloudSettingMenuEntryComponent.html",[1017,1.392,1304,0.919]],["body/components/TibcoCloudSettingMenuEntryComponent.html",[0,0.156,3,0.092,4,0.105,5,0.092,8,0.552,10,0.132,15,0.314,17,0.219,18,0.014,19,0.508,20,0.222,27,0.188,28,0.295,29,0.188,30,1.134,31,0.132,32,0.105,35,0.588,58,0.811,75,0.006,76,0.008,77,0.006,106,0.552,120,0.565,164,2.797,165,2.3,178,2.194,298,2.73,303,2.786,304,3.715,346,0.954,363,1.077,453,2.73,493,4.314,526,3.72,586,1.681,712,1.93,740,1.164,741,1.12,742,1.315,745,2.425,746,3.117,747,1.315,748,2.776,749,2.263,751,2.497,755,3.208,757,2.497,922,1.164,923,1.315,924,3.805,969,2.497,999,1.262,1008,1.164,1009,1.164,1010,1.164,1011,1.164,1012,1.164,1013,1.164,1014,1.164,1015,1.164,1016,1.164,1017,2.16,1018,1.164,1019,1.164,1020,1.164,1021,1.164,1036,1.212,1073,2.577,1097,1.262,1098,3.076,1099,5.573,1101,1.262,1107,1.262,1124,2.786,1304,1.302,1305,1.898,1306,1.371,1307,1.371,1308,1.371,1309,1.371,1310,2.518,1312,1.979,1314,1.979,1352,2.862,1353,2.862,1355,2.374,1357,3.166,1358,3.166,1359,3.412,1362,2.962,1364,3.945,1365,2.962,1366,2.364,1368,2.052,1383,2.194,1384,2.194,1388,3.475,1398,1.979,1399,1.979,1400,2.543,1401,1.371,1402,1.371,1403,1.371,1404,1.371,1405,1.371,1406,1.371,1407,1.371,1408,1.371,1409,1.371,1410,1.979,1411,1.371,1412,1.371,1413,1.371,1414,1.371,1415,1.371,1547,2.194,1554,4.993,1555,3.166,1556,3.412,1557,2.577,1558,2.577,1561,2.194,1600,2.862,1605,2.364,1606,2.364,1850,2.862,1851,5.582,1852,4.757,1853,4.757,1854,5.582,1855,4.757,1856,3.296,1857,3.296,1858,3.296,1859,3.296,1860,4.757,1861,3.296,1862,3.296,1863,3.296,1864,4.757,1865,4.757,1866,2.862,1867,3.296,1868,2.862,1869,3.296]],["title/components/TibcoCloudSettingsGeneralComponent.html",[1018,1.392,1304,0.919]],["body/components/TibcoCloudSettingsGeneralComponent.html",[0,0.136,3,0.08,4,0.091,5,0.08,8,0.499,10,0.115,11,0.407,15,0.283,17,0.239,18,0.015,19,0.43,20,0.234,22,0.965,27,0.163,28,0.276,29,0.163,31,0.257,32,0.091,36,1.596,37,2.053,47,0.243,58,0.417,75,0.008,76,0.008,77,0.005,89,1.364,106,0.499,108,1.799,109,1.079,120,0.492,132,1.364,157,2.858,158,1.866,164,2.748,165,2.303,168,1.505,169,2.673,211,1.579,218,5.317,297,2.143,298,1.459,321,1.579,322,1.587,323,1.364,346,0.575,363,0.937,404,3.557,405,2.547,406,4.025,408,4.025,409,4.025,410,2.236,428,2.338,432,4.471,433,3.559,440,1.505,443,1.908,453,2.668,456,1.68,586,1.013,658,1.587,679,3.358,736,3.08,740,1.013,741,0.974,742,1.144,745,2.236,746,3.053,747,1.144,748,2.597,767,2.49,870,2.057,922,1.013,923,1.144,999,1.098,1008,1.013,1009,1.013,1010,1.013,1011,1.013,1012,1.013,1013,1.013,1014,1.013,1015,1.013,1016,1.013,1017,1.013,1018,2.02,1019,1.013,1020,1.013,1021,1.013,1036,1.054,1067,1.785,1097,1.098,1098,1.644,1101,3.11,1102,5.799,1107,1.098,1236,2.49,1304,1.201,1305,1.713,1306,1.193,1307,1.193,1308,1.193,1309,1.193,1310,2.621,1312,1.787,1314,1.787,1323,4.609,1355,1.431,1375,2.49,1398,1.787,1399,1.787,1400,2.378,1401,1.193,1402,1.193,1403,1.193,1404,1.193,1405,1.193,1406,1.193,1407,1.193,1408,1.193,1409,1.193,1410,1.787,1411,1.193,1412,1.193,1413,1.193,1414,1.193,1415,1.193,1421,2.242,1429,3.358,1783,4.471,1791,4.471,1792,4.471,1793,4.965,1821,3.73,1822,3.73,1823,3.73,1824,2.49,1825,2.49,1870,2.49,1871,5.148,1872,4.294,1873,5.148,1874,5.716,1875,4.294,1876,2.867,1877,2.867,1878,2.867,1879,2.867,1880,2.867,1881,2.867,1882,2.867,1883,2.867,1884,2.867,1885,2.867,1886,2.867,1887,4.294,1888,2.867,1889,2.867,1890,2.867,1891,2.867,1892,2.867,1893,2.867,1894,2.867,1895,2.867,1896,2.867,1897,2.867,1898,2.867,1899,2.867,1900,2.867,1901,2.867,1902,2.867,1903,2.867,1904,4.294,1905,2.867]],["title/components/TibcoCloudSplashScreenComponent.html",[1019,1.392,1304,0.919]],["body/components/TibcoCloudSplashScreenComponent.html",[0,0.115,3,0.068,4,0.207,5,0.068,8,0.438,10,0.097,11,0.358,15,0.249,17,0.204,18,0.015,19,0.452,20,0.207,28,0.224,30,1.053,31,0.209,32,0.077,58,0.674,75,0.004,76,0.007,77,0.004,106,0.281,108,0.761,109,0.608,120,0.415,151,1.735,164,2.68,165,2.252,239,1.27,298,1.281,315,1.151,321,0.889,323,1.151,326,1.099,327,1.051,328,1.208,329,1.007,330,1.099,331,1.099,346,0.756,363,0.791,405,1.007,422,1.506,423,2.705,453,2.584,484,1.339,492,2.714,493,4.177,494,1.713,498,4.069,501,3.084,523,2.949,586,1.637,632,3.275,643,2.003,712,3.52,740,0.855,741,0.822,742,0.965,745,2.013,746,2.967,747,0.965,748,2.377,749,1.794,751,1.979,755,2.747,757,1.979,786,2.949,922,0.855,923,0.965,940,1.61,969,2.978,999,0.926,1008,0.855,1009,0.855,1010,0.855,1011,0.855,1012,0.855,1013,0.855,1014,0.855,1015,0.855,1016,0.855,1017,0.855,1018,0.855,1019,1.849,1020,0.855,1021,0.855,1036,0.889,1097,0.926,1098,1.444,1101,0.926,1107,3.057,1108,5.215,1124,3.323,1304,1.081,1305,1.504,1306,1.007,1307,1.007,1308,1.007,1309,1.007,1310,2.357,1312,1.569,1314,1.569,1355,3.24,1357,3.776,1358,4,1359,2.705,1360,4.31,1361,2.705,1362,4.152,1364,4.351,1365,3.532,1366,1.735,1368,1.506,1369,3.084,1370,1.892,1372,2.897,1374,1.892,1376,4.784,1377,3.324,1378,3.624,1379,4,1380,4.092,1381,2.705,1383,3.483,1384,1.61,1386,3.742,1387,3.275,1388,3.742,1396,3.624,1397,2.705,1398,1.569,1399,1.569,1400,2.177,1401,1.007,1402,1.007,1403,1.007,1404,1.007,1405,1.007,1406,1.007,1407,1.007,1408,1.007,1409,1.007,1410,1.569,1411,1.007,1412,1.007,1413,1.007,1414,1.007,1415,1.007,1519,4.436,1545,3.275,1547,2.51,1549,3.624,1550,4.907,1551,5.215,1552,5.076,1554,5.244,1555,3.776,1556,4.069,1559,1.892,1569,1.735,1611,2.101,1680,1.892,1740,4.092,1767,3.624,1772,4.699,1866,3.275,1868,2.101,1906,2.101,1907,3.771,1908,4.634,1909,3.771,1910,4.634,1911,4.634,1912,4.634,1913,3.771,1914,2.419,1915,2.419,1916,2.419,1917,2.419,1918,2.419,1919,2.419,1920,1.892,1921,2.419,1922,3.771,1923,3.771,1924,3.771,1925,3.771,1926,3.771,1927,2.419,1928,2.419,1929,2.419,1930,2.419,1931,2.419,1932,3.771,1933,3.771,1934,3.771,1935,2.419,1936,4.634,1937,2.419,1938,2.419,1939,2.419,1940,5.233,1941,2.419,1942,2.419,1943,3.771,1944,2.419,1945,2.419,1946,3.771,1947,5.233,1948,2.419,1949,2.419,1950,3.771,1951,2.419,1952,3.771,1953,2.419,1954,2.419,1955,2.419,1956,2.419,1957,2.419,1958,2.419,1959,2.419,1960,2.419,1961,2.419,1962,3.771,1963,3.771]],["title/components/TibcoCloudTableComponent.html",[1020,1.392,1304,0.919]],["body/components/TibcoCloudTableComponent.html",[0,0.131,3,0.077,4,0.133,5,0.077,8,0.484,10,0.11,11,0.395,15,0.275,17,0.243,18,0.015,19,0.495,20,0.229,27,0.238,28,0.291,29,0.238,30,0.774,31,0.224,32,0.088,35,0.897,47,0.354,75,0.005,76,0.007,77,0.005,91,0.937,106,0.651,108,1.582,109,1.263,120,0.473,149,2.775,164,2.745,165,2.297,177,1.575,298,1.417,327,1.198,328,1.376,329,1.147,330,1.253,331,1.253,337,1.526,346,0.836,363,0.901,422,1.717,453,2.649,477,2.156,586,1.777,643,1.596,740,0.974,741,0.937,742,1.1,745,2.184,746,3.034,747,1.1,748,2.546,749,1.984,922,0.974,923,2.006,969,1.447,999,1.055,1008,0.974,1009,0.974,1010,0.974,1011,0.974,1012,0.974,1013,0.974,1014,0.974,1015,0.974,1016,0.974,1017,0.974,1018,0.974,1019,0.974,1020,1.98,1021,0.974,1036,1.014,1067,1.717,1095,4.529,1097,1.055,1098,1.596,1101,1.055,1107,1.055,1304,1.173,1305,1.663,1306,1.147,1307,1.147,1308,1.147,1309,1.147,1310,2.57,1312,1.735,1314,1.735,1360,1.978,1362,3.13,1364,1.526,1372,2.308,1373,1.835,1379,3.73,1398,1.735,1399,2.092,1400,2.332,1401,1.147,1402,1.147,1403,1.147,1404,1.147,1405,1.147,1406,1.147,1407,1.147,1408,1.147,1409,1.147,1410,1.735,1411,1.147,1412,1.147,1413,1.147,1414,1.147,1415,1.147,1553,2.156,1561,1.835,1625,2.991,1628,2.395,1658,1.978,1684,2.156,1685,4.376,1686,4.367,1687,3.621,1688,4.716,1689,4.382,1690,4.367,1691,3.931,1692,3.606,1694,3.621,1695,3.621,1696,4.868,1697,4.367,1700,2.395,1702,2.395,1707,2.395,1708,3.621,1710,3.621,1712,2.395,1715,2.395,1717,3.346,1720,3.26,1721,3.621,1722,3.621,1723,3.621,1724,3.621,1725,3.621,1726,3.621,1727,3.621,1729,3.931,1730,3.621,1732,3.931,1733,3.621,1756,3.621,1757,3.621,1760,2.395,1766,2.395,1767,2.156,1768,2.395,1769,2.395,1770,2.395,1771,2.156,1772,2.156,1773,2.395,1774,2.395,1776,2.395,1777,2.395,1778,2.395,1964,5.028,1965,2.757,1966,2.757,1967,2.757,1968,2.757,1969,2.757,1970,2.757,1971,2.757,1972,2.757,1973,4.17,1974,2.757,1975,2.757,1976,2.757,1977,5.028,1978,2.757,1979,2.757,1980,2.757,1981,2.757,1982,2.757,1983,5.028,1984,4.17,1985,2.757,1986,4.17,1987,5.028,1988,6.019,1989,2.757,1990,2.757,1991,2.757,1992,2.757,1993,2.757,1994,2.757,1995,2.757,1996,2.757,1997,5.028,1998,2.757,1999,2.757,2000,2.757,2001,2.757,2002,2.757,2003,5.605,2004,2.757]],["title/classes/TibcoCloudTableDataSource.html",[0,0.187,1717,2.622]],["body/classes/TibcoCloudTableDataSource.html",[0,0.257,2,0.758,3,0.087,4,0.202,5,0.087,10,0.125,11,0.435,15,0.302,17,0.195,18,0.015,20,0.211,27,0.309,28,0.262,29,0.309,31,0.238,32,0.1,47,0.596,58,0.455,75,0.006,76,0.008,77,0.006,91,2.388,106,0.737,107,2.462,126,1.422,129,1.422,133,1.302,165,2.138,167,4.665,177,1.523,217,3.583,221,2.853,236,3.98,270,3.374,324,1.489,346,0.919,497,1.562,530,5.274,586,1.106,624,2.719,643,1.198,660,4.554,723,4.665,770,3.887,1067,1.949,1095,4.266,1153,3.887,1310,2.421,1524,3.583,1543,2.447,1569,2.245,1585,3.98,1658,3.887,1685,5.063,1688,2.245,1689,4.238,1691,3.583,1692,4.758,1717,3.05,1720,3.583,1729,4.665,1732,4.665,1771,4.665,2005,2.447,2006,4.582,2007,4.582,2008,4.582,2009,4.582,2010,4.582,2011,4.582,2012,4.582,2013,5.515,2014,5.966,2015,4.582,2016,7.027,2017,5.966,2018,4.582,2019,4.582,2020,3.13,2021,4.582,2022,3.13,2023,6.349,2024,4.582,2025,5.42,2026,3.13,2027,4.582,2028,4.582,2029,4.582,2030,5.966,2031,4.582,2032,4.582,2033,4.582,2034,4.582,2035,4.582,2036,4.582,2037,3.13,2038,4.582,2039,6.226,2040,5.966,2041,7.027,2042,5.966,2043,5.966,2044,5.966,2045,4.582,2046,3.13,2047,3.13,2048,3.13,2049,3.13,2050,3.13,2051,3.13,2052,3.13,2053,3.13,2054,3.13,2055,3.13,2056,3.13,2057,3.13,2058,3.13,2059,3.13,2060,3.13,2061,3.13,2062,3.13,2063,3.13,2064,3.13,2065,3.13,2066,3.13,2067,3.13,2068,4.582,2069,3.13,2070,4.582,2071,4.582,2072,3.13,2073,4.708,2074,3.13,2075,3.13,2076,4.582,2077,4.582,2078,4.582,2079,3.13,2080,3.13,2081,2.719,2082,2.719,2083,2.719,2084,2.719]],["title/components/TibcoCloudWidgetHeaderComponent.html",[1021,1.392,1304,0.919]],["body/components/TibcoCloudWidgetHeaderComponent.html",[0,0.15,3,0.089,4,0.147,5,0.089,10,0.127,15,0.305,17,0.229,18,0.015,19,0.452,20,0.219,27,0.181,28,0.29,29,0.181,30,1.185,31,0.185,32,0.101,35,0.566,58,0.794,75,0.006,76,0.008,77,0.006,106,0.368,108,0.998,109,0.797,120,0.544,164,2.784,165,2.294,178,3.08,211,1.701,220,1.925,298,1.572,321,1.166,346,0.928,363,1.037,453,2.713,494,2.102,586,1.121,643,1.771,658,3.689,712,1.858,740,1.121,741,1.078,742,1.265,745,1.378,746,3.1,747,1.265,749,2.201,751,2.429,755,3.152,757,2.429,921,3.2,922,2.863,923,2.745,924,3.738,932,3.918,940,2.112,969,1.665,999,1.214,1008,1.121,1009,1.121,1010,1.121,1011,1.121,1012,1.121,1013,1.121,1014,1.121,1015,1.121,1016,1.121,1017,1.121,1018,1.121,1019,1.121,1020,1.121,1021,2.121,1036,1.166,1086,5.059,1097,1.214,1098,1.771,1101,1.214,1107,1.214,1124,1.858,1304,1.274,1305,1.846,1306,1.32,1307,1.32,1308,1.32,1309,1.32,1310,2.492,1312,1.925,1314,1.925,1355,2.997,1356,2.755,1357,2.112,1358,2.112,1359,2.275,1361,3.918,1364,3.534,1365,1.975,1366,2.275,1367,2.481,1368,1.975,1369,2.112,1370,3.618,1372,2.561,1374,2.481,1376,2.275,1377,2.275,1378,3.618,1381,2.275,1382,2.275,1383,2.112,1384,3.08,1385,4.019,1386,3.738,1388,2.881,1397,2.275,1398,1.925,1399,1.925,1400,2.498,1401,1.32,1402,1.32,1403,1.32,1404,1.32,1405,1.32,1406,1.32,1407,1.32,1408,1.32,1409,1.32,1410,1.925,1411,1.32,1412,1.32,1413,1.32,1414,1.32,1415,1.32,1528,4.019,1529,5.545,1530,4.744,1531,4.744,1536,5.215,1541,4.019,1547,3.996,1548,4.744,1549,2.481,1550,2.481,1551,2.481,1552,2.481,1554,3.319,1555,2.112,1556,2.275,1557,3.618,1558,3.618,1559,3.618,1560,4.019,1561,3.08,1605,3.319,1606,3.319,1610,4.744,2085,2.755,2086,5.463,2087,4.628,2088,4.628,2089,3.173,2090,3.173,2091,3.173,2092,3.173,2093,3.173,2094,3.173,2095,3.173,2096,3.173]],["title/classes/ToolbarButton.html",[0,0.187,921,2.307]],["body/classes/ToolbarButton.html",[0,0.244,2,1.244,3,0.143,4,0.164,5,0.143,6,2.059,8,0.745,9,1.842,10,0.205,11,0.609,15,0.423,16,2.098,17,0.28,18,0.014,19,0.579,20,0.249,25,1.738,27,0.293,28,0.248,29,0.293,30,1.191,31,0.205,32,0.164,35,1.249,46,1.444,47,0.436,75,0.009,76,0.011,77,0.009,106,0.597,211,2.83,921,3.76,922,2.789,924,4.358,925,5.473,926,6.08,927,5.473,928,6.08,2097,4.464,2098,5.14,2099,5.14,2100,5.14,2101,5.14,2102,5.14,2103,5.14,2104,5.14]],["title/classes/UiAppConfig.html",[0,0.187,437,2.452]],["body/classes/UiAppConfig.html",[0,0.296,2,1.19,3,0.137,4,0.157,5,0.137,6,2.06,8,0.796,9,1.871,10,0.196,11,0.592,15,0.412,16,2.04,17,0.281,18,0.015,19,0.602,20,0.249,22,1.621,25,1.856,27,0.28,28,0.238,29,0.28,30,1.272,31,0.196,32,0.199,35,1.223,46,1.754,47,0.53,75,0.009,76,0.011,77,0.009,106,0.57,299,2.453,301,3.525,302,3.525,320,2.878,322,4.372,338,3.432,428,3.115,437,3.885,566,3.842,567,3.842,809,4.268,810,4.268,811,4.268,2105,5.956,2106,5.956,2107,5.956,2108,5.956,2109,4.914]],["title/classes/UiAppIdConfig.html",[0,0.187,320,2.307]],["body/classes/UiAppIdConfig.html",[0,0.315,2,1.314,3,0.151,4,0.173,5,0.151,6,1.871,8,0.833,9,1.926,10,0.217,11,0.63,15,0.438,16,2.171,17,0.238,18,0.014,19,0.594,20,0.212,22,1.492,25,1.942,27,0.309,28,0.262,29,0.309,30,1.331,31,0.217,32,0.212,35,0.968,46,1.866,47,0.563,75,0.01,76,0.012,77,0.01,106,0.63,299,2.709,320,3.889,322,3.97,338,3.555,412,4.244,413,4.244,428,2.466,437,3.379,2105,4.715,2106,4.715,2107,4.715,2108,4.715]],["title/coverage.html",[2110,4.684]],["body/coverage.html",[0,0.375,1,1.044,5,0.076,6,2.054,7,3.252,9,0.685,17,0.098,18,0.015,33,1.088,37,1.088,42,1.185,50,1.185,53,1.088,57,1.044,64,1.088,66,1.185,68,1.135,72,1.088,75,0.005,76,0.007,77,0.005,85,3.325,86,1.816,88,2.369,89,1.298,90,3.583,119,1.911,165,2.26,202,3.73,203,1.956,205,2.369,239,3.145,251,1.816,252,2.369,255,1.698,283,2.117,296,1.698,297,2.064,298,2.226,299,3.449,300,1.956,305,2.133,306,2.369,307,3.583,320,1.598,322,2.289,327,1.185,329,1.721,330,1.239,346,1.001,355,1.956,357,2.369,359,1.816,361,2.369,362,2.369,398,1.816,399,2.369,404,1.51,405,2.725,417,1.816,425,2.133,426,3.234,431,1.51,433,1.698,437,1.698,441,2.652,483,1.51,484,3.316,488,1.598,492,1.598,503,2.133,506,1.816,521,1.816,522,2.369,568,1.956,570,3.49,571,2.133,641,2.369,643,3.166,645,1.956,650,2.133,651,3.906,652,3.906,657,1.956,659,1.956,666,1.956,667,2.369,740,0.964,741,0.927,743,2.369,744,2.369,762,1.816,763,2.369,764,2.369,778,3.234,779,3.234,787,2.133,803,1.816,804,2.369,812,1.956,813,1.956,814,2.369,831,1.51,832,3.583,835,1.51,878,1.51,909,1.698,910,1.956,911,2.369,921,1.598,922,1.765,947,2.369,948,2.369,1008,0.964,1009,0.964,1010,0.964,1011,0.964,1012,0.964,1013,0.964,1014,0.964,1015,0.964,1016,0.964,1017,0.964,1018,0.964,1019,0.964,1020,0.964,1021,0.964,1024,2.133,1025,2.133,1034,2.966,1036,1.52,1037,2.133,1039,2.133,1086,1.956,1088,2.133,1091,2.133,1095,3.47,1097,1.583,1098,2.134,1099,2.133,1101,1.583,1102,2.133,1104,2.133,1107,1.583,1108,2.133,1111,2.133,1113,1.956,1115,2.133,1132,3.234,1207,1.816,1208,2.369,1259,2.369,1304,1.73,1310,2.683,1311,2.369,1373,1.816,1416,2.369,1463,2.369,1523,2.369,1563,2.369,1612,3.234,1631,2.133,1658,1.956,1660,2.369,1684,3.234,1685,3.325,1717,1.816,1779,2.369,1850,2.369,1870,2.369,1906,2.369,2005,3.234,2085,2.369,2097,2.369,2110,2.369,2111,2.728,2112,2.728,2113,5.574,2114,2.728,2115,6.305,2116,4.136,2117,4.136,2118,4.136,2119,5.991,2120,5.991,2121,7.044,2122,6.748,2123,2.728,2124,4.136,2125,2.369,2126,2.728,2127,2.728,2128,2.728,2129,6.551,2130,5.991,2131,2.728,2132,6.551,2133,4.136,2134,4.995,2135,2.728,2136,2.728]],["title/dependencies.html",[998,3.156,2137,3.281]],["body/dependencies.html",[18,0.014,75,0.011,76,0.013,77,0.011,120,1.091,326,2.891,998,4.237,2138,6.366,2139,7.297]],["title/miscellaneous/enumerations.html",[2140,2.043,2141,4.119]],["body/miscellaneous/enumerations.html",[3,0.167,10,0.24,18,0.014,75,0.011,76,0.012,77,0.011,89,2.853,109,2.025,182,3.992,183,3.734,184,2.724,570,3.32,571,5.512,574,5.209,575,5.209,580,5.209,601,6.122,643,2.296,644,5.209,645,4.302,646,5.209,2140,3.734,2141,5.209,2142,5.209]],["title/miscellaneous/functions.html",[331,2.154,2140,2.043]],["body/miscellaneous/functions.html",[10,0.241,18,0.013,27,0.343,28,0.291,29,0.343,75,0.011,76,0.013,77,0.011,165,2.108,331,2.736,660,4.32,770,5.068,1095,3.75,1310,2.128,1569,4.32,1685,4.703,1688,4.32,1692,4.32,2005,5.525,2013,5.231,2039,5.231,2073,6.137,2081,5.231,2082,5.231,2083,5.231,2084,5.231,2125,6.137,2140,3.75,2143,5.231]],["title/index.html",[10,0.131,709,2.85,1740,2.566]],["body/index.html",[18,0.012,75,0.01,76,0.012,77,0.01,89,2.793,116,4.591,163,3.656,164,2.075,165,1.65,209,3.439,214,4.591,323,2.793,329,3.087,410,2.551,441,2.793,445,4.211,683,4.591,736,4.211,998,3.908,1036,2.159,1290,5.1,1291,5.1,1429,4.591,1512,5.1,1584,5.1,2144,7.673,2145,7.833,2146,5.872,2147,5.872,2148,5.872,2149,5.872,2150,7.42,2151,5.872,2152,5.872,2153,5.872,2154,5.872,2155,5.872,2156,5.872]],["title/modules.html",[997,4.217]],["body/modules.html",[18,0.013,75,0.011,76,0.013,77,0.011,545,5,714,5,996,4.586,997,5,2157,6.395,2158,6.395]],["title/overview.html",[1920,4.217]],["body/overview.html",[2,0.937,18,0.015,75,0.007,76,0.009,77,0.007,86,4.055,139,2.775,184,2.767,204,2.409,251,4.055,255,3.793,355,2.775,359,4.851,360,2.409,398,4.851,521,4.851,569,2.142,645,3.821,740,1.367,741,2.476,762,4.851,803,4.851,909,3.793,995,4.165,996,6.024,998,2.575,999,1.481,1000,3.36,1001,3.36,1002,3.36,1003,3.36,1004,3.36,1005,3.36,1006,3.36,1007,3.36,1008,2.575,1009,2.575,1010,2.575,1011,2.575,1012,2.575,1013,2.575,1014,2.575,1015,2.575,1016,2.152,1017,2.575,1018,2.575,1019,2.575,1020,2.575,1021,2.575,1022,4.626,1023,3.36,1305,1.543,1920,3.025,2159,3.869,2160,3.869,2161,3.869]],["title/miscellaneous/variables.html",[2140,2.043,2162,4.119]],["body/miscellaneous/variables.html",[10,0.218,17,0.28,18,0.014,19,0.501,22,1.224,35,1.187,38,2.367,75,0.01,76,0.012,77,0.01,108,2.355,109,1.881,165,2.019,168,3.493,173,2.86,329,2.769,625,3.627,651,4.261,652,5.618,657,4.773,658,3.684,659,4.773,660,3.908,778,4.261,779,5.204,787,5.204,788,4.733,1024,4.261,1025,5.204,1034,3.908,1115,5.204,1116,4.733,1117,4.733,1118,4.733,1119,4.733,1120,4.733,1121,4.733,1310,1.925,1612,5.204,1631,5.204,2140,3.393,2142,4.733,2143,4.733,2162,4.733,2163,6.655,2164,5.449]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/CachingInterceptor.html":{},"classes/Claim.html":{},"classes/ConfigurationMenuConfig.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"classes/ConfigurationMenuEntry.html":{},"interfaces/Deserializable.html":{},"pipes/DurationSincePipe.html":{},"pipes/EllipsisPipe.html":{},"classes/GeneralConfig.html":{},"guards/GeneralConfigResolver.html":{},"classes/GeneralLandingPageConfig.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/Group.html":{},"pipes/HighlightPipe.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"injectables/LogService.html":{},"classes/LoginPrefill.html":{},"guards/LoginPrefillResolver.html":{},"interceptors/MockingInterceptor.html":{},"directives/OnCreateDirective.html":{},"pipes/OrderByDatePipe.html":{},"classes/Owner.html":{},"injectables/RequestCacheService.html":{},"pipes/ReversePipe.html":{},"classes/RoleAttribute.html":{},"classes/RouteAction.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"classes/Subscription.html":{},"injectables/TcButtonsHelperService.html":{},"classes/TcCoreCommonFunctions.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"classes/ToolbarButton.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":643,"title":{},"body":{"injectables/LogService.html":{},"classes/TcCoreCommonFunctions.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["0.04",{"_index":1944,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["0.1.x",{"_index":1643,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["0.1px",{"_index":1936,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["0.2",{"_index":1544,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{}}}],["0.33",{"_index":1395,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["0.3px",{"_index":1359,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["0.5",{"_index":1545,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{}}}],["0/1",{"_index":2121,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2133,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2134,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2114,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2124,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2116,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2135,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2131,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2132,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2130,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2129,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2115,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2119,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2122,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2113,"title":{},"body":{"coverage.html":{}}}],["0081cb",{"_index":1561,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["062e79",{"_index":1866,"title":{},"body":{"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{}}}],["0px",{"_index":1370,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["1",{"_index":184,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"pipes/DurationSincePipe.html":{},"injectables/LogService.html":{},"interceptors/MockingInterceptor.html":{},"pipes/OrderByDatePipe.html":{},"injectables/TcButtonsHelperService.html":{},"classes/TcCoreCommonFunctions.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1$2",{"_index":986,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["1.25",{"_index":1963,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["1.5",{"_index":1356,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["1/1",{"_index":2126,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":2128,"title":{},"body":{"coverage.html":{}}}],["1/17",{"_index":2123,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1758,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["100",{"_index":1373,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{},"coverage.html":{}}}],["1000",{"_index":375,"title":{},"body":{"pipes/DurationSincePipe.html":{}}}],["100px",{"_index":1521,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["100vh",{"_index":1835,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["100vw",{"_index":1833,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["10px",{"_index":1549,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["117px",{"_index":1960,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["121",{"_index":1934,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["12px",{"_index":1868,"title":{},"body":{"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{}}}],["14",{"_index":2159,"title":{},"body":{"overview.html":{}}}],["14px",{"_index":1600,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{}}}],["15",{"_index":266,"title":{},"body":{"interceptors/CachingInterceptor.html":{}}}],["15px",{"_index":1869,"title":{},"body":{"components/TibcoCloudSettingMenuEntryComponent.html":{}}}],["16px",{"_index":1767,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["18px",{"_index":1367,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["19px",{"_index":1937,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["1px",{"_index":1397,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["2",{"_index":183,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"injectables/LogService.html":{},"classes/TcCoreCommonFunctions.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["200",{"_index":725,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["20px",{"_index":1547,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["212121",{"_index":1363,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{}}}],["229be0",{"_index":1774,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["24px",{"_index":1385,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["2592000",{"_index":383,"title":{},"body":{"pipes/DurationSincePipe.html":{}}}],["25px",{"_index":1522,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["27",{"_index":2161,"title":{},"body":{"overview.html":{}}}],["280px",{"_index":1517,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["2px",{"_index":1381,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["2s",{"_index":1603,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["3",{"_index":182,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"injectables/LogService.html":{},"interceptors/MockingInterceptor.html":{},"miscellaneous/enumerations.html":{}}}],["3.6e+6",{"_index":788,"title":{},"body":{"injectables/RequestCacheService.html":{},"miscellaneous/variables.html":{}}}],["30",{"_index":225,"title":{},"body":{"guards/AuthGuard.html":{},"components/TibcoCloudSettingLandingComponent.html":{}}}],["300",{"_index":1931,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["3000",{"_index":1823,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["300px",{"_index":1597,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["30px",{"_index":1553,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["31536000",{"_index":378,"title":{},"body":{"pipes/DurationSincePipe.html":{}}}],["31px",{"_index":1609,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["32px",{"_index":1938,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["33",{"_index":1943,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["349bed",{"_index":1947,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["3600",{"_index":392,"title":{},"body":{"pipes/DurationSincePipe.html":{}}}],["3px",{"_index":1378,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["4",{"_index":644,"title":{},"body":{"injectables/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["4).tolowercase",{"_index":1634,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["40px",{"_index":1374,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["419",{"_index":156,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{}}}],["43px",{"_index":1948,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["45px",{"_index":1957,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["46",{"_index":1933,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["48px",{"_index":1930,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["4px",{"_index":1389,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["5",{"_index":645,"title":{},"body":{"injectables/LogService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["5/7",{"_index":2118,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1831,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["500px",{"_index":1516,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["50px",{"_index":1520,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["57px",{"_index":1905,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["58px",{"_index":1961,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["5px",{"_index":1610,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["6",{"_index":646,"title":{},"body":{"injectables/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["60",{"_index":395,"title":{},"body":{"pipes/DurationSincePipe.html":{}}}],["600",{"_index":1366,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["60000",{"_index":235,"title":{},"body":{"guards/AuthGuard.html":{}}}],["604800",{"_index":386,"title":{},"body":{"pipes/DurationSincePipe.html":{}}}],["60px",{"_index":1952,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["65px",{"_index":1546,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{}}}],["676px",{"_index":1941,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["6px",{"_index":1953,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["7",{"_index":2160,"title":{},"body":{"overview.html":{}}}],["7.2.6",{"_index":2139,"title":{},"body":{"dependencies.html":{}}}],["71",{"_index":2117,"title":{},"body":{"coverage.html":{}}}],["727272",{"_index":1562,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{}}}],["74bee4",{"_index":1962,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["7px",{"_index":1599,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["8",{"_index":2127,"title":{},"body":{"coverage.html":{}}}],["86400",{"_index":389,"title":{},"body":{"pipes/DurationSincePipe.html":{}}}],["86px",{"_index":1946,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["88px",{"_index":1935,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["8px",{"_index":1387,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{}}}],["9",{"_index":1727,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["999",{"_index":1765,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["_",{"_index":1725,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["a.hasownproperty(this.sort.active",{"_index":2077,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["ability",{"_index":1222,"title":{},"body":{"injectables/TcLoginService.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["access",{"_index":1434,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["access_token",{"_index":12,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{}}}],["accesstoken",{"_index":1,"title":{"classes/AccessToken.html":{}},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{},"injectables/TcLoginService.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"coverage.html":{}}}],["accesstoken().deserialize(accesstoken",{"_index":1249,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["accesstoken.access_token",{"_index":1257,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["accountdisplayname",{"_index":60,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{}}}],["accountid",{"_index":59,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{},"injectables/TcLoginService.html":{}}}],["accountinfo",{"_index":66,"title":{"classes/AccountInfo.html":{}},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{},"coverage.html":{}}}],["accountinfos",{"_index":69,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{}}}],["accountsinfo",{"_index":68,"title":{"classes/AccountsInfo.html":{}},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{},"components/TibcoCloudLoginComponent.html":{},"coverage.html":{}}}],["action",{"_index":815,"title":{},"body":{"classes/RouteAction.html":{}}}],["actions",{"_index":1335,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["actions.ts",{"_index":814,"title":{},"body":{"classes/RouteAction.html":{},"coverage.html":{}}}],["actions.ts:1",{"_index":818,"title":{},"body":{"classes/RouteAction.html":{}}}],["actions.ts:2",{"_index":819,"title":{},"body":{"classes/RouteAction.html":{}}}],["actions.ts:3",{"_index":820,"title":{},"body":{"classes/RouteAction.html":{}}}],["activatedroute",{"_index":1323,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["activatedroutesnapshot",{"_index":130,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"guards/ConfigurationMenuConfigResolver.html":{}}}],["actual_component",{"_index":1415,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["add",{"_index":941,"title":{},"body":{"injectables/TcButtonsHelperService.html":{},"components/TibcoCloudErrorComponent.html":{}}}],["addbuttons",{"_index":912,"title":{},"body":{"injectables/TcButtonsHelperService.html":{}}}],["added",{"_index":1722,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["advanced",{"_index":1904,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["affects",{"_index":2054,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["against",{"_index":1251,"title":{},"body":{"injectables/TcLoginService.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["ago",{"_index":381,"title":{},"body":{"pipes/DurationSincePipe.html":{}}}],["alert('logout",{"_index":1656,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["align",{"_index":1360,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["allroles",{"_index":1782,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["angular/cdk/collections",{"_index":2047,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["angular/cdk/scrolling",{"_index":1075,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["angular/common",{"_index":326,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/TcCoreCommonFunctions.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":125,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"interceptors/CachingInterceptor.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"interceptors/MockingInterceptor.html":{},"injectables/RequestCacheService.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{}}}],["angular/core",{"_index":120,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"interceptors/CachingInterceptor.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"pipes/DurationSincePipe.html":{},"pipes/EllipsisPipe.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"pipes/HighlightPipe.html":{},"injectables/LogService.html":{},"guards/LoginPrefillResolver.html":{},"interceptors/MockingInterceptor.html":{},"directives/OnCreateDirective.html":{},"pipes/OrderByDatePipe.html":{},"injectables/RequestCacheService.html":{},"pipes/ReversePipe.html":{},"injectables/TcButtonsHelperService.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":1072,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["angular/forms",{"_index":1070,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["angular/material",{"_index":1067,"title":{},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{}}}],["angular/platform",{"_index":544,"title":{},"body":{"pipes/HighlightPipe.html":{},"modules/TcCoreLibModule.html":{}}}],["angular/router",{"_index":132,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"guards/LoginPrefillResolver.html":{},"modules/TcCoreLibModule.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["ankitgrover",{"_index":548,"title":{},"body":{"pipes/HighlightPipe.html":{}}}],["anything",{"_index":684,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["anyway",{"_index":219,"title":{},"body":{"guards/AuthGuard.html":{}}}],["api",{"_index":229,"title":{},"body":{"guards/AuthGuard.html":{}}}],["app",{"_index":322,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{},"coverage.html":{}}}],["app_id_url",{"_index":308,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["appconfig",{"_index":460,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["appconfigresolver",{"_index":446,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["appid.json",{"_index":343,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["application",{"_index":1429,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"index.html":{}}}],["application/javascript",{"_index":1121,"title":{},"body":{"modules/TcCoreLibModule.html":{},"miscellaneous/variables.html":{}}}],["application/json",{"_index":1282,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["application/x",{"_index":1234,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["applicationids",{"_index":2105,"title":{},"body":{"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{}}}],["applicationtitle",{"_index":406,"title":{},"body":{"classes/GeneralConfig.html":{},"classes/RoleAttribute.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["appname",{"_index":1618,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["appropriate",{"_index":2044,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["apps",{"_index":1253,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["args",{"_index":367,"title":{},"body":{"pipes/DurationSincePipe.html":{},"pipes/EllipsisPipe.html":{},"pipes/ReversePipe.html":{}}}],["around",{"_index":1446,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["array",{"_index":626,"title":{},"body":{"injectables/LogService.html":{},"pipes/OrderByDatePipe.html":{},"classes/TcCoreCommonFunctions.html":{},"components/TibcoCloudSelectTableComponent.html":{}}}],["array.sort(function(a",{"_index":769,"title":{},"body":{"pipes/OrderByDatePipe.html":{}}}],["arraylength",{"_index":971,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["as/token.oauth2",{"_index":1244,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["asc",{"_index":2074,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["assets",{"_index":342,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"interceptors/MockingInterceptor.html":{}}}],["assets/config//configurationmenuconfig.json",{"_index":332,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{}}}],["assets/config//landingpages.json",{"_index":509,"title":{},"body":{"guards/GeneralLandingPageConfigResolver.html":{}}}],["assets/config/generalappconfig.json",{"_index":444,"title":{},"body":{"guards/GeneralConfigResolver.html":{}}}],["assets/config/uiappid.json",{"_index":334,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["assets/icons",{"_index":267,"title":{},"body":{"interceptors/CachingInterceptor.html":{}}}],["assets/mocks",{"_index":673,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["attributes",{"_index":836,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"injectables/TcSharedStateService.html":{}}}],["auth",{"_index":1466,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["authentication",{"_index":2148,"title":{},"body":{"index.html":{}}}],["autherrorinterceptor",{"_index":86,"title":{"interceptors/AuthErrorInterceptor.html":{}},"body":{"interceptors/AuthErrorInterceptor.html":{},"modules/TcCoreLibModule.html":{},"coverage.html":{},"overview.html":{}}}],["authguard",{"_index":203,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"modules/TcCoreLibModule.html":{},"coverage.html":{}}}],["authinfo",{"_index":53,"title":{"classes/AuthInfo.html":{}},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{},"injectables/TcLoginService.html":{},"components/TibcoCloudLoginComponent.html":{},"coverage.html":{}}}],["authinfo().deserialize(authinfo",{"_index":1243,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["authorization",{"_index":1584,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{},"index.html":{}}}],["authorize",{"_index":1250,"title":{},"body":{"injectables/TcLoginService.html":{},"components/TibcoCloudLoginComponent.html":{}}}],["authorize(subscriptionid",{"_index":1588,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["auto",{"_index":1940,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["available",{"_index":1578,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["avoid",{"_index":2153,"title":{},"body":{"index.html":{}}}],["b",{"_index":770,"title":{},"body":{"pipes/OrderByDatePipe.html":{},"classes/TcCoreCommonFunctions.html":{},"classes/TibcoCloudTableDataSource.html":{},"miscellaneous/functions.html":{}}}],["b.hasownproperty(this.sort.active",{"_index":2078,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["b[this.sort.active",{"_index":2080,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["background",{"_index":1379,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["backgroundimage",{"_index":1911,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["backgroundurl",{"_index":499,"title":{},"body":{"classes/GeneralLandingPageConfig.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{}}}],["bar",{"_index":1525,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{}}}],["bar'},{'name",{"_index":1406,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["bar.component",{"_index":1089,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["bar.component.css",{"_index":1526,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{}}}],["bar.component.html",{"_index":1527,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{}}}],["bar.component.ts",{"_index":1523,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:10",{"_index":1532,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{}}}],["bar.component.ts:17",{"_index":1540,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{}}}],["bar/tibco",{"_index":1088,"title":{},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudMenuBarComponent.html":{},"coverage.html":{}}}],["base64",{"_index":189,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{}}}],["based",{"_index":713,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["baseroute",{"_index":1321,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["being",{"_index":2027,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["below",{"_index":1497,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["bind(this",{"_index":1659,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["black",{"_index":1371,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["blank",{"_index":716,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["block",{"_index":1954,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["body",{"_index":726,"title":{},"body":{"interceptors/MockingInterceptor.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{}}}],["body.tostring",{"_index":1239,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["bodystr",{"_index":1280,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["bold",{"_index":1611,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{}}}],["bold.ttf",{"_index":1929,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["boolean",{"_index":211,"title":{},"body":{"guards/AuthGuard.html":{},"classes/GeneralConfig.html":{},"pipes/HighlightPipe.html":{},"injectables/LogService.html":{},"classes/RoleAttribute.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"injectables/TcButtonsHelperService.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"classes/ToolbarButton.html":{}}}],["bootstrap",{"_index":1001,"title":{},"body":{"modules/TcCoreLibModule.html":{},"overview.html":{}}}],["border",{"_index":1376,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["bottom",{"_index":1383,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["box",{"_index":1368,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["bpm",{"_index":1231,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["break",{"_index":558,"title":{},"body":{"pipes/HighlightPipe.html":{},"injectables/LogService.html":{}}}],["browse",{"_index":2158,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":545,"title":{},"body":{"pipes/HighlightPipe.html":{},"modules/TcCoreLibModule.html":{},"modules.html":{}}}],["browser/animations",{"_index":1046,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["browseranimationsmodule",{"_index":1045,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["browsermodule",{"_index":1043,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["browsertitle",{"_index":407,"title":{},"body":{"classes/GeneralConfig.html":{},"classes/RoleAttribute.html":{}}}],["btoa",{"_index":192,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{}}}],["bug",{"_index":735,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["build",{"_index":611,"title":{},"body":{"injectables/LogService.html":{}}}],["button",{"_index":940,"title":{},"body":{"injectables/TcButtonsHelperService.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["button.id",{"_index":945,"title":{},"body":{"injectables/TcButtonsHelperService.html":{}}}],["button:hover",{"_index":1559,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["buttonid",{"_index":1344,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["buttons",{"_index":910,"title":{},"body":{"injectables/TcButtonsHelperService.html":{},"modules/TcCoreLibModule.html":{},"components/TibcoCloudConfigurationComponent.html":{},"coverage.html":{}}}],["buttons.foreach(button",{"_index":943,"title":{},"body":{"injectables/TcButtonsHelperService.html":{}}}],["buttonshelper",{"_index":1324,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["cache",{"_index":257,"title":{},"body":{"interceptors/CachingInterceptor.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"injectables/RequestCacheService.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"components/TibcoCloudErrorComponent.html":{}}}],["cache.put(req",{"_index":286,"title":{},"body":{"interceptors/CachingInterceptor.html":{}}}],["cache.service",{"_index":262,"title":{},"body":{"interceptors/CachingInterceptor.html":{},"modules/TcCoreLibModule.html":{}}}],["cache.service.ts",{"_index":779,"title":{},"body":{"injectables/RequestCacheService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cache.service.ts:23",{"_index":785,"title":{},"body":{"injectables/RequestCacheService.html":{}}}],["cache.service.ts:25",{"_index":782,"title":{},"body":{"injectables/RequestCacheService.html":{}}}],["cache.service.ts:38",{"_index":784,"title":{},"body":{"injectables/RequestCacheService.html":{}}}],["cached",{"_index":275,"title":{},"body":{"interceptors/CachingInterceptor.html":{},"interceptors/MockingInterceptor.html":{},"injectables/RequestCacheService.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{}}}],["cached.lastread",{"_index":794,"title":{},"body":{"injectables/RequestCacheService.html":{}}}],["cachedconfig",{"_index":481,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["cachedresponse",{"_index":263,"title":{},"body":{"interceptors/CachingInterceptor.html":{}}}],["cacheresponse",{"_index":268,"title":{},"body":{"interceptors/CachingInterceptor.html":{}}}],["caching",{"_index":1290,"title":{},"body":{"injectables/TcSharedStateService.html":{},"index.html":{}}}],["cachinginterceptor",{"_index":251,"title":{"interceptors/CachingInterceptor.html":{}},"body":{"interceptors/CachingInterceptor.html":{},"modules/TcCoreLibModule.html":{},"coverage.html":{},"overview.html":{}}}],["call",{"_index":230,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/MockingInterceptor.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudNavbarComponent.html":{}}}],["called",{"_index":236,"title":{},"body":{"guards/AuthGuard.html":{},"classes/TibcoCloudTableDataSource.html":{}}}],["caller",{"_index":451,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["camelcasetowords",{"_index":952,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["camelcasetowords(str",{"_index":960,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["camelcasetw",{"_index":1694,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["camelcasetw(column.header",{"_index":1756,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["camelcasetw(header",{"_index":1708,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["camelize",{"_index":949,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["canactivate",{"_index":206,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":208,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cancel",{"_index":1679,"title":{},"body":{"components/TibcoCloudNewElementComponent.html":{}}}],["candidatepage",{"_index":1205,"title":{},"body":{"injectables/TcGeneralLandingPageConfigService.html":{}}}],["candidatepages",{"_index":1195,"title":{},"body":{"injectables/TcGeneralLandingPageConfigService.html":{}}}],["candidatepages.find(function",{"_index":1206,"title":{},"body":{"injectables/TcGeneralLandingPageConfigService.html":{}}}],["candidatepages.length",{"_index":1198,"title":{},"body":{"injectables/TcGeneralLandingPageConfigService.html":{}}}],["candidatepages.map(function",{"_index":1202,"title":{},"body":{"injectables/TcGeneralLandingPageConfigService.html":{}}}],["candidatepages[0",{"_index":1199,"title":{},"body":{"injectables/TcGeneralLandingPageConfigService.html":{}}}],["capability",{"_index":1865,"title":{},"body":{"components/TibcoCloudSettingMenuEntryComponent.html":{}}}],["capabilties",{"_index":2147,"title":{},"body":{"index.html":{}}}],["card",{"_index":1515,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["case",{"_index":556,"title":{},"body":{"pipes/HighlightPipe.html":{},"injectables/LogService.html":{}}}],["caseflag",{"_index":554,"title":{},"body":{"pipes/HighlightPipe.html":{}}}],["caseiconsfolderid",{"_index":2106,"title":{},"body":{"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{}}}],["casesensitive",{"_index":527,"title":{},"body":{"pipes/HighlightPipe.html":{}}}],["casetypelabel",{"_index":2107,"title":{},"body":{"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{}}}],["catcherror",{"_index":127,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"interceptors/MockingInterceptor.html":{}}}],["catcherror((err",{"_index":135,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{}}}],["center",{"_index":1772,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["changed",{"_index":477,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"components/TibcoCloudTableComponent.html":{}}}],["changes",{"_index":1712,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["check",{"_index":174,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{}}}],["choose",{"_index":1568,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["circular",{"_index":2154,"title":{},"body":{"index.html":{}}}],["claim",{"_index":37,"title":{"classes/Claim.html":{}},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"coverage.html":{}}}],["claims",{"_index":1783,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["class",{"_index":0,"title":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/ConfigurationMenuConfig.html":{},"classes/ConfigurationMenuEntry.html":{},"classes/GeneralConfig.html":{},"classes/GeneralLandingPageConfig.html":{},"classes/Group.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/RoleAttribute.html":{},"classes/RouteAction.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"classes/Subscription.html":{},"classes/TcCoreCommonFunctions.html":{},"classes/TibcoCloudTableDataSource.html":{},"classes/ToolbarButton.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{}},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/CachingInterceptor.html":{},"classes/Claim.html":{},"classes/ConfigurationMenuConfig.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"classes/ConfigurationMenuEntry.html":{},"pipes/DurationSincePipe.html":{},"pipes/EllipsisPipe.html":{},"classes/GeneralConfig.html":{},"guards/GeneralConfigResolver.html":{},"classes/GeneralLandingPageConfig.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/Group.html":{},"pipes/HighlightPipe.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"injectables/LogService.html":{},"classes/LoginPrefill.html":{},"guards/LoginPrefillResolver.html":{},"interceptors/MockingInterceptor.html":{},"directives/OnCreateDirective.html":{},"pipes/OrderByDatePipe.html":{},"classes/Owner.html":{},"injectables/RequestCacheService.html":{},"pipes/ReversePipe.html":{},"classes/RoleAttribute.html":{},"classes/RouteAction.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"classes/Subscription.html":{},"injectables/TcButtonsHelperService.html":{},"classes/TcCoreCommonFunctions.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"classes/ToolbarButton.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/ConfigurationMenuConfig.html":{},"classes/ConfigurationMenuEntry.html":{},"classes/GeneralConfig.html":{},"classes/GeneralLandingPageConfig.html":{},"classes/Group.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/RoleAttribute.html":{},"classes/RouteAction.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"classes/Subscription.html":{},"classes/TcCoreCommonFunctions.html":{},"classes/TibcoCloudTableDataSource.html":{},"classes/ToolbarButton.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{},"overview.html":{}}}],["clean",{"_index":2029,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["clicked",{"_index":1693,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["clicked(row",{"_index":1703,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["client",{"_index":660,"title":{},"body":{"guards/LoginPrefillResolver.html":{},"classes/TibcoCloudTableDataSource.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["client_id_key",{"_index":659,"title":{},"body":{"guards/LoginPrefillResolver.html":{},"injectables/TcLoginService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["clientid",{"_index":74,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"guards/LoginPrefillResolver.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{},"injectables/TcLoginService.html":{},"components/TibcoCloudLoginComponent.html":{}}}],["clientstate/v1/states",{"_index":1279,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["clientstate/v1/states?$filter=type",{"_index":1289,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["close",{"_index":1338,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["cloud",{"_index":165,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"injectables/LogService.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcLoginService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["cloud.tibco.com",{"_index":110,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{}}}],["cluster_tccorelibmodule",{"_index":1004,"title":{},"body":{"modules/TcCoreLibModule.html":{},"overview.html":{}}}],["cluster_tccorelibmodule_declarations",{"_index":1005,"title":{},"body":{"modules/TcCoreLibModule.html":{},"overview.html":{}}}],["cluster_tccorelibmodule_exports",{"_index":1006,"title":{},"body":{"modules/TcCoreLibModule.html":{},"overview.html":{}}}],["cluster_tccorelibmodule_providers",{"_index":1007,"title":{},"body":{"modules/TcCoreLibModule.html":{},"overview.html":{}}}],["code",{"_index":1419,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["collapse",{"_index":1958,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["color",{"_index":1362,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["color:white",{"_index":1768,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["column",{"_index":1683,"title":{},"body":{"components/TibcoCloudNewElementComponent.html":{}}}],["column.cell(row",{"_index":1757,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["columns",{"_index":1688,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{},"miscellaneous/functions.html":{}}}],["combine",{"_index":2052,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["comma",{"_index":630,"title":{},"body":{"injectables/LogService.html":{}}}],["comment",{"_index":1123,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["common",{"_index":330,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/TcCoreCommonFunctions.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"coverage.html":{}}}],["common/tc",{"_index":328,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["commonmodule",{"_index":1110,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["comparator",{"_index":2082,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{},"miscellaneous/functions.html":{}}}],["compare",{"_index":2125,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["compare(a",{"_index":2084,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{},"miscellaneous/functions.html":{}}}],["compare(a[this.sort.active",{"_index":2079,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["compareobjects",{"_index":1784,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["component",{"_index":1304,"title":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":1401,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["components",{"_index":1305,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"overview.html":{}}}],["components/tibco",{"_index":1033,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["config",{"_index":323,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"index.html":{}}}],["config.resolver.ts",{"_index":307,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"coverage.html":{}}}],["config.resolver.ts:15",{"_index":316,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{}}}],["config.resolver.ts:21",{"_index":434,"title":{},"body":{"guards/GeneralConfigResolver.html":{}}}],["config.resolver.ts:22",{"_index":507,"title":{},"body":{"guards/GeneralLandingPageConfigResolver.html":{}}}],["config.resolver.ts:34",{"_index":318,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{}}}],["config.resolver.ts:48",{"_index":436,"title":{},"body":{"guards/GeneralConfigResolver.html":{}}}],["config.resolver.ts:53",{"_index":508,"title":{},"body":{"guards/GeneralLandingPageConfigResolver.html":{}}}],["config.service",{"_index":443,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"modules/TcCoreLibModule.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["config.service.ts",{"_index":1132,"title":{},"body":{"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"coverage.html":{}}}],["config.service.ts:13",{"_index":1138,"title":{},"body":{"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{}}}],["config.service.ts:18",{"_index":1140,"title":{},"body":{"injectables/TcGeneralConfigService.html":{}}}],["config.service.ts:20",{"_index":1180,"title":{},"body":{"injectables/TcGeneralLandingPageConfigService.html":{}}}],["config.service.ts:29",{"_index":1144,"title":{},"body":{"injectables/TcGeneralConfigService.html":{}}}],["config.service.ts:31",{"_index":1182,"title":{},"body":{"injectables/TcGeneralLandingPageConfigService.html":{}}}],["config.service.ts:48",{"_index":1146,"title":{},"body":{"injectables/TcGeneralConfigService.html":{}}}],["config.service.ts:50",{"_index":1184,"title":{},"body":{"injectables/TcGeneralLandingPageConfigService.html":{}}}],["config.service.ts:74",{"_index":1185,"title":{},"body":{"injectables/TcGeneralLandingPageConfigService.html":{}}}],["config.service.ts:84",{"_index":1186,"title":{},"body":{"injectables/TcGeneralLandingPageConfigService.html":{}}}],["config.tibcolabs.client.context.public",{"_index":1297,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["config.ts",{"_index":299,"title":{},"body":{"classes/ConfigurationMenuConfig.html":{},"classes/ConfigurationMenuEntry.html":{},"classes/GeneralConfig.html":{},"classes/GeneralLandingPageConfig.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"classes/RoleAttribute.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{},"coverage.html":{}}}],["config.ts:10",{"_index":811,"title":{},"body":{"classes/RoleAttribute.html":{},"classes/UiAppConfig.html":{}}}],["config.ts:11",{"_index":2109,"title":{},"body":{"classes/UiAppConfig.html":{}}}],["config.ts:13",{"_index":353,"title":{},"body":{"classes/ConfigurationMenuEntry.html":{}}}],["config.ts:14",{"_index":354,"title":{},"body":{"classes/ConfigurationMenuEntry.html":{},"classes/LandingPageConfig.html":{}}}],["config.ts:15",{"_index":564,"title":{},"body":{"classes/LandingPageConfig.html":{}}}],["config.ts:16",{"_index":565,"title":{},"body":{"classes/LandingPageConfig.html":{}}}],["config.ts:17",{"_index":416,"title":{},"body":{"classes/GeneralConfig.html":{},"classes/LandingPageConfig.html":{}}}],["config.ts:18",{"_index":419,"title":{},"body":{"classes/GeneralConfig.html":{},"classes/LandingPageConfig.html":{}}}],["config.ts:19",{"_index":413,"title":{},"body":{"classes/GeneralConfig.html":{},"classes/LandingPageConfig.html":{},"classes/UiAppIdConfig.html":{}}}],["config.ts:20",{"_index":412,"title":{},"body":{"classes/GeneralConfig.html":{},"classes/LandingPageConfig.html":{},"classes/UiAppIdConfig.html":{}}}],["config.ts:21",{"_index":420,"title":{},"body":{"classes/GeneralConfig.html":{},"classes/LandingPageConfig.html":{}}}],["config.ts:22",{"_index":414,"title":{},"body":{"classes/GeneralConfig.html":{},"classes/LandingPageConfig.html":{}}}],["config.ts:23",{"_index":415,"title":{},"body":{"classes/GeneralConfig.html":{},"classes/LandingPageConfig.html":{}}}],["config.ts:24",{"_index":418,"title":{},"body":{"classes/GeneralConfig.html":{}}}],["config.ts:25",{"_index":421,"title":{},"body":{"classes/GeneralConfig.html":{}}}],["config.ts:30",{"_index":487,"title":{},"body":{"classes/GeneralLandingPageConfig.html":{}}}],["config.ts:31",{"_index":490,"title":{},"body":{"classes/GeneralLandingPageConfig.html":{}}}],["config.ts:32",{"_index":489,"title":{},"body":{"classes/GeneralLandingPageConfig.html":{}}}],["config.ts:33",{"_index":491,"title":{},"body":{"classes/GeneralLandingPageConfig.html":{}}}],["config.ts:4",{"_index":566,"title":{},"body":{"classes/LandingPageItemConfig.html":{},"classes/RoleAttribute.html":{},"classes/UiAppConfig.html":{}}}],["config.ts:5",{"_index":301,"title":{},"body":{"classes/ConfigurationMenuConfig.html":{},"classes/LandingPageItemConfig.html":{},"classes/RoleAttribute.html":{},"classes/UiAppConfig.html":{}}}],["config.ts:6",{"_index":302,"title":{},"body":{"classes/ConfigurationMenuConfig.html":{},"classes/LandingPageItemConfig.html":{},"classes/RoleAttribute.html":{},"classes/UiAppConfig.html":{}}}],["config.ts:7",{"_index":567,"title":{},"body":{"classes/LandingPageItemConfig.html":{},"classes/RoleAttribute.html":{},"classes/UiAppConfig.html":{}}}],["config.ts:8",{"_index":810,"title":{},"body":{"classes/RoleAttribute.html":{},"classes/UiAppConfig.html":{}}}],["config.ts:9",{"_index":809,"title":{},"body":{"classes/RoleAttribute.html":{},"classes/UiAppConfig.html":{}}}],["configmenupages",{"_index":1322,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["configname",{"_index":1316,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["configuration",{"_index":297,"title":{},"body":{"classes/ConfigurationMenuConfig.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"classes/ConfigurationMenuEntry.html":{},"classes/GeneralConfig.html":{},"classes/RoleAttribute.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"coverage.html":{}}}],["configuration'},{'name",{"_index":1402,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["configuration.component",{"_index":1105,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["configuration.component.css",{"_index":1313,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["configuration.component.html",{"_index":1315,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["configuration.component.ts",{"_index":1311,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"coverage.html":{}}}],["configuration.component.ts:15",{"_index":1326,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["configuration.component.ts:16",{"_index":1327,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["configuration.component.ts:17",{"_index":1328,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["configuration.component.ts:18",{"_index":1330,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["configuration.component.ts:19",{"_index":1325,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["configuration.component.ts:23",{"_index":1331,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["configuration.component.ts:29",{"_index":1332,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["configuration.component.ts:35",{"_index":1333,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["configuration.component.ts:41",{"_index":1334,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["configuration.component.ts:46",{"_index":1329,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["configuration/tibco",{"_index":1104,"title":{},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudConfigurationComponent.html":{},"coverage.html":{}}}],["configuration_missing",{"_index":1435,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["configurationmenuconfig",{"_index":296,"title":{"classes/ConfigurationMenuConfig.html":{}},"body":{"classes/ConfigurationMenuConfig.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"classes/ConfigurationMenuEntry.html":{},"components/TibcoCloudConfigurationComponent.html":{},"coverage.html":{}}}],["configurationmenuconfig().deserialize(config",{"_index":352,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{}}}],["configurationmenuconfigresolver",{"_index":305,"title":{"guards/ConfigurationMenuConfigResolver.html":{}},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"coverage.html":{}}}],["configurationmenuentry",{"_index":300,"title":{"classes/ConfigurationMenuEntry.html":{}},"body":{"classes/ConfigurationMenuConfig.html":{},"classes/ConfigurationMenuEntry.html":{},"coverage.html":{}}}],["configurator",{"_index":1440,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["configureoption",{"_index":1854,"title":{},"body":{"components/TibcoCloudSettingMenuEntryComponent.html":{}}}],["connect",{"_index":2016,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["connections",{"_index":2032,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["console.error('login",{"_index":1509,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["console.error(error",{"_index":1511,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["console.log('jsonsource",{"_index":1975,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["console.log('login",{"_index":1488,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["console.log('logout",{"_index":1655,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["console.log('mycolums",{"_index":1998,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["console.log('parsed",{"_index":1979,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["console.log('redirecting",{"_index":196,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{}}}],["console.log('s",{"_index":1746,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["console.log('selected",{"_index":1752,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["console.log('setting",{"_index":1347,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["console.log('sort",{"_index":2075,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["console.log('table",{"_index":1974,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["console.log('tibco",{"_index":2001,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["console.log('user",{"_index":1505,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["console.log(json.stringify(error",{"_index":1592,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["console.log(json.stringify(response",{"_index":795,"title":{},"body":{"injectables/RequestCacheService.html":{}}}],["console.log(m",{"_index":1990,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["console.log(originalreq.url",{"_index":728,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["console.log(params",{"_index":1452,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["console.log(params['errorcode",{"_index":1454,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["console.log(params['errormessage",{"_index":1455,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["console.log(parsedjsonsource[0",{"_index":1985,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["console.log(row",{"_index":1741,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["console.log(this.datasource",{"_index":1744,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["console.log(value",{"_index":619,"title":{},"body":{"injectables/LogService.html":{}}}],["const",{"_index":177,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"pipes/DurationSincePipe.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"pipes/HighlightPipe.html":{},"injectables/LogService.html":{},"guards/LoginPrefillResolver.html":{},"interceptors/MockingInterceptor.html":{},"injectables/RequestCacheService.html":{},"injectables/TcButtonsHelperService.html":{},"classes/TcCoreCommonFunctions.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{}}}],["constructor",{"_index":58,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/CachingInterceptor.html":{},"classes/Claim.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"guards/LoginPrefillResolver.html":{},"interceptors/MockingInterceptor.html":{},"directives/OnCreateDirective.html":{},"classes/Owner.html":{},"classes/RouteAction.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{},"injectables/TcButtonsHelperService.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"classes/TibcoCloudTableDataSource.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["constructor(accountid",{"_index":902,"title":{},"body":{"classes/Subscription.html":{}}}],["constructor(action",{"_index":817,"title":{},"body":{"classes/RouteAction.html":{}}}],["constructor(cache",{"_index":254,"title":{},"body":{"interceptors/CachingInterceptor.html":{}}}],["constructor(dialogref",{"_index":1665,"title":{},"body":{"components/TibcoCloudNewElementComponent.html":{}}}],["constructor(groups",{"_index":821,"title":{},"body":{"classes/Sandbox.html":{}}}],["constructor(http",{"_index":313,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"interceptors/MockingInterceptor.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{}}}],["constructor(id",{"_index":517,"title":{},"body":{"classes/Group.html":{}}}],["constructor(location",{"_index":1136,"title":{},"body":{"injectables/TcGeneralConfigService.html":{},"components/TibcoCloudNavbarComponent.html":{}}}],["constructor(logger",{"_index":1699,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["constructor(paginator",{"_index":2020,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["constructor(private",{"_index":133,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"interceptors/CachingInterceptor.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"interceptors/MockingInterceptor.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{}}}],["constructor(protected",{"_index":1886,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["constructor(public",{"_index":34,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/RouteAction.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{}}}],["constructor(route",{"_index":1421,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["constructor(router",{"_index":97,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"components/TibcoCloudConfigurationComponent.html":{}}}],["constructor(sharedstateservice",{"_index":1178,"title":{},"body":{"injectables/TcGeneralLandingPageConfigService.html":{}}}],["constructor(tclogin",{"_index":1471,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["constructor(tcsharedstate",{"_index":430,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["consume",{"_index":2055,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["contact",{"_index":1431,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["container",{"_index":1638,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["contains",{"_index":2146,"title":{},"body":{"index.html":{}}}],["content",{"_index":494,"title":{},"body":{"classes/GeneralLandingPageConfig.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["content.json",{"_index":1149,"title":{},"body":{"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{}}}],["content/tsc",{"_index":1118,"title":{},"body":{"modules/TcCoreLibModule.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":816,"title":{},"body":{"classes/RouteAction.html":{}}}],["converttojson",{"_index":953,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["converttojson(array",{"_index":963,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["core",{"_index":329,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/TcCoreCommonFunctions.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":2110,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":448,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"components/TibcoCloudNewElementComponent.html":{}}}],["create.directive",{"_index":1094,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["create.directive.ts",{"_index":744,"title":{},"body":{"directives/OnCreateDirective.html":{},"coverage.html":{}}}],["create.directive.ts:10",{"_index":753,"title":{},"body":{"directives/OnCreateDirective.html":{}}}],["create.directive.ts:16",{"_index":756,"title":{},"body":{"directives/OnCreateDirective.html":{}}}],["create.directive.ts:9",{"_index":754,"title":{},"body":{"directives/OnCreateDirective.html":{}}}],["createbutton",{"_index":913,"title":{},"body":{"injectables/TcButtonsHelperService.html":{}}}],["created",{"_index":760,"title":{},"body":{"directives/OnCreateDirective.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["createdby",{"_index":837,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["createdbyname",{"_index":838,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["creategeneralconfig",{"_index":1133,"title":{},"body":{"injectables/TcGeneralConfigService.html":{}}}],["creategeneralconfig(sandboxid",{"_index":1139,"title":{},"body":{"injectables/TcGeneralConfigService.html":{}}}],["creategenerallandingpageconfig",{"_index":1175,"title":{},"body":{"injectables/TcGeneralLandingPageConfigService.html":{}}}],["creategenerallandingpageconfig(sandboxid",{"_index":1179,"title":{},"body":{"injectables/TcGeneralLandingPageConfigService.html":{}}}],["createsharedstate",{"_index":1260,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["createsharedstate(name",{"_index":1267,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["createtoolbarbuttons",{"_index":1317,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["createuiappconfig",{"_index":1261,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["createuiappconfig(sandboxid",{"_index":1269,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["csdk",{"_index":2144,"title":{},"body":{"index.html":{}}}],["cursor",{"_index":1605,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["custom",{"_index":1353,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{}}}],["customizedcomponents",{"_index":1650,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["d",{"_index":723,"title":{},"body":{"interceptors/MockingInterceptor.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"classes/TibcoCloudTableDataSource.html":{}}}],["d.status",{"_index":724,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["d0d5e2",{"_index":1766,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["data",{"_index":530,"title":{},"body":{"pipes/HighlightPipe.html":{},"interceptors/MockingInterceptor.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"classes/TibcoCloudTableDataSource.html":{}}}],["data.replace(regex",{"_index":563,"title":{},"body":{"pipes/HighlightPipe.html":{}}}],["data.resourcetype",{"_index":1676,"title":{},"body":{"components/TibcoCloudNewElementComponent.html":{}}}],["data.sort((a",{"_index":2072,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["data.splice(startindex",{"_index":2069,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["data['body",{"_index":733,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["data['body']['mockedresponses",{"_index":730,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["data['body']['mockedresponses'][originalreq.url",{"_index":732,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["datamutations",{"_index":2056,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["datasource",{"_index":1689,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{}}}],["datasource.ts",{"_index":2005,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["datasource.ts:13",{"_index":2021,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["datasource.ts:29",{"_index":2022,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["datasource.ts:50",{"_index":2026,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["datasource.ts:56",{"_index":2037,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["datasource.ts:65",{"_index":2046,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["date",{"_index":373,"title":{},"body":{"pipes/DurationSincePipe.html":{},"injectables/LogService.html":{}}}],["date(a[field",{"_index":771,"title":{},"body":{"pipes/OrderByDatePipe.html":{}}}],["date(b[field",{"_index":772,"title":{},"body":{"pipes/OrderByDatePipe.html":{}}}],["date(value",{"_index":374,"title":{},"body":{"pipes/DurationSincePipe.html":{}}}],["date.now",{"_index":798,"title":{},"body":{"injectables/RequestCacheService.html":{}}}],["date.now().tostring",{"_index":1242,"title":{},"body":{"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{}}}],["date.pipe",{"_index":1084,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["date.pipe.ts",{"_index":764,"title":{},"body":{"pipes/OrderByDatePipe.html":{},"coverage.html":{}}}],["date.pipe.ts:8",{"_index":768,"title":{},"body":{"pipes/OrderByDatePipe.html":{}}}],["days",{"_index":388,"title":{},"body":{"pipes/DurationSincePipe.html":{}}}],["debug",{"_index":574,"title":{},"body":{"injectables/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["debug(msg",{"_index":582,"title":{},"body":{"injectables/LogService.html":{}}}],["decide",{"_index":223,"title":{},"body":{"guards/AuthGuard.html":{}}}],["declarations",{"_index":1000,"title":{},"body":{"modules/TcCoreLibModule.html":{},"overview.html":{}}}],["declare",{"_index":1630,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["decorators",{"_index":1625,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["dedede",{"_index":1382,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["deep",{"_index":1558,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["default",{"_index":108,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"pipes/HighlightPipe.html":{},"injectables/LogService.html":{},"interceptors/MockingInterceptor.html":{},"injectables/RequestCacheService.html":{},"injectables/TcButtonsHelperService.html":{},"classes/TcCoreCommonFunctions.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["default_config_url",{"_index":309,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["defaultappconfig",{"_index":336,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["defaultlandingpageconfig",{"_index":504,"title":{},"body":{"guards/GeneralLandingPageConfigResolver.html":{}}}],["defined",{"_index":20,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/CachingInterceptor.html":{},"classes/Claim.html":{},"classes/ConfigurationMenuConfig.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"classes/ConfigurationMenuEntry.html":{},"interfaces/Deserializable.html":{},"pipes/DurationSincePipe.html":{},"pipes/EllipsisPipe.html":{},"classes/GeneralConfig.html":{},"guards/GeneralConfigResolver.html":{},"classes/GeneralLandingPageConfig.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/Group.html":{},"pipes/HighlightPipe.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"injectables/LogService.html":{},"classes/LoginPrefill.html":{},"guards/LoginPrefillResolver.html":{},"interceptors/MockingInterceptor.html":{},"directives/OnCreateDirective.html":{},"pipes/OrderByDatePipe.html":{},"classes/Owner.html":{},"injectables/RequestCacheService.html":{},"pipes/ReversePipe.html":{},"classes/RoleAttribute.html":{},"classes/RouteAction.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"classes/Subscription.html":{},"injectables/TcButtonsHelperService.html":{},"classes/TcCoreCommonFunctions.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"classes/ToolbarButton.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{}}}],["delay",{"_index":677,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["delay(100",{"_index":722,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["delegate",{"_index":213,"title":{},"body":{"guards/AuthGuard.html":{}}}],["delete",{"_index":1748,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{}}}],["delimited",{"_index":631,"title":{},"body":{"injectables/LogService.html":{}}}],["depend",{"_index":2152,"title":{},"body":{"index.html":{}}}],["dependant",{"_index":2151,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":998,"title":{"dependencies.html":{}},"body":{"modules/TcCoreLibModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":497,"title":{},"body":{"classes/GeneralLandingPageConfig.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"classes/TibcoCloudTableDataSource.html":{}}}],["deserializable",{"_index":9,"title":{"interfaces/Deserializable.html":{}},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/ConfigurationMenuConfig.html":{},"classes/ConfigurationMenuEntry.html":{},"interfaces/Deserializable.html":{},"classes/GeneralConfig.html":{},"classes/GeneralLandingPageConfig.html":{},"classes/Group.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/RoleAttribute.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"classes/Subscription.html":{},"classes/ToolbarButton.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{},"coverage.html":{}}}],["deserialize",{"_index":16,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/ConfigurationMenuConfig.html":{},"interfaces/Deserializable.html":{},"classes/GeneralConfig.html":{},"classes/GeneralLandingPageConfig.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/RoleAttribute.html":{},"classes/SandboxList.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"classes/ToolbarButton.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{}}}],["deserialize(input",{"_index":25,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/ConfigurationMenuConfig.html":{},"classes/ConfigurationMenuEntry.html":{},"interfaces/Deserializable.html":{},"classes/GeneralConfig.html":{},"classes/GeneralLandingPageConfig.html":{},"classes/Group.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/RoleAttribute.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"classes/Subscription.html":{},"classes/ToolbarButton.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{}}}],["destroyed",{"_index":2028,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["dialog",{"_index":1680,"title":{},"body":{"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{}}}],["dialogref",{"_index":1663,"title":{},"body":{"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":1838,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["direction",{"_index":1682,"title":{},"body":{"components/TibcoCloudNewElementComponent.html":{}}}],["directive",{"_index":740,"title":{"directives/OnCreateDirective.html":{}},"body":{"directives/OnCreateDirective.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":742,"title":{},"body":{"directives/OnCreateDirective.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["directives/on",{"_index":1093,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["disable",{"_index":1125,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["disabled",{"_index":1645,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["disconnect",{"_index":2017,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["display",{"_index":422,"title":{},"body":{"classes/GeneralConfig.html":{},"classes/RoleAttribute.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["display:flex",{"_index":1770,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["displayed",{"_index":1720,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{}}}],["displayedcolumns",{"_index":1690,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["displayname",{"_index":408,"title":{},"body":{"classes/GeneralConfig.html":{},"classes/RoleAttribute.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["div",{"_index":1518,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNewElementComponent.html":{}}}],["documentation",{"_index":2111,"title":{},"body":{"coverage.html":{}}}],["documentationurl",{"_index":409,"title":{},"body":{"classes/GeneralConfig.html":{},"classes/RoleAttribute.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["docurl",{"_index":1619,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["dologin",{"_index":1469,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["dom",{"_index":1308,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["domsanitizer",{"_index":1044,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["done",{"_index":452,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["dont",{"_index":273,"title":{},"body":{"interceptors/CachingInterceptor.html":{},"interceptors/MockingInterceptor.html":{}}}],["download",{"_index":1647,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["due",{"_index":140,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{}}}],["duration",{"_index":1822,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["durationsince",{"_index":364,"title":{},"body":{"pipes/DurationSincePipe.html":{}}}],["durationsincepipe",{"_index":359,"title":{"pipes/DurationSincePipe.html":{}},"body":{"pipes/DurationSincePipe.html":{},"modules/TcCoreLibModule.html":{},"coverage.html":{},"overview.html":{}}}],["during",{"_index":2035,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["dynamic",{"_index":974,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["e",{"_index":976,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["e)).tofixed(2",{"_index":980,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["ease",{"_index":1604,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["eee",{"_index":1763,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["element",{"_index":1399,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["element'},{'name",{"_index":1409,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["element.component",{"_index":1114,"title":{},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudSettingLandingComponent.html":{}}}],["element.component.css",{"_index":1661,"title":{},"body":{"components/TibcoCloudNewElementComponent.html":{}}}],["element.component.html",{"_index":1662,"title":{},"body":{"components/TibcoCloudNewElementComponent.html":{}}}],["element.component.ts",{"_index":1660,"title":{},"body":{"components/TibcoCloudNewElementComponent.html":{},"coverage.html":{}}}],["element.component.ts:11",{"_index":1672,"title":{},"body":{"components/TibcoCloudNewElementComponent.html":{}}}],["element.component.ts:12",{"_index":1673,"title":{},"body":{"components/TibcoCloudNewElementComponent.html":{}}}],["element.component.ts:13",{"_index":1667,"title":{},"body":{"components/TibcoCloudNewElementComponent.html":{}}}],["element.component.ts:16",{"_index":1671,"title":{},"body":{"components/TibcoCloudNewElementComponent.html":{}}}],["element.component.ts:17",{"_index":1670,"title":{},"body":{"components/TibcoCloudNewElementComponent.html":{}}}],["element.component.ts:22",{"_index":1668,"title":{},"body":{"components/TibcoCloudNewElementComponent.html":{}}}],["element.configuration",{"_index":1814,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["element.highlighted",{"_index":1736,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["element.key",{"_index":1194,"title":{},"body":{"injectables/TcGeneralLandingPageConfigService.html":{}}}],["element.roles.indexof(r",{"_index":1197,"title":{},"body":{"injectables/TcGeneralLandingPageConfigService.html":{}}}],["element/tibco",{"_index":1113,"title":{},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"coverage.html":{}}}],["element[headername",{"_index":1996,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["elementref",{"_index":1624,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["elementtype",{"_index":1664,"title":{},"body":{"components/TibcoCloudNewElementComponent.html":{}}}],["ellipsis",{"_index":400,"title":{},"body":{"pipes/EllipsisPipe.html":{}}}],["ellipsispipe",{"_index":398,"title":{"pipes/EllipsisPipe.html":{}},"body":{"pipes/EllipsisPipe.html":{},"modules/TcCoreLibModule.html":{},"coverage.html":{},"overview.html":{}}}],["email",{"_index":38,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"guards/LoginPrefillResolver.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{},"miscellaneous/variables.html":{}}}],["email_id_key",{"_index":657,"title":{},"body":{"guards/LoginPrefillResolver.html":{},"injectables/TcLoginService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emailid",{"_index":73,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"guards/LoginPrefillResolver.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{}}}],["emea.tibco.com",{"_index":114,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{}}}],["emits",{"_index":2024,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["enabled",{"_index":928,"title":{},"body":{"injectables/TcButtonsHelperService.html":{},"classes/ToolbarButton.html":{}}}],["encapsulate",{"_index":2008,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["encoded",{"_index":190,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{}}}],["entire",{"_index":1453,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["entitled",{"_index":1433,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["entry",{"_index":303,"title":{},"body":{"classes/ConfigurationMenuConfig.html":{},"classes/ConfigurationMenuEntry.html":{},"injectables/RequestCacheService.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{}}}],["entry'},{'name",{"_index":1412,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["entry.component",{"_index":1100,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["entry.component.css",{"_index":1851,"title":{},"body":{"components/TibcoCloudSettingMenuEntryComponent.html":{}}}],["entry.component.html",{"_index":1852,"title":{},"body":{"components/TibcoCloudSettingMenuEntryComponent.html":{}}}],["entry.component.ts",{"_index":1850,"title":{},"body":{"components/TibcoCloudSettingMenuEntryComponent.html":{},"coverage.html":{}}}],["entry.component.ts:10",{"_index":1856,"title":{},"body":{"components/TibcoCloudSettingMenuEntryComponent.html":{}}}],["entry.component.ts:11",{"_index":1858,"title":{},"body":{"components/TibcoCloudSettingMenuEntryComponent.html":{}}}],["entry.component.ts:12",{"_index":1857,"title":{},"body":{"components/TibcoCloudSettingMenuEntryComponent.html":{}}}],["entry.component.ts:13",{"_index":1855,"title":{},"body":{"components/TibcoCloudSettingMenuEntryComponent.html":{}}}],["entry.component.ts:17",{"_index":1861,"title":{},"body":{"components/TibcoCloudSettingMenuEntryComponent.html":{}}}],["entry.component.ts:21",{"_index":1859,"title":{},"body":{"components/TibcoCloudSettingMenuEntryComponent.html":{}}}],["entry.content",{"_index":1161,"title":{},"body":{"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{}}}],["entry.id",{"_index":1165,"title":{},"body":{"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{}}}],["entry.name",{"_index":1163,"title":{},"body":{"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{}}}],["entry.sandboxid",{"_index":1162,"title":{},"body":{"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{}}}],["entry.type",{"_index":1164,"title":{},"body":{"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{}}}],["entry/tibco",{"_index":1099,"title":{},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"coverage.html":{}}}],["entrycomponents",{"_index":1026,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["enum",{"_index":642,"title":{},"body":{"injectables/LogService.html":{}}}],["enumerations",{"_index":2141,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":136,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"components/TibcoCloudSettingLandingComponent.html":{}}}],["err.status",{"_index":161,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{}}}],["error",{"_index":89,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"injectables/LogService.html":{},"interceptors/MockingInterceptor.html":{},"modules/TcCoreLibModule.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["error'},{'name",{"_index":1404,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["error(msg",{"_index":587,"title":{},"body":{"injectables/LogService.html":{}}}],["error.component",{"_index":1092,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["error.component.css",{"_index":1417,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["error.component.html",{"_index":1418,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["error.component.ts",{"_index":1416,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{},"coverage.html":{}}}],["error.component.ts:32",{"_index":1424,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["error.component.ts:33",{"_index":1448,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["error.component.ts:35",{"_index":1447,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["error.component.ts:63",{"_index":1423,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["error.component.ts:9",{"_index":1422,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["error.error.error_description",{"_index":1508,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["error/tibco",{"_index":1091,"title":{},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudErrorComponent.html":{},"coverage.html":{}}}],["errorcode",{"_index":1425,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["errormessage",{"_index":1427,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["escapestring",{"_index":954,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["escapestring(text",{"_index":965,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["event",{"_index":285,"title":{},"body":{"interceptors/CachingInterceptor.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{}}}],["eventemitter",{"_index":755,"title":{},"body":{"directives/OnCreateDirective.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["everything",{"_index":2053,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["example",{"_index":1569,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"classes/TibcoCloudTableDataSource.html":{},"miscellaneous/functions.html":{}}}],["existing",{"_index":939,"title":{},"body":{"injectables/TcButtonsHelperService.html":{}}}],["expect",{"_index":450,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["expired",{"_index":800,"title":{},"body":{"injectables/RequestCacheService.html":{}}}],["expiredentry.lastread",{"_index":802,"title":{},"body":{"injectables/RequestCacheService.html":{}}}],["expires_in",{"_index":13,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{}}}],["expiry",{"_index":227,"title":{},"body":{"guards/AuthGuard.html":{}}}],["export",{"_index":32,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/CachingInterceptor.html":{},"classes/Claim.html":{},"classes/ConfigurationMenuConfig.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"classes/ConfigurationMenuEntry.html":{},"interfaces/Deserializable.html":{},"pipes/DurationSincePipe.html":{},"pipes/EllipsisPipe.html":{},"classes/GeneralConfig.html":{},"guards/GeneralConfigResolver.html":{},"classes/GeneralLandingPageConfig.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/Group.html":{},"pipes/HighlightPipe.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"injectables/LogService.html":{},"classes/LoginPrefill.html":{},"guards/LoginPrefillResolver.html":{},"interceptors/MockingInterceptor.html":{},"directives/OnCreateDirective.html":{},"pipes/OrderByDatePipe.html":{},"classes/Owner.html":{},"injectables/RequestCacheService.html":{},"pipes/ReversePipe.html":{},"classes/RoleAttribute.html":{},"classes/RouteAction.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"classes/Subscription.html":{},"injectables/TcButtonsHelperService.html":{},"classes/TcCoreCommonFunctions.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"classes/ToolbarButton.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{}}}],["exportas",{"_index":758,"title":{},"body":{"directives/OnCreateDirective.html":{}}}],["exports",{"_index":1003,"title":{},"body":{"modules/TcCoreLibModule.html":{},"overview.html":{}}}],["extends",{"_index":1524,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{}}}],["externalize",{"_index":171,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{}}}],["extra",{"_index":617,"title":{},"body":{"injectables/LogService.html":{}}}],["f5f5f5",{"_index":1776,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["face",{"_index":1924,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["failed",{"_index":1510,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["failure",{"_index":153,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{}}}],["false",{"_index":158,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"pipes/HighlightPipe.html":{},"injectables/LogService.html":{},"pipes/ReversePipe.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["family",{"_index":1550,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["fatal",{"_index":575,"title":{},"body":{"injectables/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["fatal(msg",{"_index":589,"title":{},"body":{"injectables/LogService.html":{}}}],["fetching",{"_index":2010,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["ffffff",{"_index":1380,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{}}}],["field",{"_index":767,"title":{},"body":{"pipes/OrderByDatePipe.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/CachingInterceptor.html":{},"classes/Claim.html":{},"classes/ConfigurationMenuConfig.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"classes/ConfigurationMenuEntry.html":{},"interfaces/Deserializable.html":{},"pipes/DurationSincePipe.html":{},"pipes/EllipsisPipe.html":{},"classes/GeneralConfig.html":{},"guards/GeneralConfigResolver.html":{},"classes/GeneralLandingPageConfig.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/Group.html":{},"pipes/HighlightPipe.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"injectables/LogService.html":{},"classes/LoginPrefill.html":{},"guards/LoginPrefillResolver.html":{},"interceptors/MockingInterceptor.html":{},"directives/OnCreateDirective.html":{},"pipes/OrderByDatePipe.html":{},"classes/Owner.html":{},"injectables/RequestCacheService.html":{},"pipes/ReversePipe.html":{},"classes/RoleAttribute.html":{},"classes/RouteAction.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"classes/Subscription.html":{},"injectables/TcButtonsHelperService.html":{},"classes/TcCoreCommonFunctions.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"classes/ToolbarButton.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{},"coverage.html":{}}}],["filesizetohuman",{"_index":955,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["filesizetohuman(size",{"_index":967,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["fill",{"_index":1560,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["filled",{"_index":925,"title":{},"body":{"injectables/TcButtonsHelperService.html":{},"components/TibcoCloudMenuBarComponent.html":{},"classes/ToolbarButton.html":{}}}],["filtering",{"_index":2015,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["find",{"_index":693,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["firecreated",{"_index":752,"title":{},"body":{"directives/OnCreateDirective.html":{}}}],["firstname",{"_index":39,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{}}}],["fixed",{"_index":1439,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["flag",{"_index":269,"title":{},"body":{"interceptors/CachingInterceptor.html":{}}}],["flatmap",{"_index":325,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["flatmap(config",{"_index":464,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["flatmap(uiappid",{"_index":349,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{}}}],["flex",{"_index":1681,"title":{},"body":{"components/TibcoCloudNewElementComponent.html":{}}}],["flexlayoutmodule",{"_index":1071,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["flush",{"_index":476,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{}}}],["flushcache",{"_index":1143,"title":{},"body":{"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{}}}],["folder",{"_index":685,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["font",{"_index":1364,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["form",{"_index":1236,"title":{},"body":{"injectables/TcLoginService.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["formatparams",{"_index":576,"title":{},"body":{"injectables/LogService.html":{}}}],["formatparams(params",{"_index":591,"title":{},"body":{"injectables/LogService.html":{}}}],["formsmodule",{"_index":1068,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["forroot",{"_index":1027,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["free",{"_index":2033,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["full",{"_index":1760,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["function",{"_index":1658,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{},"coverage.html":{}}}],["function(event",{"_index":1654,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["functions",{"_index":331,"title":{"miscellaneous/functions.html":{}},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"miscellaneous/functions.html":{}}}],["functions.ts",{"_index":948,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{},"coverage.html":{}}}],["functions.ts:11",{"_index":968,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["functions.ts:16",{"_index":961,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["functions.ts:25",{"_index":964,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["functions.ts:37",{"_index":972,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["functions.ts:51",{"_index":957,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["functions.ts:65",{"_index":958,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["functions.ts:7",{"_index":966,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["functions.ts:74",{"_index":959,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["g",{"_index":560,"title":{},"body":{"pipes/HighlightPipe.html":{},"classes/TcCoreCommonFunctions.html":{}}}],["g.svg",{"_index":2096,"title":{},"body":{"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["general",{"_index":405,"title":{},"body":{"classes/GeneralConfig.html":{},"guards/GeneralConfigResolver.html":{},"classes/GeneralLandingPageConfig.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"classes/RoleAttribute.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"coverage.html":{}}}],["general'},{'name",{"_index":1413,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["general.component",{"_index":1103,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["general.component.css",{"_index":1871,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["general.component.html",{"_index":1872,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["general.component.ts",{"_index":1870,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{},"coverage.html":{}}}],["general.component.ts:15",{"_index":1878,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["general.component.ts:16",{"_index":1883,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["general.component.ts:17",{"_index":1879,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["general.component.ts:18",{"_index":1880,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["general.component.ts:19",{"_index":1882,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["general.component.ts:20",{"_index":1881,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["general.component.ts:21",{"_index":1885,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["general.component.ts:22",{"_index":1875,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["general.component.ts:26",{"_index":1877,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["general.component.ts:37",{"_index":1876,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["general.component.ts:41",{"_index":1884,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["general.config.tibcolabs.client.context.public",{"_index":1148,"title":{},"body":{"injectables/TcGeneralConfigService.html":{}}}],["general.landing.page.config.tibcolabs.client.context.public",{"_index":1187,"title":{},"body":{"injectables/TcGeneralLandingPageConfigService.html":{}}}],["general/tibco",{"_index":1102,"title":{},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"coverage.html":{}}}],["generalconfig",{"_index":404,"title":{"classes/GeneralConfig.html":{}},"body":{"classes/GeneralConfig.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/RoleAttribute.html":{},"injectables/TcGeneralConfigService.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"coverage.html":{}}}],["generalconfig().deserialize((json.parse(value.sharedstateentries[0].content.json",{"_index":1172,"title":{},"body":{"injectables/TcGeneralConfigService.html":{}}}],["generalconfig().deserialize(config",{"_index":466,"title":{},"body":{"guards/GeneralConfigResolver.html":{}}}],["generalconfig().deserialize(json.parse(value.sharedstateentries[0].content.json",{"_index":1158,"title":{},"body":{"injectables/TcGeneralConfigService.html":{}}}],["generalconfigresolver",{"_index":425,"title":{"guards/GeneralConfigResolver.html":{}},"body":{"guards/GeneralConfigResolver.html":{},"coverage.html":{}}}],["generalconfigservice",{"_index":432,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["generallandingpageconfig",{"_index":483,"title":{"classes/GeneralLandingPageConfig.html":{}},"body":{"classes/GeneralLandingPageConfig.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"coverage.html":{}}}],["generallandingpageconfig().deserialize((json.parse(value.sharedstateentries[0].content.json",{"_index":1191,"title":{},"body":{"injectables/TcGeneralLandingPageConfigService.html":{}}}],["generallandingpageconfig().deserialize(config",{"_index":512,"title":{},"body":{"guards/GeneralLandingPageConfigResolver.html":{}}}],["generallandingpageconfig().deserialize(json.parse(value.sharedstateentries[0].content.json",{"_index":1189,"title":{},"body":{"injectables/TcGeneralLandingPageConfigService.html":{}}}],["generallandingpageconfigresolver",{"_index":503,"title":{"guards/GeneralLandingPageConfigResolver.html":{}},"body":{"guards/GeneralLandingPageConfigResolver.html":{},"coverage.html":{}}}],["generallandingpageconfigservice",{"_index":505,"title":{},"body":{"guards/GeneralLandingPageConfigResolver.html":{},"components/TibcoCloudSettingLandingComponent.html":{}}}],["get(req",{"_index":781,"title":{},"body":{"injectables/RequestCacheService.html":{}}}],["getappid",{"_index":310,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["getclientid",{"_index":653,"title":{},"body":{"guards/LoginPrefillResolver.html":{}}}],["getconfigurationmenuconfig",{"_index":311,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{}}}],["getdefaultappconfig",{"_index":427,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["getemail",{"_index":654,"title":{},"body":{"guards/LoginPrefillResolver.html":{}}}],["getgeneralconfig",{"_index":1134,"title":{},"body":{"injectables/TcGeneralConfigService.html":{}}}],["getgeneralconfig(uiappid",{"_index":1141,"title":{},"body":{"injectables/TcGeneralConfigService.html":{}}}],["getgenerallandingpageconfig",{"_index":1176,"title":{},"body":{"injectables/TcGeneralLandingPageConfigService.html":{}}}],["getgenerallandingpageconfig(uiappid",{"_index":1181,"title":{},"body":{"injectables/TcGeneralLandingPageConfigService.html":{}}}],["getlandingpage",{"_index":1173,"title":{},"body":{"injectables/TcGeneralLandingPageConfigService.html":{}}}],["getlandingpageforroles",{"_index":1174,"title":{},"body":{"injectables/TcGeneralLandingPageConfigService.html":{}}}],["getlevelstring",{"_index":577,"title":{},"body":{"injectables/LogService.html":{}}}],["getlevelstring(level",{"_index":594,"title":{},"body":{"injectables/LogService.html":{}}}],["getpageddata",{"_index":2018,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["getpageddata(data",{"_index":2036,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["getroute",{"_index":1874,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["getsharedstate",{"_index":1262,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["getsharedstate(name",{"_index":1271,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["getsorteddata",{"_index":2019,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["getsorteddata(data",{"_index":2045,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["getstartedclick",{"_index":1910,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["getstartedevent",{"_index":1912,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["getting",{"_index":709,"title":{"index.html":{}},"body":{"interceptors/MockingInterceptor.html":{}}}],["gettoken",{"_index":1496,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["getuiappconfig",{"_index":1263,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["getuiappconfig(uiappid",{"_index":1273,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["gi",{"_index":562,"title":{},"body":{"pipes/HighlightPipe.html":{}}}],["global",{"_index":552,"title":{},"body":{"pipes/HighlightPipe.html":{}}}],["globalnavbar",{"_index":1631,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["go",{"_index":2156,"title":{},"body":{"index.html":{}}}],["group",{"_index":33,"title":{"classes/Group.html":{}},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/GeneralConfig.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/RoleAttribute.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{},"coverage.html":{}}}],["group_error",{"_index":1444,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["groups",{"_index":48,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{},"components/TibcoCloudErrorComponent.html":{}}}],["guard",{"_index":202,"title":{"guards/AuthGuard.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"guards/LoginPrefillResolver.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":204,"title":{},"body":{"guards/AuthGuard.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"guards/LoginPrefillResolver.html":{},"overview.html":{}}}],["guards/auth.guard",{"_index":1077,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["handleselectionevent",{"_index":1318,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["handletoolbarbuttonevent",{"_index":1319,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["handling",{"_index":214,"title":{},"body":{"guards/AuthGuard.html":{},"modules/TcCoreLibModule.html":{},"index.html":{}}}],["hash",{"_index":1637,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["hashlocationstrategy",{"_index":973,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["header",{"_index":923,"title":{},"body":{"injectables/TcButtonsHelperService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["header.component",{"_index":1087,"title":{},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudMenuBarComponent.html":{}}}],["header.component.css",{"_index":2086,"title":{},"body":{"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["header.component.html",{"_index":2087,"title":{},"body":{"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["header.component.ts",{"_index":2085,"title":{},"body":{"components/TibcoCloudWidgetHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:10",{"_index":2089,"title":{},"body":{"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["header.component.ts:11",{"_index":2090,"title":{},"body":{"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["header.component.ts:12",{"_index":2092,"title":{},"body":{"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["header.component.ts:13",{"_index":2091,"title":{},"body":{"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["header.component.ts:14",{"_index":2088,"title":{},"body":{"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["header.component.ts:19",{"_index":2093,"title":{},"body":{"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["header.ts",{"_index":2097,"title":{},"body":{"classes/ToolbarButton.html":{},"coverage.html":{}}}],["header.ts:10",{"_index":2104,"title":{},"body":{"classes/ToolbarButton.html":{}}}],["header.ts:4",{"_index":2101,"title":{},"body":{"classes/ToolbarButton.html":{}}}],["header.ts:5",{"_index":2100,"title":{},"body":{"classes/ToolbarButton.html":{}}}],["header.ts:6",{"_index":2103,"title":{},"body":{"classes/ToolbarButton.html":{}}}],["header.ts:7",{"_index":2098,"title":{},"body":{"classes/ToolbarButton.html":{}}}],["header.ts:8",{"_index":2102,"title":{},"body":{"classes/ToolbarButton.html":{}}}],["header.ts:9",{"_index":2099,"title":{},"body":{"classes/ToolbarButton.html":{}}}],["header/globalnavbar.js",{"_index":1120,"title":{},"body":{"modules/TcCoreLibModule.html":{},"miscellaneous/variables.html":{}}}],["header/tibco",{"_index":1086,"title":{},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"coverage.html":{}}}],["header:hover",{"_index":1773,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["headername",{"_index":1988,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["headers",{"_index":144,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{}}}],["headers.set('cacheresponse",{"_index":1292,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["headers.set('flushcache",{"_index":1293,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["headertext",{"_index":1529,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["height",{"_index":1355,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["held",{"_index":2034,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["help",{"_index":1648,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["helper.service",{"_index":1090,"title":{},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudConfigurationComponent.html":{}}}],["helper.service.ts",{"_index":911,"title":{},"body":{"injectables/TcButtonsHelperService.html":{},"coverage.html":{}}}],["helper.service.ts:11",{"_index":918,"title":{},"body":{"injectables/TcButtonsHelperService.html":{}}}],["helper.service.ts:26",{"_index":920,"title":{},"body":{"injectables/TcButtonsHelperService.html":{}}}],["helper.service.ts:39",{"_index":917,"title":{},"body":{"injectables/TcButtonsHelperService.html":{}}}],["helper.service.ts:46",{"_index":919,"title":{},"body":{"injectables/TcButtonsHelperService.html":{}}}],["helper.service.ts:7",{"_index":916,"title":{},"body":{"injectables/TcButtonsHelperService.html":{}}}],["hence",{"_index":166,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"components/TibcoCloudLoginComponent.html":{}}}],["here",{"_index":736,"title":{},"body":{"interceptors/MockingInterceptor.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"index.html":{}}}],["hidden",{"_index":1392,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["hide",{"_index":1777,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["higherpriority",{"_index":1200,"title":{},"body":{"injectables/TcGeneralLandingPageConfigService.html":{}}}],["highlight",{"_index":523,"title":{},"body":{"pipes/HighlightPipe.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{}}}],["highlight(element",{"_index":1706,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["highlight.content",{"_index":1923,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["highlight.title",{"_index":1922,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["highlightpipe",{"_index":521,"title":{"pipes/HighlightPipe.html":{}},"body":{"pipes/HighlightPipe.html":{},"modules/TcCoreLibModule.html":{},"coverage.html":{},"overview.html":{}}}],["highlights",{"_index":501,"title":{},"body":{"classes/GeneralLandingPageConfig.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{}}}],["highlightstable",{"_index":1956,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["highlightstylename",{"_index":528,"title":{},"body":{"pipes/HighlightPipe.html":{}}}],["highlighttext",{"_index":525,"title":{},"body":{"pipes/HighlightPipe.html":{}}}],["hit",{"_index":142,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{}}}],["homebutton",{"_index":1336,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["homeroute",{"_index":500,"title":{},"body":{"classes/GeneralLandingPageConfig.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{}}}],["host",{"_index":178,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["host[host.length",{"_index":181,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{}}}],["hostdomain",{"_index":180,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{}}}],["hosted",{"_index":175,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{}}}],["hour",{"_index":393,"title":{},"body":{"pipes/DurationSincePipe.html":{},"injectables/RequestCacheService.html":{}}}],["hours",{"_index":391,"title":{},"body":{"pipes/DurationSincePipe.html":{}}}],["html",{"_index":1398,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["http",{"_index":152,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"interceptors/MockingInterceptor.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudNavbarComponent.html":{}}}],["http/url",{"_index":702,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["http_interceptors",{"_index":1041,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["httpclient",{"_index":314,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"interceptors/MockingInterceptor.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{}}}],["httpclientmodule",{"_index":1042,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["httperrorresponse",{"_index":124,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{}}}],["httpevent",{"_index":121,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"interceptors/CachingInterceptor.html":{},"interceptors/MockingInterceptor.html":{}}}],["httphandler",{"_index":103,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"interceptors/CachingInterceptor.html":{},"interceptors/MockingInterceptor.html":{}}}],["httpheaders",{"_index":145,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"interceptors/MockingInterceptor.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{}}}],["httpinterceptor",{"_index":122,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"interceptors/CachingInterceptor.html":{},"interceptors/MockingInterceptor.html":{}}}],["httpparams",{"_index":1219,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["httprequest",{"_index":101,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"interceptors/CachingInterceptor.html":{},"interceptors/MockingInterceptor.html":{},"injectables/RequestCacheService.html":{}}}],["httpresponse",{"_index":123,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"interceptors/CachingInterceptor.html":{},"interceptors/MockingInterceptor.html":{},"injectables/RequestCacheService.html":{}}}],["httpresponse(d",{"_index":734,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["https",{"_index":707,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["https://account.cloud.tibco.com/idm/v1/login",{"_index":112,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{}}}],["https://account.cloud.tibco.com/tsc",{"_index":1116,"title":{},"body":{"modules/TcCoreLibModule.html":{},"miscellaneous/variables.html":{}}}],["https://account.tenant",{"_index":240,"title":{},"body":{"guards/AuthGuard.html":{}}}],["https://gist.github.com/adamrecsko/0f28f474eca63e0279455476cc11eca7",{"_index":546,"title":{},"body":{"pipes/HighlightPipe.html":{}}}],["https://localhost:4200/clientstate/states?$filter=type=private%20and%20name=%27testappjs.recentcases.tibcolabs.client.context.private%27",{"_index":155,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{}}}],["icon",{"_index":924,"title":{},"body":{"injectables/TcButtonsHelperService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"classes/ToolbarButton.html":{}}}],["iconmenus",{"_index":1641,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["iconurl",{"_index":495,"title":{},"body":{"classes/GeneralLandingPageConfig.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{}}}],["id",{"_index":35,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/GeneralConfig.html":{},"classes/GeneralLandingPageConfig.html":{},"classes/Group.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"classes/LoginPrefill.html":{},"guards/LoginPrefillResolver.html":{},"classes/Owner.html":{},"classes/RoleAttribute.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"classes/Subscription.html":{},"injectables/TcButtonsHelperService.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"classes/ToolbarButton.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{},"miscellaneous/variables.html":{}}}],["id.tolowercase().split",{"_index":1341,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["id/name",{"_index":2083,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{},"miscellaneous/functions.html":{}}}],["identifier",{"_index":2112,"title":{},"body":{"coverage.html":{}}}],["idm/v2/login",{"_index":1255,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["idm/v3/login",{"_index":1226,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["ids",{"_index":1721,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["idx",{"_index":750,"title":{},"body":{"directives/OnCreateDirective.html":{},"injectables/TcButtonsHelperService.html":{}}}],["if(this.loginprefill",{"_index":1490,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["ignore",{"_index":701,"title":{},"body":{"interceptors/MockingInterceptor.html":{},"classes/TcCoreCommonFunctions.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["imageurl",{"_index":424,"title":{},"body":{"classes/GeneralConfig.html":{},"classes/RoleAttribute.html":{}}}],["img",{"_index":1951,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["implements",{"_index":8,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/CachingInterceptor.html":{},"classes/Claim.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"pipes/DurationSincePipe.html":{},"pipes/EllipsisPipe.html":{},"classes/GeneralConfig.html":{},"guards/GeneralConfigResolver.html":{},"classes/GeneralLandingPageConfig.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/Group.html":{},"pipes/HighlightPipe.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"classes/LoginPrefill.html":{},"guards/LoginPrefillResolver.html":{},"interceptors/MockingInterceptor.html":{},"directives/OnCreateDirective.html":{},"pipes/OrderByDatePipe.html":{},"classes/Owner.html":{},"pipes/ReversePipe.html":{},"classes/RoleAttribute.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"classes/Subscription.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/ToolbarButton.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{}}}],["import",{"_index":31,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/CachingInterceptor.html":{},"classes/Claim.html":{},"classes/ConfigurationMenuConfig.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"classes/ConfigurationMenuEntry.html":{},"pipes/DurationSincePipe.html":{},"pipes/EllipsisPipe.html":{},"classes/GeneralConfig.html":{},"guards/GeneralConfigResolver.html":{},"classes/GeneralLandingPageConfig.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/Group.html":{},"pipes/HighlightPipe.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"injectables/LogService.html":{},"classes/LoginPrefill.html":{},"guards/LoginPrefillResolver.html":{},"interceptors/MockingInterceptor.html":{},"directives/OnCreateDirective.html":{},"pipes/OrderByDatePipe.html":{},"classes/Owner.html":{},"injectables/RequestCacheService.html":{},"pipes/ReversePipe.html":{},"classes/RoleAttribute.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"classes/Subscription.html":{},"injectables/TcButtonsHelperService.html":{},"classes/TcCoreCommonFunctions.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"classes/ToolbarButton.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{}}}],["imports",{"_index":1122,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["inactivity",{"_index":141,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{}}}],["including",{"_index":2012,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/CachingInterceptor.html":{},"classes/Claim.html":{},"classes/ConfigurationMenuConfig.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"classes/ConfigurationMenuEntry.html":{},"interfaces/Deserializable.html":{},"classes/GeneralConfig.html":{},"guards/GeneralConfigResolver.html":{},"classes/GeneralLandingPageConfig.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/Group.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"injectables/LogService.html":{},"classes/LoginPrefill.html":{},"guards/LoginPrefillResolver.html":{},"interceptors/MockingInterceptor.html":{},"directives/OnCreateDirective.html":{},"classes/Owner.html":{},"injectables/RequestCacheService.html":{},"classes/RoleAttribute.html":{},"classes/RouteAction.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"classes/Subscription.html":{},"injectables/TcButtonsHelperService.html":{},"classes/TcCoreCommonFunctions.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"classes/ToolbarButton.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/CachingInterceptor.html":{},"classes/Claim.html":{},"classes/ConfigurationMenuConfig.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"classes/ConfigurationMenuEntry.html":{},"interfaces/Deserializable.html":{},"pipes/DurationSincePipe.html":{},"pipes/EllipsisPipe.html":{},"classes/GeneralConfig.html":{},"guards/GeneralConfigResolver.html":{},"classes/GeneralLandingPageConfig.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/Group.html":{},"pipes/HighlightPipe.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"injectables/LogService.html":{},"classes/LoginPrefill.html":{},"guards/LoginPrefillResolver.html":{},"interceptors/MockingInterceptor.html":{},"directives/OnCreateDirective.html":{},"pipes/OrderByDatePipe.html":{},"classes/Owner.html":{},"injectables/RequestCacheService.html":{},"pipes/ReversePipe.html":{},"classes/RoleAttribute.html":{},"classes/RouteAction.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"classes/Subscription.html":{},"injectables/TcButtonsHelperService.html":{},"classes/TcCoreCommonFunctions.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"classes/ToolbarButton.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{},"miscellaneous/enumerations.html":{}}}],["info(msg",{"_index":596,"title":{},"body":{"injectables/LogService.html":{}}}],["inherited",{"_index":1533,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{}}}],["init",{"_index":1489,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["initial",{"_index":1580,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["inject",{"_index":212,"title":{},"body":{"guards/AuthGuard.html":{},"components/TibcoCloudNewElementComponent.html":{}}}],["inject(mat_dialog_data",{"_index":1669,"title":{},"body":{"components/TibcoCloudNewElementComponent.html":{}}}],["injectable",{"_index":119,"title":{"injectables/LogService.html":{},"injectables/RequestCacheService.html":{},"injectables/TcButtonsHelperService.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{}},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"interceptors/CachingInterceptor.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"injectables/LogService.html":{},"guards/LoginPrefillResolver.html":{},"interceptors/MockingInterceptor.html":{},"injectables/RequestCacheService.html":{},"injectables/TcButtonsHelperService.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"coverage.html":{}}}],["injectables",{"_index":569,"title":{},"body":{"injectables/LogService.html":{},"injectables/RequestCacheService.html":{},"injectables/TcButtonsHelperService.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"overview.html":{}}}],["input",{"_index":30,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/ConfigurationMenuConfig.html":{},"classes/ConfigurationMenuEntry.html":{},"interfaces/Deserializable.html":{},"classes/GeneralConfig.html":{},"classes/GeneralLandingPageConfig.html":{},"classes/Group.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"classes/LoginPrefill.html":{},"directives/OnCreateDirective.html":{},"classes/Owner.html":{},"classes/RoleAttribute.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"classes/Subscription.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"classes/ToolbarButton.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{}}}],["input.attributes",{"_index":847,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["input.content",{"_index":849,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["input.createdby",{"_index":851,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["input.createdbyname",{"_index":853,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["input.description",{"_index":855,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["input.id",{"_index":857,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["input.isabandoned",{"_index":859,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["input.isorphaned",{"_index":861,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["input.json.content",{"_index":877,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["input.links",{"_index":863,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["input.modifiedbyid",{"_index":865,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["input.modifieddate",{"_index":867,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["input.name",{"_index":869,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["input.roles",{"_index":871,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["input.sandboxid",{"_index":872,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["input.scope",{"_index":874,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["input.type",{"_index":876,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["inputs",{"_index":749,"title":{},"body":{"directives/OnCreateDirective.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["insensitive",{"_index":561,"title":{},"body":{"pipes/HighlightPipe.html":{}}}],["instanceof",{"_index":137,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"interceptors/CachingInterceptor.html":{},"classes/TcCoreCommonFunctions.html":{}}}],["instead",{"_index":1646,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["integration.tcie.pro",{"_index":117,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{}}}],["integration.tcie.pro/idm/v1/login",{"_index":241,"title":{},"body":{"guards/AuthGuard.html":{}}}],["intercept",{"_index":96,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"interceptors/CachingInterceptor.html":{},"interceptors/MockingInterceptor.html":{}}}],["intercept(req",{"_index":100,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"interceptors/CachingInterceptor.html":{},"interceptors/MockingInterceptor.html":{}}}],["interceptor",{"_index":85,"title":{"interceptors/AuthErrorInterceptor.html":{},"interceptors/CachingInterceptor.html":{},"interceptors/MockingInterceptor.html":{}},"body":{"modules/TcCoreLibModule.html":{},"coverage.html":{}}}],["interceptor.ts",{"_index":90,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"interceptors/CachingInterceptor.html":{},"interceptors/MockingInterceptor.html":{},"coverage.html":{}}}],["interceptor.ts:122",{"_index":674,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["interceptor.ts:17",{"_index":111,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{}}}],["interceptor.ts:18",{"_index":118,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{}}}],["interceptor.ts:19",{"_index":115,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{}}}],["interceptor.ts:20",{"_index":99,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{}}}],["interceptor.ts:23",{"_index":256,"title":{},"body":{"interceptors/CachingInterceptor.html":{},"interceptors/MockingInterceptor.html":{}}}],["interceptor.ts:24",{"_index":104,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{}}}],["interceptor.ts:25",{"_index":258,"title":{},"body":{"interceptors/CachingInterceptor.html":{}}}],["interceptor.ts:28",{"_index":672,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["interceptor.ts:32",{"_index":670,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["interceptor.ts:42",{"_index":260,"title":{},"body":{"interceptors/CachingInterceptor.html":{}}}],["interceptors",{"_index":87,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"interceptors/CachingInterceptor.html":{},"interceptors/MockingInterceptor.html":{}}}],["interceptors/authentication",{"_index":1078,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["interceptors/caching",{"_index":1076,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["interface",{"_index":355,"title":{"interfaces/Deserializable.html":{}},"body":{"interfaces/Deserializable.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":356,"title":{},"body":{"interfaces/Deserializable.html":{}}}],["interval",{"_index":376,"title":{},"body":{"pipes/DurationSincePipe.html":{}}}],["invalid",{"_index":1443,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["isabandoned",{"_index":839,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["isasc",{"_index":2073,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{},"miscellaneous/functions.html":{}}}],["isexpired",{"_index":793,"title":{},"body":{"injectables/RequestCacheService.html":{}}}],["isorphaned",{"_index":840,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["issue",{"_index":1445,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["item",{"_index":632,"title":{},"body":{"injectables/LogService.html":{},"components/TibcoCloudSplashScreenComponent.html":{}}}],["item.id",{"_index":936,"title":{},"body":{"injectables/TcButtonsHelperService.html":{}}}],["items",{"_index":1771,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{}}}],["join",{"_index":1342,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["json",{"_index":337,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"interceptors/MockingInterceptor.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"components/TibcoCloudTableComponent.html":{}}}],["json.parse(json.stringify(this.datasource.data",{"_index":1743,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["json.parse(this.jsonsource",{"_index":1978,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["json.stringify(body",{"_index":1281,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["json.stringify(item",{"_index":633,"title":{},"body":{"injectables/LogService.html":{}}}],["json.stringify(selectedarray",{"_index":1754,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["jsonsource",{"_index":1697,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["jsurls",{"_index":1131,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["key",{"_index":496,"title":{},"body":{"classes/GeneralLandingPageConfig.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"components/TibcoCloudSettingLandingComponent.html":{}}}],["kmgtpezy'[e",{"_index":981,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["knownerrorlist",{"_index":1420,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["la",{"_index":1514,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["laapp",{"_index":1403,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["laauthorize",{"_index":1209,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["laauthorize(accesstoken",{"_index":1212,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["landing",{"_index":484,"title":{},"body":{"classes/GeneralLandingPageConfig.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"coverage.html":{}}}],["landing'},{'name",{"_index":1411,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["landing.component",{"_index":1112,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["landing.component.css",{"_index":1780,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["landing.component.html",{"_index":1781,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["landing.component.ts",{"_index":1779,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{},"coverage.html":{}}}],["landing.component.ts:17",{"_index":1800,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["landing.component.ts:18",{"_index":1803,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["landing.component.ts:19",{"_index":1805,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["landing.component.ts:20",{"_index":1807,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["landing.component.ts:22",{"_index":1802,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["landing.component.ts:23",{"_index":1806,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["landing.component.ts:24",{"_index":1799,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["landing.component.ts:25",{"_index":1795,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["landing.component.ts:34",{"_index":1796,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["landing.component.ts:43",{"_index":1798,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["landing.component.ts:58",{"_index":1797,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["landing.component.ts:69",{"_index":1804,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["landing.component.ts:94",{"_index":1801,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["landing/tibco",{"_index":1111,"title":{},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"coverage.html":{}}}],["landingpage",{"_index":485,"title":{},"body":{"classes/GeneralLandingPageConfig.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"injectables/TcGeneralLandingPageConfigService.html":{}}}],["landingpage.description",{"_index":1848,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["landingpage.key",{"_index":1847,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["landingpageconfig",{"_index":488,"title":{"classes/LandingPageConfig.html":{}},"body":{"classes/GeneralLandingPageConfig.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"coverage.html":{}}}],["landingpageconfig().deserialize",{"_index":1840,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["landingpageitemconfig",{"_index":492,"title":{"classes/LandingPageItemConfig.html":{}},"body":{"classes/GeneralLandingPageConfig.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"coverage.html":{}}}],["landingpages",{"_index":1785,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["landingpages.landingpage.filter(element",{"_index":1193,"title":{},"body":{"injectables/TcGeneralLandingPageConfigService.html":{}}}],["landingpagesconfig",{"_index":1786,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["last",{"_index":238,"title":{},"body":{"guards/AuthGuard.html":{}}}],["lastname",{"_index":40,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{}}}],["lastread",{"_index":797,"title":{},"body":{"injectables/RequestCacheService.html":{}}}],["latest",{"_index":1154,"title":{},"body":{"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{}}}],["layout",{"_index":1073,"title":{},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{}}}],["lazyinit",{"_index":150,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{}}}],["lazyupdate",{"_index":148,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{}}}],["left",{"_index":1361,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["legend",{"_index":999,"title":{},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"overview.html":{}}}],["length",{"_index":2061,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["letter",{"_index":1357,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["level",{"_index":572,"title":{},"body":{"injectables/LogService.html":{}}}],["lib.module.ts",{"_index":1025,"title":{},"body":{"modules/TcCoreLibModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lib.module.ts:165",{"_index":1028,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["lib.module.ts:175",{"_index":1031,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["lib/laconfigresolver",{"_index":455,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["libraries",{"_index":2150,"title":{},"body":{"index.html":{}}}],["library",{"_index":2145,"title":{},"body":{"index.html":{}}}],["line",{"_index":1124,"title":{},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["line.highlighted",{"_index":1747,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["line['highlighted",{"_index":1750,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["line['hovered",{"_index":1749,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["link",{"_index":1867,"title":{},"body":{"components/TibcoCloudSettingMenuEntryComponent.html":{}}}],["linked",{"_index":1442,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["links",{"_index":841,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"injectables/TcSharedStateService.html":{}}}],["list",{"_index":1567,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["live",{"_index":1252,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["liveapps",{"_index":454,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"components/TibcoCloudErrorComponent.html":{}}}],["load",{"_index":335,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["loaded",{"_index":727,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["loading",{"_index":1467,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["loadnavbarjs",{"_index":1030,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["loads",{"_index":341,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["localstorage.getitem(client_id_key",{"_index":661,"title":{},"body":{"guards/LoginPrefillResolver.html":{}}}],["localstorage.getitem(email_id_key",{"_index":662,"title":{},"body":{"guards/LoginPrefillResolver.html":{}}}],["localstorage.setitem(client_id_key",{"_index":1225,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["localstorage.setitem(email_id_key",{"_index":1224,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["location",{"_index":315,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/TcCoreCommonFunctions.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{}}}],["location._platformstrategy",{"_index":993,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["location.prepareexternalurl(str",{"_index":994,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["log",{"_index":578,"title":{},"body":{"injectables/LogService.html":{},"components/TibcoCloudErrorComponent.html":{}}}],["log(...m",{"_index":2000,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["log(msg",{"_index":598,"title":{},"body":{"injectables/LogService.html":{}}}],["logged",{"_index":138,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["loggedin",{"_index":1470,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["loggedinuserrole",{"_index":62,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{}}}],["logger",{"_index":1449,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{}}}],["logger.info('select",{"_index":1739,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["logging",{"_index":1512,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{},"index.html":{}}}],["logging.service",{"_index":1735,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["logging.service.ts",{"_index":571,"title":{},"body":{"injectables/LogService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["logging.service.ts:101",{"_index":599,"title":{},"body":{"injectables/LogService.html":{}}}],["logging.service.ts:105",{"_index":595,"title":{},"body":{"injectables/LogService.html":{}}}],["logging.service.ts:27",{"_index":608,"title":{},"body":{"injectables/LogService.html":{}}}],["logging.service.ts:28",{"_index":609,"title":{},"body":{"injectables/LogService.html":{}}}],["logging.service.ts:30",{"_index":606,"title":{},"body":{"injectables/LogService.html":{}}}],["logging.service.ts:52",{"_index":602,"title":{},"body":{"injectables/LogService.html":{}}}],["logging.service.ts:62",{"_index":592,"title":{},"body":{"injectables/LogService.html":{}}}],["logging.service.ts:76",{"_index":584,"title":{},"body":{"injectables/LogService.html":{}}}],["logging.service.ts:81",{"_index":597,"title":{},"body":{"injectables/LogService.html":{}}}],["logging.service.ts:86",{"_index":604,"title":{},"body":{"injectables/LogService.html":{}}}],["logging.service.ts:91",{"_index":588,"title":{},"body":{"injectables/LogService.html":{}}}],["logging.service.ts:96",{"_index":590,"title":{},"body":{"injectables/LogService.html":{}}}],["logic",{"_index":2009,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["login",{"_index":168,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"guards/LoginPrefillResolver.html":{},"injectables/TcLoginService.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":1405,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["login(username",{"_index":1214,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["login.component",{"_index":1040,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["login.component.css",{"_index":1464,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["login.component.html",{"_index":1465,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["login.component.ts",{"_index":1463,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{},"coverage.html":{}}}],["login.component.ts:37",{"_index":1475,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["login.component.ts:38",{"_index":1474,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["login.component.ts:40",{"_index":1483,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["login.component.ts:41",{"_index":1484,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["login.component.ts:42",{"_index":1480,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["login.component.ts:43",{"_index":1481,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["login.component.ts:44",{"_index":1478,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["login.component.ts:45",{"_index":1482,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["login.component.ts:46",{"_index":1485,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["login.component.ts:47",{"_index":1479,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["login.component.ts:48",{"_index":1472,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["login.component.ts:56",{"_index":1477,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["login.component.ts:65",{"_index":1476,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["login.service",{"_index":1487,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["login.service.ts",{"_index":1208,"title":{},"body":{"injectables/TcLoginService.html":{},"coverage.html":{}}}],["login.service.ts:30",{"_index":1211,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["login.service.ts:34",{"_index":1216,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["login.service.ts:54",{"_index":1218,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["login.service.ts:72",{"_index":1213,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["login.ts",{"_index":7,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{},"coverage.html":{}}}],["login.ts:101",{"_index":83,"title":{},"body":{"classes/AccountsInfo.html":{}}}],["login.ts:102",{"_index":84,"title":{},"body":{"classes/AccountsInfo.html":{}}}],["login.ts:11",{"_index":287,"title":{},"body":{"classes/Claim.html":{}}}],["login.ts:110",{"_index":648,"title":{},"body":{"classes/LoginPrefill.html":{}}}],["login.ts:111",{"_index":647,"title":{},"body":{"classes/LoginPrefill.html":{}}}],["login.ts:112",{"_index":649,"title":{},"body":{"classes/LoginPrefill.html":{}}}],["login.ts:12",{"_index":288,"title":{},"body":{"classes/Claim.html":{}}}],["login.ts:13",{"_index":289,"title":{},"body":{"classes/Claim.html":{}}}],["login.ts:14",{"_index":290,"title":{},"body":{"classes/Claim.html":{}}}],["login.ts:15",{"_index":292,"title":{},"body":{"classes/Claim.html":{}}}],["login.ts:16",{"_index":293,"title":{},"body":{"classes/Claim.html":{}}}],["login.ts:17",{"_index":294,"title":{},"body":{"classes/Claim.html":{}}}],["login.ts:18",{"_index":291,"title":{},"body":{"classes/Claim.html":{}}}],["login.ts:20",{"_index":295,"title":{},"body":{"classes/Claim.html":{}}}],["login.ts:26",{"_index":822,"title":{},"body":{"classes/Sandbox.html":{}}}],["login.ts:27",{"_index":823,"title":{},"body":{"classes/Sandbox.html":{}}}],["login.ts:28",{"_index":824,"title":{},"body":{"classes/Sandbox.html":{}}}],["login.ts:29",{"_index":828,"title":{},"body":{"classes/Sandbox.html":{}}}],["login.ts:3",{"_index":518,"title":{},"body":{"classes/Group.html":{}}}],["login.ts:30",{"_index":825,"title":{},"body":{"classes/Sandbox.html":{}}}],["login.ts:31",{"_index":827,"title":{},"body":{"classes/Sandbox.html":{}}}],["login.ts:32",{"_index":826,"title":{},"body":{"classes/Sandbox.html":{}}}],["login.ts:38",{"_index":829,"title":{},"body":{"classes/SandboxList.html":{}}}],["login.ts:39",{"_index":830,"title":{},"body":{"classes/SandboxList.html":{}}}],["login.ts:4",{"_index":519,"title":{},"body":{"classes/Group.html":{}}}],["login.ts:47",{"_index":21,"title":{},"body":{"classes/AccessToken.html":{}}}],["login.ts:48",{"_index":24,"title":{},"body":{"classes/AccessToken.html":{}}}],["login.ts:49",{"_index":23,"title":{},"body":{"classes/AccessToken.html":{}}}],["login.ts:5",{"_index":520,"title":{},"body":{"classes/Group.html":{}}}],["login.ts:51",{"_index":26,"title":{},"body":{"classes/AccessToken.html":{}}}],["login.ts:58",{"_index":249,"title":{},"body":{"classes/AuthInfo.html":{}}}],["login.ts:59",{"_index":244,"title":{},"body":{"classes/AuthInfo.html":{}}}],["login.ts:60",{"_index":245,"title":{},"body":{"classes/AuthInfo.html":{}}}],["login.ts:61",{"_index":248,"title":{},"body":{"classes/AuthInfo.html":{}}}],["login.ts:62",{"_index":247,"title":{},"body":{"classes/AuthInfo.html":{}}}],["login.ts:63",{"_index":246,"title":{},"body":{"classes/AuthInfo.html":{}}}],["login.ts:65",{"_index":250,"title":{},"body":{"classes/AuthInfo.html":{}}}],["login.ts:71",{"_index":903,"title":{},"body":{"classes/Subscription.html":{}}}],["login.ts:73",{"_index":905,"title":{},"body":{"classes/Subscription.html":{}}}],["login.ts:74",{"_index":904,"title":{},"body":{"classes/Subscription.html":{}}}],["login.ts:75",{"_index":907,"title":{},"body":{"classes/Subscription.html":{}}}],["login.ts:76",{"_index":906,"title":{},"body":{"classes/Subscription.html":{}}}],["login.ts:77",{"_index":908,"title":{},"body":{"classes/Subscription.html":{}}}],["login.ts:82",{"_index":773,"title":{},"body":{"classes/Owner.html":{}}}],["login.ts:83",{"_index":774,"title":{},"body":{"classes/Owner.html":{}}}],["login.ts:84",{"_index":775,"title":{},"body":{"classes/Owner.html":{}}}],["login.ts:85",{"_index":776,"title":{},"body":{"classes/Owner.html":{}}}],["login.ts:86",{"_index":777,"title":{},"body":{"classes/Owner.html":{}}}],["login.ts:93",{"_index":78,"title":{},"body":{"classes/AccountInfo.html":{}}}],["login.ts:94",{"_index":79,"title":{},"body":{"classes/AccountInfo.html":{}}}],["login.ts:95",{"_index":80,"title":{},"body":{"classes/AccountInfo.html":{}}}],["login.ts:96",{"_index":81,"title":{},"body":{"classes/AccountInfo.html":{}}}],["login.ts:97",{"_index":82,"title":{},"body":{"classes/AccountInfo.html":{}}}],["login/auth",{"_index":215,"title":{},"body":{"guards/AuthGuard.html":{}}}],["login/subscription",{"_index":1586,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["login/tibco",{"_index":1039,"title":{},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudLoginComponent.html":{},"coverage.html":{}}}],["loginerror",{"_index":1468,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["loginprefill",{"_index":72,"title":{"classes/LoginPrefill.html":{}},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"guards/LoginPrefillResolver.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{},"components/TibcoCloudLoginComponent.html":{},"coverage.html":{}}}],["loginprefill().deserialize",{"_index":663,"title":{},"body":{"guards/LoginPrefillResolver.html":{}}}],["loginprefillresolver",{"_index":650,"title":{"guards/LoginPrefillResolver.html":{}},"body":{"guards/LoginPrefillResolver.html":{},"coverage.html":{}}}],["loginv2",{"_index":1210,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["loginv2(username",{"_index":1217,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["loglevel",{"_index":601,"title":{},"body":{"injectables/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["loglevel.all",{"_index":607,"title":{},"body":{"injectables/LogService.html":{}}}],["loglevel.debug",{"_index":635,"title":{},"body":{"injectables/LogService.html":{}}}],["loglevel.error",{"_index":638,"title":{},"body":{"injectables/LogService.html":{}}}],["loglevel.fatal",{"_index":639,"title":{},"body":{"injectables/LogService.html":{}}}],["loglevel.info",{"_index":636,"title":{},"body":{"injectables/LogService.html":{}}}],["loglevel.off",{"_index":622,"title":{},"body":{"injectables/LogService.html":{}}}],["loglevel.warn",{"_index":637,"title":{},"body":{"injectables/LogService.html":{}}}],["loglevel[this.level",{"_index":614,"title":{},"body":{"injectables/LogService.html":{}}}],["logservice",{"_index":568,"title":{"injectables/LogService.html":{}},"body":{"injectables/LogService.html":{},"components/TibcoCloudSelectTableComponent.html":{},"coverage.html":{}}}],["logwithdate",{"_index":573,"title":{},"body":{"injectables/LogService.html":{}}}],["m",{"_index":1987,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["made",{"_index":237,"title":{},"body":{"guards/AuthGuard.html":{}}}],["make",{"_index":278,"title":{},"body":{"interceptors/CachingInterceptor.html":{},"interceptors/MockingInterceptor.html":{}}}],["manage",{"_index":1846,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["manipulating",{"_index":2011,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["map",{"_index":324,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"interceptors/MockingInterceptor.html":{},"injectables/RequestCacheService.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudLoginComponent.html":{},"classes/TibcoCloudTableDataSource.html":{}}}],["map(0",{"_index":147,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{}}}],["map(authinfo",{"_index":1502,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["map(config",{"_index":351,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{}}}],["map(landingpages",{"_index":1192,"title":{},"body":{"injectables/TcGeneralLandingPageConfigService.html":{}}}],["map(result",{"_index":1284,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["map(sharedstatelist",{"_index":1294,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["map(uiappid",{"_index":345,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["map(updatedsharedstatelist",{"_index":1287,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["map(value",{"_index":1152,"title":{},"body":{"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{}}}],["margin",{"_index":1386,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["mat",{"_index":1761,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["mat_dialog_data",{"_index":1674,"title":{},"body":{"components/TibcoCloudNewElementComponent.html":{}}}],["matbuttonmodule",{"_index":1047,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["matbuttontogglemodule",{"_index":1048,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["matcardmodule",{"_index":1049,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["match",{"_index":533,"title":{},"body":{"pipes/HighlightPipe.html":{}}}],["matcheckboxmodule",{"_index":1050,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["matching",{"_index":76,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/CachingInterceptor.html":{},"classes/Claim.html":{},"classes/ConfigurationMenuConfig.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"classes/ConfigurationMenuEntry.html":{},"interfaces/Deserializable.html":{},"pipes/DurationSincePipe.html":{},"pipes/EllipsisPipe.html":{},"classes/GeneralConfig.html":{},"guards/GeneralConfigResolver.html":{},"classes/GeneralLandingPageConfig.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/Group.html":{},"pipes/HighlightPipe.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"injectables/LogService.html":{},"classes/LoginPrefill.html":{},"guards/LoginPrefillResolver.html":{},"interceptors/MockingInterceptor.html":{},"directives/OnCreateDirective.html":{},"pipes/OrderByDatePipe.html":{},"classes/Owner.html":{},"injectables/RequestCacheService.html":{},"pipes/ReversePipe.html":{},"classes/RoleAttribute.html":{},"classes/RouteAction.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"classes/Subscription.html":{},"injectables/TcButtonsHelperService.html":{},"classes/TcCoreCommonFunctions.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"classes/ToolbarButton.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":1794,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["matdialogmodule",{"_index":1051,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["matdialogref",{"_index":1666,"title":{},"body":{"components/TibcoCloudNewElementComponent.html":{}}}],["matexpansionmodule",{"_index":1052,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["matformfieldmodule",{"_index":1053,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["math.floor((+new",{"_index":372,"title":{},"body":{"pipes/DurationSincePipe.html":{}}}],["math.floor(seconds",{"_index":377,"title":{},"body":{"pipes/DurationSincePipe.html":{}}}],["math.log(1e3",{"_index":978,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["math.log(size",{"_index":977,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["math.max.apply(math",{"_index":1201,"title":{},"body":{"injectables/TcGeneralLandingPageConfigService.html":{}}}],["math.pow(1e3",{"_index":979,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["math.random().tostring(36).substr(2",{"_index":1726,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["maticonmodule",{"_index":1054,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["maticonregistry",{"_index":1055,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["matinputmodule",{"_index":1056,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["matlistmodule",{"_index":1057,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["matmenumodule",{"_index":1058,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["matoptionmodule",{"_index":1059,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["matpaginator",{"_index":1729,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{}}}],["matpaginatormodule",{"_index":1060,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["matselectmodule",{"_index":1061,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["matsnackbar",{"_index":1793,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["matsort",{"_index":1732,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{}}}],["matsortmodule",{"_index":1062,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["mattablemodule",{"_index":1063,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["mattabsmodule",{"_index":1064,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["mattoolbarmodule",{"_index":1065,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["mattooltipmodule",{"_index":1066,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["max",{"_index":786,"title":{},"body":{"injectables/RequestCacheService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{}}}],["maxage",{"_index":787,"title":{},"body":{"injectables/RequestCacheService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maxheight",{"_index":1834,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["maxwidth",{"_index":1832,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["member",{"_index":1428,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["menu",{"_index":298,"title":{},"body":{"classes/ConfigurationMenuConfig.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"classes/ConfigurationMenuEntry.html":{},"modules/TcCoreLibModule.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"coverage.html":{}}}],["merge",{"_index":2049,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["merge(...datamutations).pipe(map",{"_index":2064,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["mergemap",{"_index":438,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"components/TibcoCloudLoginComponent.html":{}}}],["message",{"_index":151,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"injectables/LogService.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{}}}],["metadata",{"_index":363,"title":{},"body":{"pipes/DurationSincePipe.html":{},"pipes/EllipsisPipe.html":{},"pipes/HighlightPipe.html":{},"directives/OnCreateDirective.html":{},"pipes/OrderByDatePipe.html":{},"pipes/ReversePipe.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["methods",{"_index":15,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountsInfo.html":{},"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/CachingInterceptor.html":{},"classes/Claim.html":{},"classes/ConfigurationMenuConfig.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"interfaces/Deserializable.html":{},"pipes/DurationSincePipe.html":{},"pipes/EllipsisPipe.html":{},"classes/GeneralConfig.html":{},"guards/GeneralConfigResolver.html":{},"classes/GeneralLandingPageConfig.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"pipes/HighlightPipe.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"injectables/LogService.html":{},"classes/LoginPrefill.html":{},"guards/LoginPrefillResolver.html":{},"interceptors/MockingInterceptor.html":{},"directives/OnCreateDirective.html":{},"pipes/OrderByDatePipe.html":{},"classes/Owner.html":{},"injectables/RequestCacheService.html":{},"pipes/ReversePipe.html":{},"classes/RoleAttribute.html":{},"classes/SandboxList.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"classes/TcCoreCommonFunctions.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"classes/ToolbarButton.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{}}}],["min",{"_index":1375,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["mins",{"_index":226,"title":{},"body":{"guards/AuthGuard.html":{}}}],["minute",{"_index":396,"title":{},"body":{"pipes/DurationSincePipe.html":{}}}],["minutes",{"_index":394,"title":{},"body":{"pipes/DurationSincePipe.html":{}}}],["miscellaneous",{"_index":2140,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":683,"title":{},"body":{"interceptors/MockingInterceptor.html":{},"modules/TcCoreLibModule.html":{},"index.html":{}}}],["mock_base_path",{"_index":668,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["mocked",{"_index":731,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["mockedresponse",{"_index":729,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["mockinginterceptor",{"_index":666,"title":{"interceptors/MockingInterceptor.html":{}},"body":{"interceptors/MockingInterceptor.html":{},"modules/TcCoreLibModule.html":{},"coverage.html":{}}}],["modal",{"_index":1939,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["models/tc",{"_index":321,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"guards/LoginPrefillResolver.html":{},"injectables/TcButtonsHelperService.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["modifiedbyid",{"_index":842,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["modifiedbyname",{"_index":843,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["modifieddate",{"_index":844,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["module",{"_index":995,"title":{"modules/TcCoreLibModule.html":{}},"body":{"modules/TcCoreLibModule.html":{},"overview.html":{}}}],["modules",{"_index":997,"title":{"modules.html":{}},"body":{"modules/TcCoreLibModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":1029,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["month",{"_index":384,"title":{},"body":{"pipes/DurationSincePipe.html":{}}}],["months",{"_index":382,"title":{},"body":{"pipes/DurationSincePipe.html":{}}}],["msg",{"_index":585,"title":{},"body":{"injectables/LogService.html":{}}}],["multi",{"_index":538,"title":{},"body":{"pipes/HighlightPipe.html":{},"interceptors/MockingInterceptor.html":{},"modules/TcCoreLibModule.html":{}}}],["multi_match",{"_index":537,"title":{},"body":{"pipes/HighlightPipe.html":{}}}],["multiple",{"_index":1036,"title":{},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"coverage.html":{},"index.html":{}}}],["mycolumns",{"_index":1983,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["mycolumns[m",{"_index":1992,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["mycolumns[m].cell",{"_index":1995,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["mycolumns[m]['columndef",{"_index":1993,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["mycolumns[m]['header",{"_index":1994,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["mydata",{"_index":1742,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["name",{"_index":28,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/CachingInterceptor.html":{},"classes/Claim.html":{},"classes/ConfigurationMenuConfig.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"interfaces/Deserializable.html":{},"pipes/DurationSincePipe.html":{},"pipes/EllipsisPipe.html":{},"classes/GeneralConfig.html":{},"guards/GeneralConfigResolver.html":{},"classes/GeneralLandingPageConfig.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/Group.html":{},"pipes/HighlightPipe.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"injectables/LogService.html":{},"classes/LoginPrefill.html":{},"interceptors/MockingInterceptor.html":{},"pipes/OrderByDatePipe.html":{},"classes/Owner.html":{},"injectables/RequestCacheService.html":{},"pipes/ReversePipe.html":{},"classes/RoleAttribute.html":{},"classes/RouteAction.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"classes/Subscription.html":{},"classes/TcCoreCommonFunctions.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"classes/ToolbarButton.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{},"miscellaneous/functions.html":{}}}],["navbar",{"_index":1613,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["navbar'},{'name",{"_index":1408,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["navbar.component",{"_index":1035,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["navbar.component.css",{"_index":1614,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["navbar.component.html",{"_index":1615,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["navbar.component.ts",{"_index":1612,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["navbar.component.ts:13",{"_index":1627,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["navbar.component.ts:14",{"_index":1621,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["navbar.component.ts:15",{"_index":1622,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["navbar.component.ts:17",{"_index":1620,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["navbar.component.ts:22",{"_index":1623,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["navbar.customizepanel('help",{"_index":1652,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["navbar.load",{"_index":1651,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["navbar.subscribeevent('click_icon_menu_notifications",{"_index":1653,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["navbar/tibco",{"_index":1034,"title":{},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudNavbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["navbarref",{"_index":1616,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["need",{"_index":447,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"components/TibcoCloudLoginComponent.html":{}}}],["new",{"_index":346,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"pipes/DurationSincePipe.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"pipes/HighlightPipe.html":{},"injectables/LogService.html":{},"guards/LoginPrefillResolver.html":{},"interceptors/MockingInterceptor.html":{},"directives/OnCreateDirective.html":{},"pipes/OrderByDatePipe.html":{},"injectables/RequestCacheService.html":{},"injectables/TcButtonsHelperService.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"coverage.html":{}}}],["newappconfig",{"_index":469,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["newappconfig.id",{"_index":470,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["newappconfig.uiappid",{"_index":472,"title":{},"body":{"guards/GeneralConfigResolver.html":{}}}],["newarr",{"_index":990,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["newbutton",{"_index":929,"title":{},"body":{"injectables/TcButtonsHelperService.html":{}}}],["newelement",{"_index":1839,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["newstr",{"_index":989,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["next",{"_index":102,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"interceptors/CachingInterceptor.html":{},"interceptors/MockingInterceptor.html":{}}}],["next.handle(req",{"_index":282,"title":{},"body":{"interceptors/CachingInterceptor.html":{},"interceptors/MockingInterceptor.html":{}}}],["next.handle(req).pipe",{"_index":134,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"interceptors/MockingInterceptor.html":{}}}],["ng",{"_index":1557,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["ngmodule",{"_index":1032,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["ngonchanges",{"_index":1695,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["ngonchanges(changes",{"_index":1710,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["ngoninit",{"_index":748,"title":{},"body":{"directives/OnCreateDirective.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["no_access",{"_index":1432,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["no_role",{"_index":1426,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["non",{"_index":1636,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["none",{"_index":1778,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["normal",{"_index":1554,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["normalizednames",{"_index":146,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{}}}],["note",{"_index":445,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"injectables/TcLoginService.html":{},"index.html":{}}}],["notifications",{"_index":1649,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["notify",{"_index":1582,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["now",{"_index":397,"title":{},"body":{"pipes/DurationSincePipe.html":{}}}],["null",{"_index":149,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["number",{"_index":22,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"pipes/DurationSincePipe.html":{},"pipes/EllipsisPipe.html":{},"guards/GeneralConfigResolver.html":{},"classes/GeneralLandingPageConfig.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/Group.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"classes/LoginPrefill.html":{},"directives/OnCreateDirective.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"classes/Subscription.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{},"miscellaneous/variables.html":{}}}],["number(date.now",{"_index":234,"title":{},"body":{"guards/AuthGuard.html":{}}}],["number(tcstimestamp",{"_index":233,"title":{},"body":{"guards/AuthGuard.html":{}}}],["number(this.claims.primaryproductionsandbox.id).valueof",{"_index":1891,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["o",{"_index":1203,"title":{},"body":{"injectables/TcGeneralLandingPageConfigService.html":{}}}],["o.priority",{"_index":1204,"title":{},"body":{"injectables/TcGeneralLandingPageConfigService.html":{}}}],["o1",{"_index":1844,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["o2",{"_index":1845,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["oauth",{"_index":1227,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["objarray",{"_index":988,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["object",{"_index":625,"title":{},"body":{"injectables/LogService.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"miscellaneous/variables.html":{}}}],["object.assign(req",{"_index":721,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["object.assign(this",{"_index":46,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/ConfigurationMenuConfig.html":{},"classes/ConfigurationMenuEntry.html":{},"classes/GeneralConfig.html":{},"classes/GeneralLandingPageConfig.html":{},"classes/Group.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/RoleAttribute.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"classes/Subscription.html":{},"classes/ToolbarButton.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{}}}],["object.assign(this.accountinfos",{"_index":71,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{}}}],["object.assign(this.sandboxes",{"_index":52,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{}}}],["object.assign(this.sharedstateentries",{"_index":881,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["observable",{"_index":107,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"interceptors/CachingInterceptor.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"interceptors/MockingInterceptor.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudLoginComponent.html":{},"classes/TibcoCloudTableDataSource.html":{}}}],["observableinput",{"_index":1486,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["observableof",{"_index":2048,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["observableof(this.data",{"_index":2057,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["of(cachedresponse",{"_index":280,"title":{},"body":{"interceptors/CachingInterceptor.html":{}}}],["of(err",{"_index":201,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{}}}],["of(generalconfig",{"_index":482,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["ok",{"_index":157,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["onchanges",{"_index":1964,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["oncreate",{"_index":759,"title":{},"body":{"directives/OnCreateDirective.html":{},"components/TibcoCloudNewElementComponent.html":{}}}],["oncreatedirective",{"_index":741,"title":{"directives/OnCreateDirective.html":{}},"body":{"directives/OnCreateDirective.html":{},"modules/TcCoreLibModule.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["one",{"_index":624,"title":{},"body":{"injectables/LogService.html":{},"classes/TibcoCloudTableDataSource.html":{}}}],["onerrorresumenext",{"_index":675,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["oninit",{"_index":745,"title":{},"body":{"directives/OnCreateDirective.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["open",{"_index":2031,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["option",{"_index":526,"title":{},"body":{"pipes/HighlightPipe.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{}}}],["option:hover",{"_index":1863,"title":{},"body":{"components/TibcoCloudSettingMenuEntryComponent.html":{}}}],["optional",{"_index":29,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountsInfo.html":{},"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/CachingInterceptor.html":{},"classes/Claim.html":{},"classes/ConfigurationMenuConfig.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"interfaces/Deserializable.html":{},"pipes/DurationSincePipe.html":{},"pipes/EllipsisPipe.html":{},"classes/GeneralConfig.html":{},"guards/GeneralConfigResolver.html":{},"classes/GeneralLandingPageConfig.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/Group.html":{},"pipes/HighlightPipe.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"injectables/LogService.html":{},"classes/LoginPrefill.html":{},"interceptors/MockingInterceptor.html":{},"pipes/OrderByDatePipe.html":{},"classes/Owner.html":{},"injectables/RequestCacheService.html":{},"pipes/ReversePipe.html":{},"classes/RoleAttribute.html":{},"classes/RouteAction.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"classes/Subscription.html":{},"classes/TcCoreCommonFunctions.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"classes/ToolbarButton.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{},"miscellaneous/functions.html":{}}}],["optionalparams",{"_index":583,"title":{},"body":{"injectables/LogService.html":{}}}],["options",{"_index":304,"title":{},"body":{"classes/ConfigurationMenuConfig.html":{},"classes/ConfigurationMenuEntry.html":{},"interceptors/MockingInterceptor.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{}}}],["orderbydate",{"_index":765,"title":{},"body":{"pipes/OrderByDatePipe.html":{}}}],["orderbydatepipe",{"_index":762,"title":{"pipes/OrderByDatePipe.html":{}},"body":{"pipes/OrderByDatePipe.html":{},"modules/TcCoreLibModule.html":{},"coverage.html":{},"overview.html":{}}}],["orgname",{"_index":56,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{}}}],["original",{"_index":680,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["originalreq",{"_index":681,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["originalreq.url.split('?')[0",{"_index":695,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["out",{"_index":139,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"modules/TcCoreLibModule.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"overview.html":{}}}],["outer",{"_index":1393,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudNewElementComponent.html":{}}}],["output",{"_index":757,"title":{},"body":{"directives/OnCreateDirective.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["outputs",{"_index":751,"title":{},"body":{"directives/OnCreateDirective.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["oval",{"_index":1945,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["overflow",{"_index":1391,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["overview",{"_index":1920,"title":{"overview.html":{}},"body":{"components/TibcoCloudSplashScreenComponent.html":{},"overview.html":{}}}],["owner",{"_index":64,"title":{"classes/Owner.html":{}},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"coverage.html":{}}}],["ownerid",{"_index":49,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{}}}],["ownerinfo",{"_index":67,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{}}}],["ownername",{"_index":61,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{}}}],["p",{"_index":629,"title":{},"body":{"injectables/LogService.html":{}}}],["package",{"_index":2137,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":1388,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["padding:5px",{"_index":1769,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["page",{"_index":239,"title":{},"body":{"guards/AuthGuard.html":{},"classes/GeneralLandingPageConfig.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"coverage.html":{}}}],["pages",{"_index":1820,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["pages.foreach(element",{"_index":1826,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["pages.indexof(element",{"_index":1828,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["pages.splice(index",{"_index":1829,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["paginate",{"_index":2038,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["pagination",{"_index":2014,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["paginator",{"_index":1691,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{}}}],["paginator's",{"_index":2060,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["pane",{"_index":1390,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{}}}],["panel",{"_index":1354,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["panelclass",{"_index":1836,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["panelopenstate",{"_index":1873,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["parameters",{"_index":27,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountsInfo.html":{},"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/CachingInterceptor.html":{},"classes/Claim.html":{},"classes/ConfigurationMenuConfig.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"interfaces/Deserializable.html":{},"pipes/DurationSincePipe.html":{},"pipes/EllipsisPipe.html":{},"classes/GeneralConfig.html":{},"guards/GeneralConfigResolver.html":{},"classes/GeneralLandingPageConfig.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/Group.html":{},"pipes/HighlightPipe.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"injectables/LogService.html":{},"classes/LoginPrefill.html":{},"interceptors/MockingInterceptor.html":{},"pipes/OrderByDatePipe.html":{},"classes/Owner.html":{},"injectables/RequestCacheService.html":{},"pipes/ReversePipe.html":{},"classes/RoleAttribute.html":{},"classes/RouteAction.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"classes/Subscription.html":{},"classes/TcCoreCommonFunctions.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"classes/ToolbarButton.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":593,"title":{},"body":{"injectables/LogService.html":{},"components/TibcoCloudErrorComponent.html":{}}}],["params.join",{"_index":623,"title":{},"body":{"injectables/LogService.html":{}}}],["params.length",{"_index":616,"title":{},"body":{"injectables/LogService.html":{}}}],["params.some(p",{"_index":627,"title":{},"body":{"injectables/LogService.html":{}}}],["params['errorcode",{"_index":1456,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["params['errormessage",{"_index":1462,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["parent",{"_index":1583,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["parsedjsonsource",{"_index":1977,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["parsedjsonsource.length",{"_index":1984,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["parsedjsonsource[0",{"_index":1986,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["parsedjsonsource[0].hasownproperty(headername",{"_index":1989,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["part",{"_index":717,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["parts",{"_index":703,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["pass",{"_index":274,"title":{},"body":{"interceptors/CachingInterceptor.html":{},"components/TibcoCloudLoginComponent.html":{}}}],["passed",{"_index":1566,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["password",{"_index":1215,"title":{},"body":{"injectables/TcLoginService.html":{},"components/TibcoCloudLoginComponent.html":{}}}],["path",{"_index":699,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["path.svg",{"_index":2095,"title":{},"body":{"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["pathparts",{"_index":688,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["pathparts[1",{"_index":690,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["peer",{"_index":2138,"title":{},"body":{"dependencies.html":{}}}],["pipe",{"_index":283,"title":{"pipes/DurationSincePipe.html":{},"pipes/EllipsisPipe.html":{},"pipes/HighlightPipe.html":{},"pipes/OrderByDatePipe.html":{},"pipes/ReversePipe.html":{}},"body":{"interceptors/CachingInterceptor.html":{},"pipes/DurationSincePipe.html":{},"pipes/EllipsisPipe.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"pipes/HighlightPipe.html":{},"pipes/OrderByDatePipe.html":{},"pipes/ReversePipe.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"coverage.html":{}}}],["pipes",{"_index":360,"title":{},"body":{"pipes/DurationSincePipe.html":{},"pipes/EllipsisPipe.html":{},"pipes/HighlightPipe.html":{},"pipes/OrderByDatePipe.html":{},"pipes/ReversePipe.html":{},"overview.html":{}}}],["pipes/duration",{"_index":1080,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["pipes/ellipsis.pipe",{"_index":1079,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["pipes/highlight.pipe",{"_index":1082,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["pipes/order",{"_index":1083,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["pipes/reverse.pipe",{"_index":1085,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["pipetransform",{"_index":370,"title":{},"body":{"pipes/DurationSincePipe.html":{},"pipes/EllipsisPipe.html":{},"pipes/HighlightPipe.html":{},"pipes/OrderByDatePipe.html":{},"pipes/ReversePipe.html":{}}}],["please",{"_index":1430,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["pointer",{"_index":1606,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["portal",{"_index":1436,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["position",{"_index":1949,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["post",{"_index":547,"title":{},"body":{"pipes/HighlightPipe.html":{}}}],["prefill.resolver",{"_index":1221,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["prefill.resolver.ts",{"_index":652,"title":{},"body":{"guards/LoginPrefillResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prefill.resolver.ts:21",{"_index":656,"title":{},"body":{"guards/LoginPrefillResolver.html":{}}}],["prefill.resolver.ts:9",{"_index":655,"title":{},"body":{"guards/LoginPrefillResolver.html":{}}}],["prepareurlfornonstaticresource",{"_index":950,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["prepareurlforstaticresource",{"_index":951,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["present",{"_index":704,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["primaryproductionsandbox",{"_index":45,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{}}}],["priority",{"_index":502,"title":{},"body":{"classes/GeneralLandingPageConfig.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{}}}],["private",{"_index":91,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"injectables/LogService.html":{},"guards/LoginPrefillResolver.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{}}}],["pro",{"_index":1552,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["probold",{"_index":1928,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["processdiscovery1",{"_index":1816,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["propertie",{"_index":1644,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["properties",{"_index":11,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/ConfigurationMenuConfig.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"classes/ConfigurationMenuEntry.html":{},"classes/GeneralConfig.html":{},"guards/GeneralConfigResolver.html":{},"classes/GeneralLandingPageConfig.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/Group.html":{},"pipes/HighlightPipe.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"injectables/LogService.html":{},"classes/LoginPrefill.html":{},"guards/LoginPrefillResolver.html":{},"interceptors/MockingInterceptor.html":{},"classes/Owner.html":{},"injectables/RequestCacheService.html":{},"classes/RoleAttribute.html":{},"classes/RouteAction.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"classes/Subscription.html":{},"injectables/TcButtonsHelperService.html":{},"classes/TcCoreCommonFunctions.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{},"classes/ToolbarButton.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{}}}],["property",{"_index":2076,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["protected",{"_index":218,"title":{},"body":{"guards/AuthGuard.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["provide",{"_index":1126,"title":{},"body":{"modules/TcCoreLibModule.html":{},"injectables/TcLoginService.html":{}}}],["providedin",{"_index":789,"title":{},"body":{"injectables/RequestCacheService.html":{},"injectables/TcButtonsHelperService.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{}}}],["providers",{"_index":1002,"title":{},"body":{"modules/TcCoreLibModule.html":{},"overview.html":{}}}],["providing",{"_index":1575,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["public",{"_index":36,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/GeneralConfig.html":{},"guards/GeneralConfigResolver.html":{},"classes/GeneralLandingPageConfig.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/Group.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"classes/LoginPrefill.html":{},"interceptors/MockingInterceptor.html":{},"classes/Owner.html":{},"classes/RoleAttribute.html":{},"classes/RouteAction.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{},"injectables/TcButtonsHelperService.html":{},"classes/TcCoreCommonFunctions.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["pure",{"_index":807,"title":{},"body":{"pipes/ReversePipe.html":{}}}],["put",{"_index":780,"title":{},"body":{"injectables/RequestCacheService.html":{}}}],["put(req",{"_index":783,"title":{},"body":{"injectables/RequestCacheService.html":{}}}],["queryparams",{"_index":199,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{}}}],["radius",{"_index":1377,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["re",{"_index":640,"title":{},"body":{"injectables/LogService.html":{},"classes/TcCoreCommonFunctions.html":{}}}],["reactiveformsmodule",{"_index":1069,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["read",{"_index":475,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["readmockjson",{"_index":669,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["readmockjson(url",{"_index":671,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["ready",{"_index":1617,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["real",{"_index":737,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["reauthurl",{"_index":191,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{}}}],["record",{"_index":449,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["redirect",{"_index":172,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{}}}],["refresh",{"_index":143,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{}}}],["regex",{"_index":553,"title":{},"body":{"pipes/HighlightPipe.html":{}}}],["regexp",{"_index":559,"title":{},"body":{"pipes/HighlightPipe.html":{}}}],["regexp(highlighttext",{"_index":557,"title":{},"body":{"pipes/HighlightPipe.html":{}}}],["regions",{"_index":63,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["regular.ttf",{"_index":1927,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["remove",{"_index":715,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["removebuttons",{"_index":914,"title":{},"body":{"injectables/TcButtonsHelperService.html":{}}}],["removed",{"_index":1723,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["rendered",{"_index":2025,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["reordered",{"_index":1724,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["repeat",{"_index":1950,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["replace",{"_index":987,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["replace(/([a",{"_index":985,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["replaced",{"_index":2042,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["req",{"_index":105,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"interceptors/CachingInterceptor.html":{},"interceptors/MockingInterceptor.html":{},"injectables/RequestCacheService.html":{}}}],["req.clone",{"_index":682,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["req.headers.get('cacheresponse",{"_index":264,"title":{},"body":{"interceptors/CachingInterceptor.html":{}}}],["req.headers.get('flushcache",{"_index":271,"title":{},"body":{"interceptors/CachingInterceptor.html":{}}}],["req.url",{"_index":796,"title":{},"body":{"injectables/RequestCacheService.html":{}}}],["req.url.split",{"_index":687,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["req.urlwithparams",{"_index":791,"title":{},"body":{"injectables/RequestCacheService.html":{}}}],["req.urlwithparams.substr(0",{"_index":265,"title":{},"body":{"interceptors/CachingInterceptor.html":{}}}],["request",{"_index":279,"title":{},"body":{"interceptors/CachingInterceptor.html":{},"interceptors/MockingInterceptor.html":{}}}],["requestcacheservice",{"_index":255,"title":{"injectables/RequestCacheService.html":{}},"body":{"interceptors/CachingInterceptor.html":{},"injectables/RequestCacheService.html":{},"modules/TcCoreLibModule.html":{},"coverage.html":{},"overview.html":{}}}],["requesting",{"_index":2043,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["required",{"_index":1291,"title":{},"body":{"injectables/TcSharedStateService.html":{},"index.html":{}}}],["reset",{"_index":1023,"title":{},"body":{"modules/TcCoreLibModule.html":{},"overview.html":{}}}],["resolve",{"_index":312,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"guards/LoginPrefillResolver.html":{}}}],["resolve(routesnapshot",{"_index":317,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{}}}],["resolvers/login",{"_index":1220,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["resource",{"_index":694,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["resource.split",{"_index":697,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["resources",{"_index":217,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/MockingInterceptor.html":{},"classes/TibcoCloudTableDataSource.html":{}}}],["resourcetype",{"_index":1837,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["response",{"_index":154,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"interceptors/CachingInterceptor.html":{},"interceptors/MockingInterceptor.html":{},"injectables/RequestCacheService.html":{}}}],["responsetype",{"_index":705,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["restriction",{"_index":549,"title":{},"body":{"pipes/HighlightPipe.html":{}}}],["result",{"_index":75,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/CachingInterceptor.html":{},"classes/Claim.html":{},"classes/ConfigurationMenuConfig.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"classes/ConfigurationMenuEntry.html":{},"interfaces/Deserializable.html":{},"pipes/DurationSincePipe.html":{},"pipes/EllipsisPipe.html":{},"classes/GeneralConfig.html":{},"guards/GeneralConfigResolver.html":{},"classes/GeneralLandingPageConfig.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/Group.html":{},"pipes/HighlightPipe.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"injectables/LogService.html":{},"classes/LoginPrefill.html":{},"guards/LoginPrefillResolver.html":{},"interceptors/MockingInterceptor.html":{},"directives/OnCreateDirective.html":{},"pipes/OrderByDatePipe.html":{},"classes/Owner.html":{},"injectables/RequestCacheService.html":{},"pipes/ReversePipe.html":{},"classes/RoleAttribute.html":{},"classes/RouteAction.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"classes/Subscription.html":{},"injectables/TcButtonsHelperService.html":{},"classes/TcCoreCommonFunctions.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"classes/ToolbarButton.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result).pipe",{"_index":473,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["result.id",{"_index":1841,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["result.name",{"_index":1842,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["result.tostring",{"_index":1285,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["results",{"_index":77,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/CachingInterceptor.html":{},"classes/Claim.html":{},"classes/ConfigurationMenuConfig.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"classes/ConfigurationMenuEntry.html":{},"interfaces/Deserializable.html":{},"pipes/DurationSincePipe.html":{},"pipes/EllipsisPipe.html":{},"classes/GeneralConfig.html":{},"guards/GeneralConfigResolver.html":{},"classes/GeneralLandingPageConfig.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/Group.html":{},"pipes/HighlightPipe.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"injectables/LogService.html":{},"classes/LoginPrefill.html":{},"guards/LoginPrefillResolver.html":{},"interceptors/MockingInterceptor.html":{},"directives/OnCreateDirective.html":{},"pipes/OrderByDatePipe.html":{},"classes/Owner.html":{},"injectables/RequestCacheService.html":{},"pipes/ReversePipe.html":{},"classes/RoleAttribute.html":{},"classes/RouteAction.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"classes/Subscription.html":{},"injectables/TcButtonsHelperService.html":{},"classes/TcCoreCommonFunctions.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"classes/ToolbarButton.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["resumeurl",{"_index":193,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{}}}],["ret",{"_index":620,"title":{},"body":{"injectables/LogService.html":{}}}],["return",{"_index":47,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/CachingInterceptor.html":{},"classes/Claim.html":{},"classes/ConfigurationMenuConfig.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"classes/ConfigurationMenuEntry.html":{},"pipes/DurationSincePipe.html":{},"pipes/EllipsisPipe.html":{},"classes/GeneralConfig.html":{},"guards/GeneralConfigResolver.html":{},"classes/GeneralLandingPageConfig.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/Group.html":{},"pipes/HighlightPipe.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"injectables/LogService.html":{},"classes/LoginPrefill.html":{},"guards/LoginPrefillResolver.html":{},"interceptors/MockingInterceptor.html":{},"pipes/OrderByDatePipe.html":{},"classes/Owner.html":{},"injectables/RequestCacheService.html":{},"pipes/ReversePipe.html":{},"classes/RoleAttribute.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"classes/Subscription.html":{},"injectables/TcButtonsHelperService.html":{},"classes/TcCoreCommonFunctions.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{},"classes/ToolbarButton.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{}}}],["returned",{"_index":1585,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{},"classes/TibcoCloudTableDataSource.html":{}}}],["returns",{"_index":106,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"interceptors/CachingInterceptor.html":{},"classes/ConfigurationMenuConfig.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"pipes/DurationSincePipe.html":{},"pipes/EllipsisPipe.html":{},"classes/GeneralConfig.html":{},"guards/GeneralConfigResolver.html":{},"classes/GeneralLandingPageConfig.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"pipes/HighlightPipe.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"injectables/LogService.html":{},"guards/LoginPrefillResolver.html":{},"interceptors/MockingInterceptor.html":{},"directives/OnCreateDirective.html":{},"pipes/OrderByDatePipe.html":{},"injectables/RequestCacheService.html":{},"pipes/ReversePipe.html":{},"classes/RoleAttribute.html":{},"classes/SharedStateContent.html":{},"classes/TcCoreCommonFunctions.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"classes/ToolbarButton.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{}}}],["returnurl",{"_index":242,"title":{},"body":{"guards/AuthGuard.html":{}}}],["reverse",{"_index":805,"title":{},"body":{"pipes/ReversePipe.html":{}}}],["reversepipe",{"_index":803,"title":{"pipes/ReversePipe.html":{}},"body":{"pipes/ReversePipe.html":{},"modules/TcCoreLibModule.html":{},"coverage.html":{},"overview.html":{}}}],["rgba(0",{"_index":1394,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{}}}],["rgba(0,0,0,.1",{"_index":1608,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["rgba(0,0,0,.3",{"_index":1601,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["rgba(33",{"_index":1942,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["rgba(6",{"_index":1932,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["right",{"_index":1384,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["role",{"_index":65,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["role.display",{"_index":1849,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["roleattribute",{"_index":417,"title":{"classes/RoleAttribute.html":{}},"body":{"classes/GeneralConfig.html":{},"classes/RoleAttribute.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"coverage.html":{}}}],["roles",{"_index":410,"title":{},"body":{"classes/GeneralConfig.html":{},"classes/GeneralLandingPageConfig.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"classes/RoleAttribute.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"index.html":{}}}],["roles.some(r",{"_index":1196,"title":{},"body":{"injectables/TcGeneralLandingPageConfigService.html":{}}}],["root",{"_index":790,"title":{},"body":{"injectables/RequestCacheService.html":{},"injectables/TcButtonsHelperService.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{}}}],["ropc_ipass",{"_index":1247,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["route",{"_index":169,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["routeaction",{"_index":812,"title":{"classes/RouteAction.html":{}},"body":{"classes/RouteAction.html":{},"components/TibcoCloudConfigurationComponent.html":{},"coverage.html":{}}}],["routeaction('backclicked",{"_index":1346,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["router",{"_index":98,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"components/TibcoCloudConfigurationComponent.html":{}}}],["routermodule",{"_index":1106,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["routerstatesnapshot",{"_index":131,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{}}}],["routesnapshot",{"_index":319,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{}}}],["routing",{"_index":813,"title":{},"body":{"classes/RouteAction.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"coverage.html":{}}}],["row",{"_index":1705,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["row.highlighted",{"_index":1764,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["row.hovered",{"_index":1762,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["rundeleteconfiguration",{"_index":1790,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["runnewconfiguration",{"_index":1787,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["runsavefunction",{"_index":1791,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["rxjs",{"_index":126,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"interceptors/CachingInterceptor.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"interceptors/MockingInterceptor.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudLoginComponent.html":{},"classes/TibcoCloudTableDataSource.html":{}}}],["rxjs/operators",{"_index":129,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"interceptors/CachingInterceptor.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"interceptors/MockingInterceptor.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudLoginComponent.html":{},"classes/TibcoCloudTableDataSource.html":{}}}],["safehtml",{"_index":535,"title":{},"body":{"pipes/HighlightPipe.html":{}}}],["saml?relaystate",{"_index":113,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{}}}],["sandbox",{"_index":42,"title":{"classes/Sandbox.html":{}},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{},"coverage.html":{}}}],["sandboxes",{"_index":41,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{}}}],["sandboxid",{"_index":428,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{}}}],["sandboxlist",{"_index":50,"title":{"classes/SandboxList.html":{}},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{},"coverage.html":{}}}],["sans",{"_index":1551,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["save",{"_index":679,"title":{},"body":{"interceptors/MockingInterceptor.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["saved",{"_index":1821,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["saving",{"_index":1825,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["scope",{"_index":845,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["screen",{"_index":1907,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["screen'},{'name",{"_index":1414,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["screen.component",{"_index":1109,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["screen.component.css",{"_index":1908,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["screen.component.html",{"_index":1909,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["screen.component.ts",{"_index":1906,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{},"coverage.html":{}}}],["screen.component.ts:16",{"_index":1917,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["screen.component.ts:17",{"_index":1916,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["screen.component.ts:18",{"_index":1914,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["screen.component.ts:19",{"_index":1915,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["screen.component.ts:20",{"_index":1913,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["screen.component.ts:25",{"_index":1918,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["screen.component.ts:28",{"_index":1919,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["screen/tibco",{"_index":1108,"title":{},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"coverage.html":{}}}],["scrollingmodule",{"_index":1074,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["search",{"_index":534,"title":{},"body":{"pipes/HighlightPipe.html":{},"components/TibcoCloudNavbarComponent.html":{}}}],["seconds",{"_index":371,"title":{},"body":{"pipes/DurationSincePipe.html":{}}}],["seems",{"_index":1437,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["seg",{"_index":719,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["seg2",{"_index":698,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["segments",{"_index":696,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["segments.length).foreach((seg",{"_index":718,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["segments.splice(0",{"_index":708,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["segments[0",{"_index":706,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["select",{"_index":1097,"title":{},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"coverage.html":{}}}],["selected",{"_index":1348,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{}}}],["selectedarray",{"_index":1745,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["selectedarray.push(line",{"_index":1751,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["selectedlines",{"_index":1698,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["selectedrole",{"_index":1788,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["selectedsubscriptionid",{"_index":1572,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["selectedwelcomepage",{"_index":1789,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["selector",{"_index":746,"title":{},"body":{"directives/OnCreateDirective.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["sendrequest",{"_index":253,"title":{},"body":{"interceptors/CachingInterceptor.html":{},"interceptors/MockingInterceptor.html":{}}}],["sendrequest(req",{"_index":259,"title":{},"body":{"interceptors/CachingInterceptor.html":{}}}],["sent",{"_index":739,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["separate",{"_index":1959,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["server",{"_index":2041,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["service",{"_index":1129,"title":{},"body":{"modules/TcCoreLibModule.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{}}}],["services",{"_index":2149,"title":{},"body":{"index.html":{}}}],["services/request",{"_index":261,"title":{},"body":{"interceptors/CachingInterceptor.html":{},"modules/TcCoreLibModule.html":{}}}],["services/tc",{"_index":440,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"modules/TcCoreLibModule.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["sessionstorage.getitem('tcstimestamp",{"_index":232,"title":{},"body":{"guards/AuthGuard.html":{}}}],["sessionstorage.setitem('tcstimestamp",{"_index":1241,"title":{},"body":{"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{}}}],["sessiontimestamp",{"_index":222,"title":{},"body":{"guards/AuthGuard.html":{}}}],["set",{"_index":270,"title":{},"body":{"interceptors/CachingInterceptor.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudNavbarComponent.html":{},"classes/TibcoCloudTableDataSource.html":{}}}],["set('accesstoken",{"_index":1256,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["set('accountid",{"_index":1258,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["set('client_id",{"_index":1246,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["set('clientid",{"_index":1232,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["set('content",{"_index":1233,"title":{},"body":{"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{}}}],["set('email",{"_index":1228,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["set('grant_type",{"_index":1248,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["set('password",{"_index":1229,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["set('tenantid",{"_index":1230,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["set('username",{"_index":1245,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["setsandbox",{"_index":429,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["setting",{"_index":1098,"title":{},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"coverage.html":{}}}],["settings",{"_index":1101,"title":{},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"coverage.html":{}}}],["shadow",{"_index":1369,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["shared",{"_index":441,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{},"coverage.html":{},"index.html":{}}}],["sharedstatecontent",{"_index":831,"title":{"classes/SharedStateContent.html":{}},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{},"coverage.html":{}}}],["sharedstateentries",{"_index":879,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["sharedstateentry",{"_index":835,"title":{"classes/SharedStateEntry.html":{}},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{},"coverage.html":{}}}],["sharedstatelist",{"_index":878,"title":{"classes/SharedStateList.html":{}},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{},"coverage.html":{}}}],["sharedstatelist().deserialize(sharedstatelist",{"_index":1295,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["sharedstatelist().deserialize(updatedsharedstatelist",{"_index":1288,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["sharedstateservice",{"_index":1137,"title":{},"body":{"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{}}}],["shouldlog",{"_index":579,"title":{},"body":{"injectables/LogService.html":{}}}],["shouldlog(level",{"_index":600,"title":{},"body":{"injectables/LogService.html":{}}}],["showconfig",{"_index":1320,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["showheader",{"_index":1530,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["side",{"_index":2039,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{},"miscellaneous/functions.html":{}}}],["simple",{"_index":2081,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{},"miscellaneous/functions.html":{}}}],["simplechanges",{"_index":1972,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["since.pipe",{"_index":1081,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["since.pipe.ts",{"_index":362,"title":{},"body":{"pipes/DurationSincePipe.html":{},"coverage.html":{}}}],["since.pipe.ts:10",{"_index":368,"title":{},"body":{"pipes/DurationSincePipe.html":{}}}],["single",{"_index":531,"title":{},"body":{"pipes/HighlightPipe.html":{},"interceptors/MockingInterceptor.html":{}}}],["single_and_starts_with_match",{"_index":540,"title":{},"body":{"pipes/HighlightPipe.html":{}}}],["single_match",{"_index":542,"title":{},"body":{"pipes/HighlightPipe.html":{}}}],["size",{"_index":969,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["snackbar",{"_index":1792,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["solid",{"_index":1396,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{}}}],["sort",{"_index":1692,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{},"miscellaneous/functions.html":{}}}],["sorting",{"_index":2013,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{},"miscellaneous/functions.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/CachingInterceptor.html":{},"classes/Claim.html":{},"classes/ConfigurationMenuConfig.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"classes/ConfigurationMenuEntry.html":{},"interfaces/Deserializable.html":{},"pipes/DurationSincePipe.html":{},"pipes/EllipsisPipe.html":{},"classes/GeneralConfig.html":{},"guards/GeneralConfigResolver.html":{},"classes/GeneralLandingPageConfig.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/Group.html":{},"pipes/HighlightPipe.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"injectables/LogService.html":{},"classes/LoginPrefill.html":{},"guards/LoginPrefillResolver.html":{},"interceptors/MockingInterceptor.html":{},"directives/OnCreateDirective.html":{},"pipes/OrderByDatePipe.html":{},"classes/Owner.html":{},"injectables/RequestCacheService.html":{},"pipes/ReversePipe.html":{},"classes/RoleAttribute.html":{},"classes/RouteAction.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"classes/Subscription.html":{},"injectables/TcButtonsHelperService.html":{},"classes/TcCoreCommonFunctions.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"classes/ToolbarButton.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{}}}],["spacing",{"_index":1358,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["specific",{"_index":1576,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["splash",{"_index":1107,"title":{},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"coverage.html":{}}}],["src",{"_index":1925,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["src/.../login",{"_index":2163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../request",{"_index":2164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tc",{"_index":2142,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../tibco",{"_index":2143,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/common/tc",{"_index":947,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{},"coverage.html":{}}}],["src/lib/components/tibco",{"_index":1310,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/directives/on",{"_index":743,"title":{},"body":{"directives/OnCreateDirective.html":{},"coverage.html":{}}}],["src/lib/guards/auth.guard.ts",{"_index":205,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/lib/guards/auth.guard.ts:16",{"_index":207,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/lib/guards/auth.guard.ts:21",{"_index":210,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/lib/interceptors/authentication",{"_index":88,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"coverage.html":{}}}],["src/lib/interceptors/caching",{"_index":252,"title":{},"body":{"interceptors/CachingInterceptor.html":{},"coverage.html":{}}}],["src/lib/interceptors/mocking",{"_index":667,"title":{},"body":{"interceptors/MockingInterceptor.html":{},"coverage.html":{}}}],["src/lib/models/deserializable.ts",{"_index":357,"title":{},"body":{"interfaces/Deserializable.html":{},"coverage.html":{}}}],["src/lib/models/deserializable.ts:2",{"_index":358,"title":{},"body":{"interfaces/Deserializable.html":{}}}],["src/lib/models/tc",{"_index":6,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/ConfigurationMenuConfig.html":{},"classes/ConfigurationMenuEntry.html":{},"classes/GeneralConfig.html":{},"classes/GeneralLandingPageConfig.html":{},"classes/Group.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/RoleAttribute.html":{},"classes/RouteAction.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"classes/Subscription.html":{},"classes/ToolbarButton.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{},"coverage.html":{}}}],["src/lib/pipes/duration",{"_index":361,"title":{},"body":{"pipes/DurationSincePipe.html":{},"coverage.html":{}}}],["src/lib/pipes/ellipsis.pipe.ts",{"_index":399,"title":{},"body":{"pipes/EllipsisPipe.html":{},"coverage.html":{}}}],["src/lib/pipes/ellipsis.pipe.ts:8",{"_index":401,"title":{},"body":{"pipes/EllipsisPipe.html":{}}}],["src/lib/pipes/highlight.pipe.ts",{"_index":522,"title":{},"body":{"pipes/HighlightPipe.html":{},"coverage.html":{}}}],["src/lib/pipes/highlight.pipe.ts:13",{"_index":543,"title":{},"body":{"pipes/HighlightPipe.html":{}}}],["src/lib/pipes/highlight.pipe.ts:15",{"_index":541,"title":{},"body":{"pipes/HighlightPipe.html":{}}}],["src/lib/pipes/highlight.pipe.ts:17",{"_index":539,"title":{},"body":{"pipes/HighlightPipe.html":{}}}],["src/lib/pipes/highlight.pipe.ts:19",{"_index":529,"title":{},"body":{"pipes/HighlightPipe.html":{}}}],["src/lib/pipes/order",{"_index":763,"title":{},"body":{"pipes/OrderByDatePipe.html":{},"coverage.html":{}}}],["src/lib/pipes/reverse.pipe.ts",{"_index":804,"title":{},"body":{"pipes/ReversePipe.html":{},"coverage.html":{}}}],["src/lib/pipes/reverse.pipe.ts:9",{"_index":806,"title":{},"body":{"pipes/ReversePipe.html":{}}}],["src/lib/resolvers/configuration",{"_index":306,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"coverage.html":{}}}],["src/lib/resolvers/general",{"_index":426,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"coverage.html":{}}}],["src/lib/resolvers/login",{"_index":651,"title":{},"body":{"guards/LoginPrefillResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/services/request",{"_index":778,"title":{},"body":{"injectables/RequestCacheService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/services/tc",{"_index":570,"title":{},"body":{"injectables/LogService.html":{},"injectables/TcButtonsHelperService.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/lib/tc",{"_index":1024,"title":{},"body":{"modules/TcCoreLibModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sslist",{"_index":1166,"title":{},"body":{"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{}}}],["sslist.sharedstateentries",{"_index":1167,"title":{},"body":{"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{}}}],["sslist.sharedstateentries.push(entry",{"_index":1168,"title":{},"body":{"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{}}}],["ssname",{"_index":1147,"title":{},"body":{"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{}}}],["ssresult",{"_index":1157,"title":{},"body":{"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{}}}],["ssresult.id",{"_index":1159,"title":{},"body":{"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{}}}],["start",{"_index":551,"title":{},"body":{"pipes/HighlightPipe.html":{}}}],["started",{"_index":1740,"title":{"index.html":{}},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{}}}],["starter",{"_index":613,"title":{},"body":{"injectables/LogService.html":{}}}],["starters",{"_index":1352,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{}}}],["startindex",{"_index":2066,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["startswith",{"_index":532,"title":{},"body":{"pipes/HighlightPipe.html":{}}}],["state",{"_index":209,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{},"index.html":{}}}],["state.service",{"_index":442,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{}}}],["state.service.ts",{"_index":1259,"title":{},"body":{"injectables/TcSharedStateService.html":{},"coverage.html":{}}}],["state.service.ts:104",{"_index":1274,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["state.service.ts:123",{"_index":1270,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["state.service.ts:133",{"_index":1278,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["state.service.ts:31",{"_index":1266,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["state.service.ts:36",{"_index":1268,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["state.service.ts:68",{"_index":1276,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["state.service.ts:82",{"_index":1272,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["state.ts",{"_index":832,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"coverage.html":{}}}],["state.ts:12",{"_index":882,"title":{},"body":{"classes/SharedStateEntry.html":{}}}],["state.ts:13",{"_index":883,"title":{},"body":{"classes/SharedStateEntry.html":{}}}],["state.ts:14",{"_index":884,"title":{},"body":{"classes/SharedStateEntry.html":{}}}],["state.ts:15",{"_index":885,"title":{},"body":{"classes/SharedStateEntry.html":{}}}],["state.ts:16",{"_index":886,"title":{},"body":{"classes/SharedStateEntry.html":{}}}],["state.ts:17",{"_index":887,"title":{},"body":{"classes/SharedStateEntry.html":{}}}],["state.ts:18",{"_index":888,"title":{},"body":{"classes/SharedStateEntry.html":{}}}],["state.ts:19",{"_index":889,"title":{},"body":{"classes/SharedStateEntry.html":{}}}],["state.ts:20",{"_index":890,"title":{},"body":{"classes/SharedStateEntry.html":{}}}],["state.ts:21",{"_index":891,"title":{},"body":{"classes/SharedStateEntry.html":{}}}],["state.ts:22",{"_index":892,"title":{},"body":{"classes/SharedStateEntry.html":{}}}],["state.ts:23",{"_index":893,"title":{},"body":{"classes/SharedStateEntry.html":{}}}],["state.ts:24",{"_index":894,"title":{},"body":{"classes/SharedStateEntry.html":{}}}],["state.ts:25",{"_index":895,"title":{},"body":{"classes/SharedStateEntry.html":{}}}],["state.ts:26",{"_index":896,"title":{},"body":{"classes/SharedStateEntry.html":{}}}],["state.ts:27",{"_index":897,"title":{},"body":{"classes/SharedStateEntry.html":{}}}],["state.ts:28",{"_index":898,"title":{},"body":{"classes/SharedStateEntry.html":{}}}],["state.ts:30",{"_index":899,"title":{},"body":{"classes/SharedStateEntry.html":{}}}],["state.ts:4",{"_index":833,"title":{},"body":{"classes/SharedStateContent.html":{}}}],["state.ts:5",{"_index":834,"title":{},"body":{"classes/SharedStateContent.html":{}}}],["state.ts:53",{"_index":900,"title":{},"body":{"classes/SharedStateList.html":{}}}],["state.ts:54",{"_index":901,"title":{},"body":{"classes/SharedStateList.html":{}}}],["state.url",{"_index":243,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":641,"title":{},"body":{"injectables/LogService.html":{},"coverage.html":{}}}],["static",{"_index":536,"title":{},"body":{"pipes/HighlightPipe.html":{},"classes/TcCoreCommonFunctions.html":{},"modules/TcCoreLibModule.html":{}}}],["status",{"_index":159,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{}}}],["statustext",{"_index":160,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{}}}],["str",{"_index":962,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["str.indexof",{"_index":991,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["str.replace(/([a",{"_index":982,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["str.split",{"_index":992,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["stream",{"_index":2023,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["stretch",{"_index":1556,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["string",{"_index":19,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"interceptors/AuthErrorInterceptor.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/ConfigurationMenuConfig.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"classes/ConfigurationMenuEntry.html":{},"pipes/DurationSincePipe.html":{},"classes/GeneralConfig.html":{},"guards/GeneralConfigResolver.html":{},"classes/GeneralLandingPageConfig.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/Group.html":{},"pipes/HighlightPipe.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"injectables/LogService.html":{},"classes/LoginPrefill.html":{},"guards/LoginPrefillResolver.html":{},"interceptors/MockingInterceptor.html":{},"pipes/OrderByDatePipe.html":{},"classes/Owner.html":{},"classes/RoleAttribute.html":{},"classes/RouteAction.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"classes/Subscription.html":{},"injectables/TcButtonsHelperService.html":{},"classes/TcCoreCommonFunctions.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"classes/ToolbarButton.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{},"miscellaneous/variables.html":{}}}],["stuff",{"_index":2155,"title":{},"body":{"index.html":{}}}],["style",{"_index":1555,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["styles",{"_index":1307,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["styleurls",{"_index":1312,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["sub",{"_index":1607,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["sub:hover",{"_index":1598,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["submit",{"_index":1678,"title":{},"body":{"components/TibcoCloudNewElementComponent.html":{}}}],["subscribe(authorize",{"_index":1590,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["subscriber",{"_index":1223,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["subscription",{"_index":57,"title":{"classes/Subscription.html":{}},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"coverage.html":{}}}],["subscription'},{'name",{"_index":1407,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["subscription.accountdisplayname",{"_index":1593,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["subscription.component",{"_index":1038,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["subscription.component.css",{"_index":1570,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["subscription.component.html",{"_index":1571,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["subscription.component.ts",{"_index":1563,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{},"coverage.html":{}}}],["subscription.component.ts:21",{"_index":1577,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["subscription.component.ts:25",{"_index":1579,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["subscription.component.ts:29",{"_index":1581,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["subscription.component.ts:31",{"_index":1587,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["subscription.component.ts:32",{"_index":1574,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["subscription.loggedinuserrole",{"_index":1595,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["subscription.ownername",{"_index":1594,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["subscription.regions",{"_index":1596,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["subscription/tibco",{"_index":1037,"title":{},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"coverage.html":{}}}],["subscriptionid",{"_index":43,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["subscriptions",{"_index":1565,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["subscriptionselection",{"_index":1573,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["subtitle",{"_index":498,"title":{},"body":{"classes/GeneralLandingPageConfig.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"components/TibcoCloudSplashScreenComponent.html":{}}}],["super",{"_index":1543,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{}}}],["supply",{"_index":188,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{}}}],["support",{"_index":2157,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":714,"title":{},"body":{"interceptors/MockingInterceptor.html":{},"components/TibcoCloudMenuBarComponent.html":{},"modules.html":{}}}],["switch",{"_index":555,"title":{},"body":{"pipes/HighlightPipe.html":{},"injectables/LogService.html":{}}}],["switchmap",{"_index":439,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["switchmap(uiappid",{"_index":461,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["systemjsngmoduleloader",{"_index":1629,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["table",{"_index":1685,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["table'},{'name",{"_index":1410,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["table.component",{"_index":1096,"title":{},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudSelectTableComponent.html":{}}}],["table.component.css",{"_index":1686,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["table.component.html",{"_index":1687,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["table.component.ts",{"_index":1684,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{},"coverage.html":{}}}],["table.component.ts:12",{"_index":1702,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["table.component.ts:13",{"_index":1971,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["table.component.ts:14",{"_index":1715,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["table.component.ts:16",{"_index":1707,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["table.component.ts:18",{"_index":1700,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["table.component.ts:21",{"_index":1970,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["table.component.ts:22",{"_index":1969,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["table.component.ts:24",{"_index":1967,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["table.component.ts:26",{"_index":1704,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["table.component.ts:29",{"_index":1966,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["table.component.ts:36",{"_index":1968,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["table.component.ts:75",{"_index":1965,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["table/tibco",{"_index":1095,"title":{},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2136,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":128,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"interceptors/CachingInterceptor.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{}}}],["tap(event",{"_index":284,"title":{},"body":{"interceptors/CachingInterceptor.html":{}}}],["tap(val",{"_index":1283,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["target",{"_index":550,"title":{},"body":{"pipes/HighlightPipe.html":{}}}],["tc",{"_index":453,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["tc_navbar_url",{"_index":1115,"title":{},"body":{"modules/TcCoreLibModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tcbuttonshelperservice",{"_index":909,"title":{"injectables/TcButtonsHelperService.html":{}},"body":{"injectables/TcButtonsHelperService.html":{},"modules/TcCoreLibModule.html":{},"components/TibcoCloudConfigurationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tccorecommonfunctions",{"_index":327,"title":{"classes/TcCoreCommonFunctions.html":{}},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/TcCoreCommonFunctions.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"coverage.html":{}}}],["tccorecommonfunctions.camelcasetowords(header",{"_index":2002,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["tccorecommonfunctions.escapestring(json.stringify(generalconfig",{"_index":1150,"title":{},"body":{"injectables/TcGeneralConfigService.html":{}}}],["tccorecommonfunctions.escapestring(json.stringify(generallandingpageconfig",{"_index":1188,"title":{},"body":{"injectables/TcGeneralLandingPageConfigService.html":{}}}],["tccorecommonfunctions.escapestring(json.stringify(uiappconfig",{"_index":1300,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["tccorecommonfunctions.prepareurlforstaticresource(this.location",{"_index":333,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"components/TibcoCloudNavbarComponent.html":{}}}],["tccorelibmodule",{"_index":996,"title":{"modules/TcCoreLibModule.html":{}},"body":{"modules/TcCoreLibModule.html":{},"modules.html":{},"overview.html":{}}}],["tcfunctions",{"_index":1737,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["tcfunctionsservice",{"_index":1738,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["tcgeneralconfigservice",{"_index":433,"title":{"injectables/TcGeneralConfigService.html":{}},"body":{"guards/GeneralConfigResolver.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcGeneralConfigService.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"coverage.html":{}}}],["tcgenerallandingpageconfigservice",{"_index":506,"title":{"injectables/TcGeneralLandingPageConfigService.html":{}},"body":{"guards/GeneralLandingPageConfigResolver.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"coverage.html":{}}}],["tclogin",{"_index":1473,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["tcloginservice",{"_index":1207,"title":{"injectables/TcLoginService.html":{}},"body":{"injectables/TcLoginService.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"coverage.html":{}}}],["tconcreate",{"_index":747,"title":{},"body":{"directives/OnCreateDirective.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["tcs",{"_index":658,"title":{},"body":{"guards/LoginPrefillResolver.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["tcsharedstate",{"_index":435,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["tcsharedstateservice",{"_index":431,"title":{"injectables/TcSharedStateService.html":{}},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{},"coverage.html":{}}}],["tcst",{"_index":1759,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["tcstgray",{"_index":1775,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["tcstimestamp",{"_index":231,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tct",{"_index":2003,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["tctgray",{"_index":2004,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["template",{"_index":1306,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["templateurl",{"_index":1314,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["tenant",{"_index":116,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"index.html":{}}}],["tenantid",{"_index":1254,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["tenantid\":\"bpm",{"_index":195,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{}}}],["text",{"_index":712,"title":{},"body":{"interceptors/MockingInterceptor.html":{},"classes/TcCoreCommonFunctions.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["text.replace(/\"/g",{"_index":975,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["textafterlogo",{"_index":1639,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["this..uiappid",{"_index":513,"title":{},"body":{"guards/GeneralLandingPageConfigResolver.html":{}}}],["this._updatechangesubscription",{"_index":2051,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["this.accountinfos",{"_index":70,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{}}}],["this.allroles",{"_index":1812,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["this.applicationtitle",{"_index":1892,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["this.appname",{"_index":1640,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["this.attributes",{"_index":846,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["this.auth",{"_index":1498,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["this.auth.subscribe(authorize",{"_index":1504,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["this.authinfo",{"_index":1503,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["this.baseroute",{"_index":1340,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["this.buttonshelper.createbutton('close",{"_index":1337,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["this.cache",{"_index":281,"title":{},"body":{"interceptors/CachingInterceptor.html":{}}}],["this.cache.foreach(expiredentry",{"_index":801,"title":{},"body":{"injectables/RequestCacheService.html":{}}}],["this.cache.get(req",{"_index":272,"title":{},"body":{"interceptors/CachingInterceptor.html":{}}}],["this.cache.get(url",{"_index":792,"title":{},"body":{"injectables/RequestCacheService.html":{}}}],["this.cache.set(url",{"_index":799,"title":{},"body":{"injectables/RequestCacheService.html":{}}}],["this.claims",{"_index":1889,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["this.clientid",{"_index":1492,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["this.clientid).pipe",{"_index":1501,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["this.code",{"_index":1457,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["this.code).errormessage",{"_index":1460,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["this.columdefarray",{"_index":1999,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["this.columns",{"_index":1997,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["this.configname",{"_index":1339,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["this.configureoption.emit(id",{"_index":1862,"title":{},"body":{"components/TibcoCloudSettingMenuEntryComponent.html":{}}}],["this.content",{"_index":848,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["this.createdby",{"_index":850,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["this.createdbyname",{"_index":852,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["this.createsharedstate(ssname",{"_index":1301,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["this.createtoolbarbuttons",{"_index":1350,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["this.data",{"_index":2050,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["this.data.length",{"_index":2063,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["this.datasource",{"_index":1980,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["this.default_config_url.replace",{"_index":340,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["this.defaultappconfig",{"_index":465,"title":{},"body":{"guards/GeneralConfigResolver.html":{}}}],["this.defaultappconfig.uiappid",{"_index":467,"title":{},"body":{"guards/GeneralConfigResolver.html":{}}}],["this.defaultlandingpageconfig",{"_index":511,"title":{},"body":{"guards/GeneralLandingPageConfigResolver.html":{}}}],["this.description",{"_index":854,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["this.dialog.open(tibcocloudnewelementcomponent",{"_index":1830,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["this.dialogref.close",{"_index":1677,"title":{},"body":{"components/TibcoCloudNewElementComponent.html":{}}}],["this.displayedcolumns.push(headername",{"_index":1991,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["this.displayname",{"_index":1895,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["this.documentationurl",{"_index":1897,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["this.docurl",{"_index":1632,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["this.docurl.slice(0",{"_index":1633,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["this.elementtype",{"_index":1675,"title":{},"body":{"components/TibcoCloudNewElementComponent.html":{}}}],["this.firecreated.emit(this.idx",{"_index":761,"title":{},"body":{"directives/OnCreateDirective.html":{}}}],["this.formatparams(params",{"_index":618,"title":{},"body":{"injectables/LogService.html":{}}}],["this.generalconfig",{"_index":1887,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["this.generalconfig.applicationtitle",{"_index":1893,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["this.generalconfig.displayname",{"_index":1896,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["this.generalconfig.documentationurl",{"_index":1898,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["this.generalconfig.id).subscribe",{"_index":1902,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["this.generalconfig.roles",{"_index":1894,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["this.generalconfig.uiappid",{"_index":1901,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["this.generalconfigservice.creategeneralconfig",{"_index":468,"title":{},"body":{"guards/GeneralConfigResolver.html":{}}}],["this.generalconfigservice.getgeneralconfig(this.uiappid",{"_index":479,"title":{},"body":{"guards/GeneralConfigResolver.html":{}}}],["this.generalconfigservice.getgeneralconfig(uiappid.uiappid",{"_index":462,"title":{},"body":{"guards/GeneralConfigResolver.html":{}}}],["this.generalconfigservice.updategeneralconfig",{"_index":471,"title":{},"body":{"guards/GeneralConfigResolver.html":{}}}],["this.generalconfigservice.updategeneralconfig(this.sandboxid",{"_index":1900,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["this.generallandingpageconfigservice.creategenerallandingpageconfig",{"_index":514,"title":{},"body":{"guards/GeneralLandingPageConfigResolver.html":{}}}],["this.generallandingpageconfigservice.getgenerallandingpageconfig(this.uiappid",{"_index":516,"title":{},"body":{"guards/GeneralLandingPageConfigResolver.html":{}}}],["this.generallandingpageconfigservice.getgenerallandingpageconfig(uiappid.uiappid",{"_index":510,"title":{},"body":{"guards/GeneralLandingPageConfigResolver.html":{}}}],["this.generallandingpageconfigservice.updategenerallandingpageconfig",{"_index":515,"title":{},"body":{"guards/GeneralLandingPageConfigResolver.html":{}}}],["this.generallandingpageconfigservice.updategenerallandingpageconfig(this.sandboxid",{"_index":1817,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["this.getappid().pipe",{"_index":348,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["this.getclientid",{"_index":665,"title":{},"body":{"guards/LoginPrefillResolver.html":{}}}],["this.getconfigurationmenuconfig(uiappid.uiappid).pipe",{"_index":350,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{}}}],["this.getdefaultappconfig().pipe",{"_index":463,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["this.getemail",{"_index":664,"title":{},"body":{"guards/LoginPrefillResolver.html":{}}}],["this.getgeneralconfig(uiappid",{"_index":1170,"title":{},"body":{"injectables/TcGeneralConfigService.html":{}}}],["this.getgenerallandingpageconfig(uiappid",{"_index":1190,"title":{},"body":{"injectables/TcGeneralLandingPageConfigService.html":{}}}],["this.getlevelstring(level",{"_index":615,"title":{},"body":{"injectables/LogService.html":{}}}],["this.getpageddata(this.getsorteddata([...this.data",{"_index":2065,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["this.getsharedstate(ssname",{"_index":1298,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["this.getstartedevent.emit('test",{"_index":1921,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["this.http.get(tccorecommonfunctions.prepareurlforstaticresource(this.location",{"_index":339,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["this.http.get(this.app_id_url).pipe",{"_index":344,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["this.http.get(this.default_config_url",{"_index":457,"title":{},"body":{"guards/GeneralConfigResolver.html":{}}}],["this.http.get(url",{"_index":678,"title":{},"body":{"interceptors/MockingInterceptor.html":{},"injectables/TcSharedStateService.html":{}}}],["this.http.post(url",{"_index":1238,"title":{},"body":{"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{}}}],["this.http.put(url",{"_index":1286,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["this.id",{"_index":856,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"components/TibcoCloudNewElementComponent.html":{}}}],["this.isabandoned",{"_index":858,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["this.isorphaned",{"_index":860,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["this.jsonsource",{"_index":1976,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["this.knownerrorlist.find(x",{"_index":1458,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["this.landingpages",{"_index":1810,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["this.landingpages.push(newelement",{"_index":1843,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["this.landingpagesconfig",{"_index":1808,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["this.landingpagesconfig.id).subscribe",{"_index":1818,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["this.landingpagesconfig.landingpage",{"_index":1811,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["this.level",{"_index":621,"title":{},"body":{"injectables/LogService.html":{}}}],["this.links",{"_index":862,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["this.loading",{"_index":1494,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["this.loadnavbarjs",{"_index":1130,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["this.location.prepareexternalurl(this.docurl",{"_index":1635,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["this.loggedin.emit",{"_index":1506,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["this.loginerror",{"_index":1495,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["this.loginprefill.clientid",{"_index":1493,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["this.loginprefill.emailid",{"_index":1491,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["this.logout",{"_index":1657,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["this.logwithdate",{"_index":612,"title":{},"body":{"injectables/LogService.html":{}}}],["this.message",{"_index":1450,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["this.mock_base_path",{"_index":700,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["this.modifiedbyid",{"_index":864,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["this.modifieddate",{"_index":866,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["this.name",{"_index":868,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudNewElementComponent.html":{}}}],["this.paginator.length",{"_index":2062,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["this.paginator.page",{"_index":2058,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["this.paginator.pageindex",{"_index":2067,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["this.paginator.pagesize",{"_index":2068,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["this.password",{"_index":1500,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["this.roles",{"_index":870,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["this.route",{"_index":1899,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["this.route.component",{"_index":1351,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["this.route.params.subscribe(params",{"_index":1451,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["this.route.snapshot.data.allrolesholder.roles.filter(element",{"_index":1813,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["this.route.snapshot.data.claims",{"_index":1890,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["this.route.snapshot.data.claims.primaryproductionsandbox.id",{"_index":1815,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["this.route.snapshot.data.generalconfigholder",{"_index":1888,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["this.route.snapshot.data.landingpagesconfigholder",{"_index":1809,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["this.routeaction.emit(new",{"_index":1345,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["this.router.navigate(['/login",{"_index":198,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{}}}],["this.router.navigate([url",{"_index":1343,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["this.sandboxes",{"_index":51,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{}}}],["this.sandboxid",{"_index":456,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["this.scope",{"_index":873,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["this.selected",{"_index":1753,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["this.selectedlines.emit(this.selected",{"_index":1755,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["this.selectedwelcomepage",{"_index":1827,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["this.sendrequest(originalreq",{"_index":691,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["this.sendrequest(req",{"_index":276,"title":{},"body":{"interceptors/CachingInterceptor.html":{}}}],["this.sharedstateentries",{"_index":880,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["this.sharedstateservice.createsharedstate(ssname",{"_index":1151,"title":{},"body":{"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{}}}],["this.sharedstateservice.getsharedstate(ssname",{"_index":1155,"title":{},"body":{"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{}}}],["this.sharedstateservice.updatesharedstate(sslist.sharedstateentries",{"_index":1169,"title":{},"body":{"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{}}}],["this.shouldlog(level",{"_index":610,"title":{},"body":{"injectables/LogService.html":{}}}],["this.showheader",{"_index":1536,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["this.snackbar.open('error",{"_index":1824,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["this.snackbar.open('general",{"_index":1903,"title":{},"body":{"components/TibcoCloudSettingsGeneralComponent.html":{}}}],["this.snackbar.open('landing",{"_index":1819,"title":{},"body":{"components/TibcoCloudSettingLandingComponent.html":{}}}],["this.sort",{"_index":1982,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["this.sort.active",{"_index":2070,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["this.sort.direction",{"_index":2071,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["this.sort.sortchange",{"_index":2059,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["this.subscriptionselection.emit(authorize",{"_index":1591,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["this.tclogin.laauthorize(this.token",{"_index":1589,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["this.tclogin.login(this.name",{"_index":1499,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["this.tibco_cloud_domain",{"_index":185,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{}}}],["this.tibco_cloud_login",{"_index":197,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{}}}],["this.tibco_dev_domain",{"_index":187,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{}}}],["this.tibco_test_domain",{"_index":186,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{}}}],["this.token",{"_index":1507,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["this.toolbarbuttonevent.emit(id",{"_index":2094,"title":{},"body":{"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["this.toolbarbuttons",{"_index":1349,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{}}}],["this.type",{"_index":875,"title":{},"body":{"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{}}}],["this.uiappid",{"_index":458,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"components/TibcoCloudSettingLandingComponent.html":{}}}],["this.updatesharedstate(sslist.sharedstateentries",{"_index":1302,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["this.updatetable",{"_index":1973,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["this.writetolog(msg",{"_index":634,"title":{},"body":{"injectables/LogService.html":{}}}],["throw",{"_index":200,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{}}}],["throwerror",{"_index":676,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["throwerror('no",{"_index":738,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["tibco",{"_index":164,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"injectables/TcLoginService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"index.html":{}}}],["tibco.cloud.com",{"_index":176,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{}}}],["tibco_cloud_domain",{"_index":92,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{}}}],["tibco_cloud_login",{"_index":93,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{}}}],["tibco_dev_domain",{"_index":94,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{}}}],["tibco_test_domain",{"_index":95,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{}}}],["tibcocloudconfigurationcomponent",{"_index":1008,"title":{"components/TibcoCloudConfigurationComponent.html":{}},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tibcoclouderrorcomponent",{"_index":1009,"title":{"components/TibcoCloudErrorComponent.html":{}},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tibcocloudlogincomponent",{"_index":1010,"title":{"components/TibcoCloudLoginComponent.html":{}},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tibcocloudmenubarcomponent",{"_index":1011,"title":{"components/TibcoCloudMenuBarComponent.html":{}},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tibcocloudmultiplesubscriptioncomponent",{"_index":1012,"title":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tibcocloudnavbarcomponent",{"_index":1013,"title":{"components/TibcoCloudNavbarComponent.html":{}},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tibcocloudnewelementcomponent",{"_index":1014,"title":{"components/TibcoCloudNewElementComponent.html":{}},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tibcocloudselecttablecomponent",{"_index":1015,"title":{"components/TibcoCloudSelectTableComponent.html":{}},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tibcocloudsettinglandingcomponent",{"_index":1016,"title":{"components/TibcoCloudSettingLandingComponent.html":{}},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tibcocloudsettingmenuentrycomponent",{"_index":1017,"title":{"components/TibcoCloudSettingMenuEntryComponent.html":{}},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tibcocloudsettingsgeneralcomponent",{"_index":1018,"title":{"components/TibcoCloudSettingsGeneralComponent.html":{}},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tibcocloudsplashscreencomponent",{"_index":1019,"title":{"components/TibcoCloudSplashScreenComponent.html":{}},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tibcocloudtable",{"_index":2006,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["tibcocloudtablecomponent",{"_index":1020,"title":{"components/TibcoCloudTableComponent.html":{}},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tibcocloudtablecomponent:12",{"_index":1701,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["tibcocloudtablecomponent:13",{"_index":1731,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["tibcocloudtablecomponent:14",{"_index":1734,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["tibcocloudtablecomponent:16",{"_index":1718,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["tibcocloudtablecomponent:18",{"_index":1728,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["tibcocloudtablecomponent:21",{"_index":1719,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["tibcocloudtablecomponent:22",{"_index":1716,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["tibcocloudtablecomponent:24",{"_index":1713,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["tibcocloudtablecomponent:29",{"_index":1711,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["tibcocloudtablecomponent:36",{"_index":1714,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["tibcocloudtablecomponent:75",{"_index":1709,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{}}}],["tibcocloudtabledatasource",{"_index":1717,"title":{"classes/TibcoCloudTableDataSource.html":{}},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{},"coverage.html":{}}}],["tibcocloudtabledatasource(this.paginator",{"_index":1981,"title":{},"body":{"components/TibcoCloudTableComponent.html":{}}}],["tibcocloudwidgetheadercomponent",{"_index":1021,"title":{"components/TibcoCloudWidgetHeaderComponent.html":{}},"body":{"modules/TcCoreLibModule.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tibcocloudwidgetheadercomponent:10",{"_index":1534,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{}}}],["tibcocloudwidgetheadercomponent:11",{"_index":1535,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{}}}],["tibcocloudwidgetheadercomponent:12",{"_index":1538,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{}}}],["tibcocloudwidgetheadercomponent:13",{"_index":1537,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{}}}],["tibcocloudwidgetheadercomponent:14",{"_index":1539,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{}}}],["tibcocloudwidgetheadercomponent:19",{"_index":1542,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{}}}],["timed",{"_index":162,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{}}}],["title",{"_index":493,"title":{},"body":{"classes/GeneralLandingPageConfig.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{}}}],["todo",{"_index":170,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"pipes/HighlightPipe.html":{},"interceptors/MockingInterceptor.html":{},"components/TibcoCloudErrorComponent.html":{}}}],["token",{"_index":228,"title":{},"body":{"guards/AuthGuard.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["token_type",{"_index":14,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{}}}],["toolbar",{"_index":1548,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["toolbarbutton",{"_index":921,"title":{"classes/ToolbarButton.html":{}},"body":{"injectables/TcButtonsHelperService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"classes/ToolbarButton.html":{},"coverage.html":{}}}],["toolbarbutton().deserialize",{"_index":930,"title":{},"body":{"injectables/TcButtonsHelperService.html":{}}}],["toolbarbuttonclick",{"_index":1528,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["toolbarbuttonclick(id",{"_index":1541,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["toolbarbuttonevent",{"_index":1531,"title":{},"body":{"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["toolbarbuttons",{"_index":932,"title":{},"body":{"injectables/TcButtonsHelperService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["toolbarbuttons.findindex(item",{"_index":935,"title":{},"body":{"injectables/TcButtonsHelperService.html":{}}}],["toolbarbuttons.push(button",{"_index":944,"title":{},"body":{"injectables/TcButtonsHelperService.html":{}}}],["toolbarbuttons.push(updatedbutton",{"_index":942,"title":{},"body":{"injectables/TcButtonsHelperService.html":{}}}],["toolbarbuttons.splice(idx",{"_index":946,"title":{},"body":{"injectables/TcButtonsHelperService.html":{}}}],["toolbarbuttons[idx",{"_index":938,"title":{},"body":{"injectables/TcButtonsHelperService.html":{}}}],["tooltip",{"_index":926,"title":{},"body":{"injectables/TcButtonsHelperService.html":{},"classes/ToolbarButton.html":{}}}],["top",{"_index":1519,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{}}}],["transform",{"_index":365,"title":{},"body":{"pipes/DurationSincePipe.html":{},"pipes/EllipsisPipe.html":{},"pipes/HighlightPipe.html":{},"pipes/OrderByDatePipe.html":{},"pipes/ReversePipe.html":{}}}],["transform(array",{"_index":766,"title":{},"body":{"pipes/OrderByDatePipe.html":{}}}],["transform(data",{"_index":524,"title":{},"body":{"pipes/HighlightPipe.html":{}}}],["transform(value",{"_index":366,"title":{},"body":{"pipes/DurationSincePipe.html":{},"pipes/EllipsisPipe.html":{},"pipes/ReversePipe.html":{}}}],["transition",{"_index":1602,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["transposearray",{"_index":956,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["transposearray(array",{"_index":970,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["tree",{"_index":1309,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["trigger",{"_index":474,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"interceptors/MockingInterceptor.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{}}}],["true",{"_index":220,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"injectables/LogService.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["true).pipe",{"_index":480,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"injectables/TcGeneralLandingPageConfigService.html":{}}}],["true).subscribe",{"_index":1171,"title":{},"body":{"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{}}}],["try",{"_index":692,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["ts",{"_index":55,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{},"classes/TcCoreCommonFunctions.html":{}}}],["txt",{"_index":720,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["type",{"_index":17,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/CachingInterceptor.html":{},"classes/Claim.html":{},"classes/ConfigurationMenuConfig.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"classes/ConfigurationMenuEntry.html":{},"interfaces/Deserializable.html":{},"pipes/DurationSincePipe.html":{},"pipes/EllipsisPipe.html":{},"classes/GeneralConfig.html":{},"guards/GeneralConfigResolver.html":{},"classes/GeneralLandingPageConfig.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/Group.html":{},"pipes/HighlightPipe.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"injectables/LogService.html":{},"classes/LoginPrefill.html":{},"interceptors/MockingInterceptor.html":{},"directives/OnCreateDirective.html":{},"pipes/OrderByDatePipe.html":{},"classes/Owner.html":{},"injectables/RequestCacheService.html":{},"pipes/ReversePipe.html":{},"classes/RoleAttribute.html":{},"classes/RouteAction.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/SharedStateContent.html":{},"classes/SharedStateEntry.html":{},"classes/SharedStateList.html":{},"classes/Subscription.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"classes/ToolbarButton.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeid",{"_index":2108,"title":{},"body":{"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{}}}],["typeof",{"_index":628,"title":{},"body":{"injectables/LogService.html":{}}}],["ui",{"_index":1296,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["uiappconfig",{"_index":437,"title":{"classes/UiAppConfig.html":{}},"body":{"guards/GeneralConfigResolver.html":{},"injectables/TcSharedStateService.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{},"coverage.html":{}}}],["uiappconfig().deserialize((json.parse(value.sharedstateentries[0].content.json",{"_index":1303,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["uiappconfig().deserialize(json.parse(value.sharedstateentries[0].content.json",{"_index":1299,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["uiappid",{"_index":338,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"classes/GeneralConfig.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/RoleAttribute.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{}}}],["uiappidconfig",{"_index":320,"title":{"classes/UiAppIdConfig.html":{}},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"classes/UiAppConfig.html":{},"classes/UiAppIdConfig.html":{},"coverage.html":{}}}],["uiappidconfig().deserialize(uiappid",{"_index":347,"title":{},"body":{"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["uiappidconfig.uiappid",{"_index":459,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["unable",{"_index":1513,"title":{},"body":{"components/TibcoCloudLoginComponent.html":{}}}],["uncomment",{"_index":1128,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["undefined",{"_index":277,"title":{},"body":{"interceptors/CachingInterceptor.html":{},"pipes/EllipsisPipe.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"injectables/RequestCacheService.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{}}}],["underlying",{"_index":1864,"title":{},"body":{"components/TibcoCloudSettingMenuEntryComponent.html":{}}}],["universal",{"_index":1119,"title":{},"body":{"modules/TcCoreLibModule.html":{},"miscellaneous/variables.html":{}}}],["unknown",{"_index":1461,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["up",{"_index":2030,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["update",{"_index":1153,"title":{},"body":{"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{},"classes/TibcoCloudTableDataSource.html":{}}}],["updatebuttons",{"_index":915,"title":{},"body":{"injectables/TcButtonsHelperService.html":{}}}],["updatedbutton",{"_index":934,"title":{},"body":{"injectables/TcButtonsHelperService.html":{}}}],["updatedbutton.id",{"_index":937,"title":{},"body":{"injectables/TcButtonsHelperService.html":{}}}],["updatedconf",{"_index":478,"title":{},"body":{"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{}}}],["updatedtoolbarbuttons",{"_index":931,"title":{},"body":{"injectables/TcButtonsHelperService.html":{}}}],["updatedtoolbarbuttons.foreach",{"_index":933,"title":{},"body":{"injectables/TcButtonsHelperService.html":{}}}],["updategeneralconfig",{"_index":1135,"title":{},"body":{"injectables/TcGeneralConfigService.html":{}}}],["updategeneralconfig(sandboxid",{"_index":1145,"title":{},"body":{"injectables/TcGeneralConfigService.html":{}}}],["updategenerallandingpageconfig",{"_index":1177,"title":{},"body":{"injectables/TcGeneralLandingPageConfigService.html":{}}}],["updategenerallandingpageconfig(sandboxid",{"_index":1183,"title":{},"body":{"injectables/TcGeneralLandingPageConfigService.html":{}}}],["updatesharedstate",{"_index":1264,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["updatesharedstate(sharedstatelist",{"_index":1275,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["updatetable",{"_index":1696,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["updateuiappconfig",{"_index":1265,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["updateuiappconfig(sandboxid",{"_index":1277,"title":{},"body":{"injectables/TcSharedStateService.html":{}}}],["url",{"_index":173,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{},"interceptors/MockingInterceptor.html":{},"injectables/RequestCacheService.html":{},"modules/TcCoreLibModule.html":{},"injectables/TcLoginService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"miscellaneous/variables.html":{}}}],["url(/assets/fonts/tibco_fonts_source_sans_pro_source",{"_index":1926,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["urlencoded",{"_index":1237,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["urlparts",{"_index":686,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["urlparts[0].split",{"_index":689,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["use",{"_index":221,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/CachingInterceptor.html":{},"pipes/HighlightPipe.html":{},"modules/TcCoreLibModule.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"classes/TibcoCloudTableDataSource.html":{}}}],["usecache",{"_index":1142,"title":{},"body":{"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{}}}],["useclass",{"_index":1127,"title":{},"body":{"modules/TcCoreLibModule.html":{}}}],["used",{"_index":163,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/ConfigurationMenuConfigResolver.html":{},"guards/GeneralConfigResolver.html":{},"guards/GeneralLandingPageConfigResolver.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"index.html":{}}}],["user",{"_index":1564,"title":{},"body":{"components/TibcoCloudMultipleSubscriptionComponent.html":{}}}],["userid",{"_index":54,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{}}}],["username",{"_index":44,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountInfo.html":{},"classes/AccountsInfo.html":{},"classes/AuthInfo.html":{},"classes/Claim.html":{},"classes/Group.html":{},"classes/LoginPrefill.html":{},"classes/Owner.html":{},"classes/Sandbox.html":{},"classes/SandboxList.html":{},"classes/Subscription.html":{},"injectables/TcLoginService.html":{}}}],["using",{"_index":167,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"components/TibcoCloudLoginComponent.html":{},"classes/TibcoCloudTableDataSource.html":{}}}],["val",{"_index":1240,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["value",{"_index":109,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"pipes/DurationSincePipe.html":{},"pipes/EllipsisPipe.html":{},"pipes/HighlightPipe.html":{},"injectables/LogService.html":{},"interceptors/MockingInterceptor.html":{},"injectables/RequestCacheService.html":{},"pipes/ReversePipe.html":{},"injectables/TcButtonsHelperService.html":{},"classes/TcCoreCommonFunctions.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":402,"title":{},"body":{"pipes/EllipsisPipe.html":{}}}],["value.sharedstateentries.length",{"_index":1156,"title":{},"body":{"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{}}}],["value.sharedstateentries[0].id",{"_index":1160,"title":{},"body":{"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{}}}],["value.slice().reverse",{"_index":808,"title":{},"body":{"pipes/ReversePipe.html":{}}}],["value.substring(0",{"_index":403,"title":{},"body":{"pipes/EllipsisPipe.html":{}}}],["var",{"_index":1400,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["variable",{"_index":2120,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2162,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":486,"title":{},"body":{"classes/GeneralLandingPageConfig.html":{},"classes/LandingPageConfig.html":{},"classes/LandingPageItemConfig.html":{},"injectables/TcGeneralConfigService.html":{},"injectables/TcGeneralLandingPageConfigService.html":{},"injectables/TcSharedStateService.html":{}}}],["versions",{"_index":1642,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["vertical",{"_index":1955,"title":{},"body":{"components/TibcoCloudSplashScreenComponent.html":{}}}],["view",{"_index":2007,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["viewbuttonclick",{"_index":1853,"title":{},"body":{"components/TibcoCloudSettingMenuEntryComponent.html":{}}}],["viewbuttonclick(id",{"_index":1860,"title":{},"body":{"components/TibcoCloudSettingMenuEntryComponent.html":{}}}],["viewchild",{"_index":1628,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["viewchild('navbar",{"_index":1626,"title":{},"body":{"components/TibcoCloudNavbarComponent.html":{}}}],["viewchild(matpaginator",{"_index":1730,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["viewchild(matsort",{"_index":1733,"title":{},"body":{"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudTableComponent.html":{}}}],["visible",{"_index":927,"title":{},"body":{"injectables/TcButtonsHelperService.html":{},"components/TibcoCloudNavbarComponent.html":{},"classes/ToolbarButton.html":{}}}],["void",{"_index":586,"title":{},"body":{"injectables/LogService.html":{},"directives/OnCreateDirective.html":{},"injectables/RequestCacheService.html":{},"modules/TcCoreLibModule.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"classes/TibcoCloudTableDataSource.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["warn",{"_index":580,"title":{},"body":{"injectables/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["warn(msg",{"_index":603,"title":{},"body":{"injectables/LogService.html":{}}}],["webresource",{"_index":710,"title":{},"body":{"interceptors/MockingInterceptor.html":{}}}],["week",{"_index":387,"title":{},"body":{"pipes/DurationSincePipe.html":{}}}],["weeks",{"_index":385,"title":{},"body":{"pipes/DurationSincePipe.html":{}}}],["weight",{"_index":1365,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["welcome",{"_index":423,"title":{},"body":{"classes/GeneralConfig.html":{},"classes/RoleAttribute.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{}}}],["welcomemessage",{"_index":411,"title":{},"body":{"classes/GeneralConfig.html":{},"classes/RoleAttribute.html":{}}}],["whether",{"_index":224,"title":{},"body":{"guards/AuthGuard.html":{}}}],["widget",{"_index":922,"title":{},"body":{"injectables/TcButtonsHelperService.html":{},"modules/TcCoreLibModule.html":{},"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudErrorComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMenuBarComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudNavbarComponent.html":{},"components/TibcoCloudNewElementComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSettingMenuEntryComponent.html":{},"components/TibcoCloudSettingsGeneralComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{},"classes/ToolbarButton.html":{},"coverage.html":{}}}],["width",{"_index":1372,"title":{},"body":{"components/TibcoCloudConfigurationComponent.html":{},"components/TibcoCloudLoginComponent.html":{},"components/TibcoCloudMultipleSubscriptionComponent.html":{},"components/TibcoCloudSelectTableComponent.html":{},"components/TibcoCloudSettingLandingComponent.html":{},"components/TibcoCloudSplashScreenComponent.html":{},"components/TibcoCloudTableComponent.html":{},"components/TibcoCloudWidgetHeaderComponent.html":{}}}],["window.location.hostname.split",{"_index":179,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{}}}],["window.location.href",{"_index":194,"title":{},"body":{"interceptors/AuthErrorInterceptor.html":{},"guards/AuthGuard.html":{}}}],["work",{"_index":711,"title":{},"body":{"interceptors/MockingInterceptor.html":{},"components/TibcoCloudNavbarComponent.html":{}}}],["writetolog",{"_index":581,"title":{},"body":{"injectables/LogService.html":{}}}],["writetolog(msg",{"_index":605,"title":{},"body":{"injectables/LogService.html":{}}}],["wrong",{"_index":1438,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["wrong_application_id",{"_index":1441,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["wrp",{"_index":216,"title":{},"body":{"guards/AuthGuard.html":{}}}],["ws",{"_index":1117,"title":{},"body":{"modules/TcCoreLibModule.html":{},"miscellaneous/variables.html":{}}}],["www",{"_index":1235,"title":{},"body":{"injectables/TcLoginService.html":{}}}],["x.errorcode",{"_index":1459,"title":{},"body":{"components/TibcoCloudErrorComponent.html":{}}}],["year",{"_index":380,"title":{},"body":{"pipes/DurationSincePipe.html":{}}}],["years",{"_index":379,"title":{},"body":{"pipes/DurationSincePipe.html":{}}}],["yes",{"_index":369,"title":{},"body":{"pipes/DurationSincePipe.html":{},"pipes/EllipsisPipe.html":{},"pipes/ReversePipe.html":{}}}],["yesterday",{"_index":390,"title":{},"body":{"pipes/DurationSincePipe.html":{}}}],["you're",{"_index":2040,"title":{},"body":{"classes/TibcoCloudTableDataSource.html":{}}}],["z])([a",{"_index":983,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["z])/g",{"_index":984,"title":{},"body":{"classes/TcCoreCommonFunctions.html":{}}}],["zoom",{"_index":1022,"title":{},"body":{"modules/TcCoreLibModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AccessToken.html":{"url":"classes/AccessToken.html","title":"class - AccessToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccessToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/tc-login.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Deserializable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                access_token\n                            \n                            \n                                expires_in\n                            \n                            \n                                token_type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            access_token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expires_in\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token_type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:48\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(input: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/tc-login.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Deserializable} from './deserializable';\n\nexport class Group {\n  constructor(public id: string,\n              public type: string\n  ) {\n  }\n}\n\nexport class Claim implements Deserializable {\n  email: string;\n  firstName: string;\n  id: string;\n  lastName: string;\n  sandboxes: Sandbox[];\n  subscriptionId: string;\n  username: string;\n  primaryProductionSandbox: Sandbox;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class Sandbox {\n  constructor(public groups: Group[],\n              public id: string,\n              public type: string,\n              public name: string,\n              public subscriptionId: string,\n              public ownerId: string,\n  ) {\n  }\n}\n\nexport class SandboxList {\n  sandboxes: Sandbox[];\n  deserialize(input: any): this {\n    this.sandboxes = [];\n    Object.assign(this.sandboxes, input);\n    return this;\n  }\n}\n\nexport class AccessToken implements Deserializable {\n  access_token: string;\n  token_type: string;\n  expires_in: number;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class AuthInfo implements Deserializable {\n  userName: string;\n  firstName: string;\n  lastName: string;\n  userId: string;\n  ts: number;\n  orgName: string;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class Subscription {\n  constructor(\n    public accountId: string,\n    public accountDisplayName: string,\n    public ownerName: string,\n    public loggedInUserRole: string,\n    public regions: string[]\n  ) {}\n}\n\nexport class Owner {\n  email: string;\n  firstName: string;\n  lastName: string;\n  role: string;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class AccountInfo {\n  accountDisplayName: string;\n  accountId: string;\n  loggedInUserRole: string;\n  ownerInfo: Owner;\n  regions: string[];\n}\n\nexport class AccountsInfo implements Deserializable {\n  accountInfos: AccountInfo[];\n  deserialize(input: any): this {\n    this.accountInfos = [];\n    Object.assign(this.accountInfos, input);\n    return this;\n  }\n}\n\nexport class LoginPrefill implements Deserializable {\n  emailId: string;\n  clientId: string;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountInfo.html":{"url":"classes/AccountInfo.html","title":"class - AccountInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/tc-login.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountDisplayName\n                            \n                            \n                                accountId\n                            \n                            \n                                loggedInUserRole\n                            \n                            \n                                ownerInfo\n                            \n                            \n                                regions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accountDisplayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accountId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:94\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loggedInUserRole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ownerInfo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Owner\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:96\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            regions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:97\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Deserializable} from './deserializable';\n\nexport class Group {\n  constructor(public id: string,\n              public type: string\n  ) {\n  }\n}\n\nexport class Claim implements Deserializable {\n  email: string;\n  firstName: string;\n  id: string;\n  lastName: string;\n  sandboxes: Sandbox[];\n  subscriptionId: string;\n  username: string;\n  primaryProductionSandbox: Sandbox;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class Sandbox {\n  constructor(public groups: Group[],\n              public id: string,\n              public type: string,\n              public name: string,\n              public subscriptionId: string,\n              public ownerId: string,\n  ) {\n  }\n}\n\nexport class SandboxList {\n  sandboxes: Sandbox[];\n  deserialize(input: any): this {\n    this.sandboxes = [];\n    Object.assign(this.sandboxes, input);\n    return this;\n  }\n}\n\nexport class AccessToken implements Deserializable {\n  access_token: string;\n  token_type: string;\n  expires_in: number;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class AuthInfo implements Deserializable {\n  userName: string;\n  firstName: string;\n  lastName: string;\n  userId: string;\n  ts: number;\n  orgName: string;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class Subscription {\n  constructor(\n    public accountId: string,\n    public accountDisplayName: string,\n    public ownerName: string,\n    public loggedInUserRole: string,\n    public regions: string[]\n  ) {}\n}\n\nexport class Owner {\n  email: string;\n  firstName: string;\n  lastName: string;\n  role: string;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class AccountInfo {\n  accountDisplayName: string;\n  accountId: string;\n  loggedInUserRole: string;\n  ownerInfo: Owner;\n  regions: string[];\n}\n\nexport class AccountsInfo implements Deserializable {\n  accountInfos: AccountInfo[];\n  deserialize(input: any): this {\n    this.accountInfos = [];\n    Object.assign(this.accountInfos, input);\n    return this;\n  }\n}\n\nexport class LoginPrefill implements Deserializable {\n  emailId: string;\n  clientId: string;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountsInfo.html":{"url":"classes/AccountsInfo.html","title":"class - AccountsInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountsInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/tc-login.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Deserializable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountInfos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accountInfos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AccountInfo[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:101\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(input: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/tc-login.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Deserializable} from './deserializable';\n\nexport class Group {\n  constructor(public id: string,\n              public type: string\n  ) {\n  }\n}\n\nexport class Claim implements Deserializable {\n  email: string;\n  firstName: string;\n  id: string;\n  lastName: string;\n  sandboxes: Sandbox[];\n  subscriptionId: string;\n  username: string;\n  primaryProductionSandbox: Sandbox;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class Sandbox {\n  constructor(public groups: Group[],\n              public id: string,\n              public type: string,\n              public name: string,\n              public subscriptionId: string,\n              public ownerId: string,\n  ) {\n  }\n}\n\nexport class SandboxList {\n  sandboxes: Sandbox[];\n  deserialize(input: any): this {\n    this.sandboxes = [];\n    Object.assign(this.sandboxes, input);\n    return this;\n  }\n}\n\nexport class AccessToken implements Deserializable {\n  access_token: string;\n  token_type: string;\n  expires_in: number;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class AuthInfo implements Deserializable {\n  userName: string;\n  firstName: string;\n  lastName: string;\n  userId: string;\n  ts: number;\n  orgName: string;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class Subscription {\n  constructor(\n    public accountId: string,\n    public accountDisplayName: string,\n    public ownerName: string,\n    public loggedInUserRole: string,\n    public regions: string[]\n  ) {}\n}\n\nexport class Owner {\n  email: string;\n  firstName: string;\n  lastName: string;\n  role: string;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class AccountInfo {\n  accountDisplayName: string;\n  accountId: string;\n  loggedInUserRole: string;\n  ownerInfo: Owner;\n  regions: string[];\n}\n\nexport class AccountsInfo implements Deserializable {\n  accountInfos: AccountInfo[];\n  deserialize(input: any): this {\n    this.accountInfos = [];\n    Object.assign(this.accountInfos, input);\n    return this;\n  }\n}\n\nexport class LoginPrefill implements Deserializable {\n  emailId: string;\n  clientId: string;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthErrorInterceptor.html":{"url":"interceptors/AuthErrorInterceptor.html","title":"interceptor - AuthErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interceptors/authentication-error-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                TIBCO_CLOUD_DOMAIN\n                            \n                            \n                                    Private\n                                TIBCO_CLOUD_LOGIN\n                            \n                            \n                                    Private\n                                TIBCO_DEV_DOMAIN\n                            \n                            \n                                    Private\n                                TIBCO_TEST_DOMAIN\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/lib/interceptors/authentication-error-interceptor.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/interceptors/authentication-error-interceptor.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            TIBCO_CLOUD_DOMAIN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'cloud.tibco.com'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/interceptors/authentication-error-interceptor.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            TIBCO_CLOUD_LOGIN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://account.cloud.tibco.com/idm/v1/login-saml?relayState='\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/interceptors/authentication-error-interceptor.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            TIBCO_DEV_DOMAIN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'emea.tibco.com'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/interceptors/authentication-error-interceptor.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            TIBCO_TEST_DOMAIN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'tenant-integration.tcie.pro'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/interceptors/authentication-error-interceptor.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse,\n} from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport {catchError, tap} from 'rxjs/operators';\nimport {ActivatedRouteSnapshot, Router, RouterStateSnapshot} from '@angular/router';\n\n@Injectable()\nexport class AuthErrorInterceptor implements HttpInterceptor {\n  private TIBCO_CLOUD_DOMAIN = 'cloud.tibco.com';\n  private TIBCO_TEST_DOMAIN = 'tenant-integration.tcie.pro';\n  private TIBCO_DEV_DOMAIN = 'emea.tibco.com';\n  private TIBCO_CLOUD_LOGIN = 'https://account.cloud.tibco.com/idm/v1/login-saml?relayState=';\n\n  constructor(private router: Router) {}\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(req).pipe(\n      catchError((err: any) => {\n          if (err instanceof HttpErrorResponse) {\n            // error: \"Logged out due to inactivity. Hit refresh.↵\"\n            // headers: HttpHeaders {normalizedNames: Map(0), lazyUpdate: null, lazyInit: ƒ}\n            // message: \"Http failure response for https://localhost:4200/clientstate/states?$filter=type=PRIVATE%20and%20name=%27testappjs.recentcases.tibcolabs.client.context.PRIVATE%27: 419 OK\"\n            // name: \"HttpErrorResponse\"\n            // ok: false\n            // status: 419\n            // statusText: \"OK\"\n            if (err.status === 419) {\n              // timed out\n              // should only be used if not on tibco cloud (and hence using our login route)\n              // TODO: Externalize redirect URL\n              // check if we are hosted on tibco.cloud.com\n              const host = window.location.hostname.split('.');\n              const hostDomain = host[host.length - 3] + '.' + host[host.length - 2] + '.' + host[host.length - 1];\n              if (hostDomain === this.TIBCO_CLOUD_DOMAIN || hostDomain === this.TIBCO_TEST_DOMAIN || hostDomain === this.TIBCO_DEV_DOMAIN) {\n                // redirect to Tibco Cloud Login\n                // supply base64 encoded redirect string\n                const reauthUrl = btoa('{ \"resumeURL\":\"' + window.location.href + '\", \"tenantId\":\"BPM\" }');\n                console.log('redirecting to: ' + this.TIBCO_CLOUD_LOGIN + reauthUrl);\n                window.location.href = this.TIBCO_CLOUD_LOGIN + reauthUrl;\n              } else {\n                this.router.navigate(['/login'], {queryParams: {}});\n              }\n            } else {\n              throw err;\n            }\n          }\n          return of(err);\n        }\n      )\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/lib/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                TIBCO_CLOUD_DOMAIN\n                            \n                            \n                                    Private\n                                TIBCO_DEV_DOMAIN\n                            \n                            \n                                    Private\n                                TIBCO_TEST_DOMAIN\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/lib/guards/auth.guard.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/guards/auth.guard.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Inject, Injectable} from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  private TIBCO_CLOUD_DOMAIN = 'cloud.tibco.com';\n  private TIBCO_TEST_DOMAIN = 'tenant-integration.tcie.pro';\n  private TIBCO_DEV_DOMAIN = 'emea.tibco.com';\n\n  constructor(private router: Router) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    // check if we are hosted on tibco.cloud.com\n    const host = window.location.hostname.split('.');\n    const hostDomain = host[host.length - 3] + '.' + host[host.length - 2] + '.' + host[host.length - 1];\n    if (hostDomain === this.TIBCO_CLOUD_DOMAIN || hostDomain === this.TIBCO_TEST_DOMAIN || hostDomain === this.TIBCO_DEV_DOMAIN) {\n      // delegate handling login/auth to Tibco Cloud since WRP resources are protected anyway\n      return true;\n    } else {\n      // use the sessionTimestamp to decide whether to redirect to login (30 mins expiry of token if no API call)\n      const tcsTimestamp = sessionStorage.getItem('tcsTimestamp');\n      if (tcsTimestamp && Number(tcsTimestamp) > (Number(Date.now()) - (30 * 60000))) {\n        // logged in and api called made in last 30 mins so should be OK\n        return true;\n      } else {\n        // not logged in so redirect to login page\n        // TODO: Externalize redirect URL\n        // const TIBCO_CLOUD_LOGIN = 'https://account.cloud.tibco.com/idm/v1/login-saml?relayState=';\n        /*const TIBCO_CLOUD_LOGIN = 'https://account.tenant-integration.tcie.pro/idm/v1/login-saml?relayState=';\n        const reauthUrl = btoa('{ \"resumeURL\":\"' + window.location.href + '\", \"tenantId\":\"BPM\" }');\n        console.log('redirecting to: ' + TIBCO_CLOUD_LOGIN + reauthUrl);\n        window.location.href = TIBCO_CLOUD_LOGIN + reauthUrl;*/\n        this.router.navigate(['/login'], {queryParams: {returnUrl: state.url}});\n      }\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthInfo.html":{"url":"classes/AuthInfo.html","title":"class - AuthInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/tc-login.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Deserializable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                orgName\n                            \n                            \n                                ts\n                            \n                            \n                                userId\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orgName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:58\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(input: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/tc-login.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Deserializable} from './deserializable';\n\nexport class Group {\n  constructor(public id: string,\n              public type: string\n  ) {\n  }\n}\n\nexport class Claim implements Deserializable {\n  email: string;\n  firstName: string;\n  id: string;\n  lastName: string;\n  sandboxes: Sandbox[];\n  subscriptionId: string;\n  username: string;\n  primaryProductionSandbox: Sandbox;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class Sandbox {\n  constructor(public groups: Group[],\n              public id: string,\n              public type: string,\n              public name: string,\n              public subscriptionId: string,\n              public ownerId: string,\n  ) {\n  }\n}\n\nexport class SandboxList {\n  sandboxes: Sandbox[];\n  deserialize(input: any): this {\n    this.sandboxes = [];\n    Object.assign(this.sandboxes, input);\n    return this;\n  }\n}\n\nexport class AccessToken implements Deserializable {\n  access_token: string;\n  token_type: string;\n  expires_in: number;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class AuthInfo implements Deserializable {\n  userName: string;\n  firstName: string;\n  lastName: string;\n  userId: string;\n  ts: number;\n  orgName: string;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class Subscription {\n  constructor(\n    public accountId: string,\n    public accountDisplayName: string,\n    public ownerName: string,\n    public loggedInUserRole: string,\n    public regions: string[]\n  ) {}\n}\n\nexport class Owner {\n  email: string;\n  firstName: string;\n  lastName: string;\n  role: string;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class AccountInfo {\n  accountDisplayName: string;\n  accountId: string;\n  loggedInUserRole: string;\n  ownerInfo: Owner;\n  regions: string[];\n}\n\nexport class AccountsInfo implements Deserializable {\n  accountInfos: AccountInfo[];\n  deserialize(input: any): this {\n    this.accountInfos = [];\n    Object.assign(this.accountInfos, input);\n    return this;\n  }\n}\n\nexport class LoginPrefill implements Deserializable {\n  emailId: string;\n  clientId: string;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/CachingInterceptor.html":{"url":"interceptors/CachingInterceptor.html","title":"interceptor - CachingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  CachingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interceptors/caching-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                            \n                                sendRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cache: RequestCacheService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/interceptors/caching-interceptor.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                        RequestCacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/interceptors/caching-interceptor.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendRequest\n                        \n                        \n                    \n                \n            \n            \n                \nsendRequest(req: HttpRequest, next: HttpHandler, cache: RequestCacheService)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/interceptors/caching-interceptor.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cache\n                                    \n                                                RequestCacheService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpRequest, HttpResponse, HttpInterceptor, HttpHandler } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { RequestCacheService } from '../services/request-cache.service';\n\n@Injectable()\nexport class CachingInterceptor implements HttpInterceptor {\n  constructor(private cache: RequestCacheService) {}\n  intercept(req: HttpRequest, next: HttpHandler) {\n    let cachedResponse;\n    if (req.headers.get('cacheResponse') || (req.urlWithParams.substr(0, 15)) === '../assets/icons') {\n      // only cache if the cacheResponse flag is set\n      if (!req.headers.get('flushCache')) {\n        cachedResponse = this.cache.get(req);\n      } else {\n      }\n      // use the cache\n    } else {\n      // dont pass the cache since this should not be cached\n      return this.sendRequest(req, next, undefined);\n    }\n    // return cached response or make request if no cached response\n    return cachedResponse ? of(cachedResponse) : this.sendRequest(req, next, this.cache);\n  }\n\n  sendRequest(\n    req: HttpRequest,\n    next: HttpHandler,\n    cache: RequestCacheService): Observable> {\n    return next.handle(req)\n      .pipe(\n      tap(event => {\n        if (event instanceof HttpResponse && cache) {\n          cache.put(req, event);\n        }\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Claim.html":{"url":"classes/Claim.html","title":"class - Claim","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Claim\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/tc-login.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Deserializable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                primaryProductionSandbox\n                            \n                            \n                                sandboxes\n                            \n                            \n                                subscriptionId\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            primaryProductionSandbox\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Sandbox\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sandboxes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Sandbox[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptionId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(input: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/tc-login.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Deserializable} from './deserializable';\n\nexport class Group {\n  constructor(public id: string,\n              public type: string\n  ) {\n  }\n}\n\nexport class Claim implements Deserializable {\n  email: string;\n  firstName: string;\n  id: string;\n  lastName: string;\n  sandboxes: Sandbox[];\n  subscriptionId: string;\n  username: string;\n  primaryProductionSandbox: Sandbox;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class Sandbox {\n  constructor(public groups: Group[],\n              public id: string,\n              public type: string,\n              public name: string,\n              public subscriptionId: string,\n              public ownerId: string,\n  ) {\n  }\n}\n\nexport class SandboxList {\n  sandboxes: Sandbox[];\n  deserialize(input: any): this {\n    this.sandboxes = [];\n    Object.assign(this.sandboxes, input);\n    return this;\n  }\n}\n\nexport class AccessToken implements Deserializable {\n  access_token: string;\n  token_type: string;\n  expires_in: number;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class AuthInfo implements Deserializable {\n  userName: string;\n  firstName: string;\n  lastName: string;\n  userId: string;\n  ts: number;\n  orgName: string;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class Subscription {\n  constructor(\n    public accountId: string,\n    public accountDisplayName: string,\n    public ownerName: string,\n    public loggedInUserRole: string,\n    public regions: string[]\n  ) {}\n}\n\nexport class Owner {\n  email: string;\n  firstName: string;\n  lastName: string;\n  role: string;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class AccountInfo {\n  accountDisplayName: string;\n  accountId: string;\n  loggedInUserRole: string;\n  ownerInfo: Owner;\n  regions: string[];\n}\n\nexport class AccountsInfo implements Deserializable {\n  accountInfos: AccountInfo[];\n  deserialize(input: any): this {\n    this.accountInfos = [];\n    Object.assign(this.accountInfos, input);\n    return this;\n  }\n}\n\nexport class LoginPrefill implements Deserializable {\n  emailId: string;\n  clientId: string;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigurationMenuConfig.html":{"url":"classes/ConfigurationMenuConfig.html","title":"class - ConfigurationMenuConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigurationMenuConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/tc-configuration-menu-config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                menu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigurationMenuEntry[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-configuration-menu-config.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(input: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/tc-configuration-menu-config.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Deserializable } from './deserializable';\n\n\nexport class ConfigurationMenuConfig {\n    menu: ConfigurationMenuEntry[];\n    deserialize(input: any) {\n        Object.assign(this, input);\n        return this;\n    }\n}\n\nexport class  ConfigurationMenuEntry {\n    entry: string;\n    options: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ConfigurationMenuConfigResolver.html":{"url":"guards/ConfigurationMenuConfigResolver.html","title":"guard - ConfigurationMenuConfigResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    ConfigurationMenuConfigResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/lib/resolvers/configuration-menu-config.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                APP_ID_URL\n                            \n                            \n                                DEFAULT_CONFIG_URL\n                            \n                            \n                                    Private\n                                getAppId\n                            \n                            \n                                    Private\n                                getConfigurationMenuConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/lib/resolvers/configuration-menu-config.resolver.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(routeSnapshot: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/resolvers/configuration-menu-config.resolver.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routeSnapshot\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UiAppIdConfig } from '../models/tc-app-config';\nimport { map, flatMap } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { ConfigurationMenuConfig } from '../models/tc-configuration-menu-config';\nimport { Location } from '@angular/common';\nimport {TcCoreCommonFunctions} from '../common/tc-core-common-functions';\n\n@Injectable()\nexport class ConfigurationMenuConfigResolver implements Resolve> {\n\n    DEFAULT_CONFIG_URL = 'assets/config//configurationMenuConfig.json';\n    APP_ID_URL = TcCoreCommonFunctions.prepareUrlForStaticResource(this.location, 'assets/config/uiAppId.json');\n\n    constructor(private http: HttpClient, private location: Location) { }\n\n    // can be used to load defaultAppConfig from a JSON config\n    private getConfigurationMenuConfig = (uiAppId: string) => {\n        return this.http.get(TcCoreCommonFunctions.prepareUrlForStaticResource(this.location, this.DEFAULT_CONFIG_URL.replace('', uiAppId)));\n    }\n\n    // loads uiAppId from json file in assets (appId.json)\n    private getAppId = (): Observable => {\n        return this.http.get(this.APP_ID_URL).pipe(\n            map(uiAppId => {\n                const uiAppIdConfig = new UiAppIdConfig().deserialize(uiAppId);\n                return uiAppIdConfig;\n            })\n        );\n    }\n\n    resolve(routeSnapshot: ActivatedRouteSnapshot): Observable {\n        const configurationMenuConfig$ =\n            this.getAppId().pipe(\n                flatMap(uiAppId => {\n                    return this.getConfigurationMenuConfig(uiAppId.uiAppId).pipe(\n                        map(config => {\n                            return new ConfigurationMenuConfig().deserialize(config);\n                        })\n                    );\n                })\n            )\n        return configurationMenuConfig$;\n    }\n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigurationMenuEntry.html":{"url":"classes/ConfigurationMenuEntry.html","title":"class - ConfigurationMenuEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigurationMenuEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/tc-configuration-menu-config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entry\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-configuration-menu-config.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-configuration-menu-config.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Deserializable } from './deserializable';\n\n\nexport class ConfigurationMenuConfig {\n    menu: ConfigurationMenuEntry[];\n    deserialize(input: any) {\n        Object.assign(this, input);\n        return this;\n    }\n}\n\nexport class  ConfigurationMenuEntry {\n    entry: string;\n    options: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Deserializable.html":{"url":"interfaces/Deserializable.html","title":"interface - Deserializable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Deserializable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/deserializable.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    deserialize\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(input: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/deserializable.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface Deserializable {\n  deserialize(input: any): this;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/DurationSincePipe.html":{"url":"pipes/DurationSincePipe.html","title":"pipe - DurationSincePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  DurationSincePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/pipes/duration-since.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        durationSince\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string, args?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/pipes/duration-since.pipe.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'durationSince'\n})\nexport class DurationSincePipe implements PipeTransform {\n\n  transform(value: string, args?: any): any {\n    const seconds: number = Math.floor((+new Date() - +new Date(value)) / 1000);\n    let interval: number = Math.floor(seconds / 31536000);\n    // years\n    if (interval >= 1) {\n      if (interval === 1) {\n        return interval + ' year ago';\n      } else {\n        return interval + ' years ago';\n      }\n    }\n    // months\n    interval = Math.floor(seconds / 2592000);\n    if (interval >= 1) {\n      if (interval === 1) {\n        return interval + ' month ago';\n      } else {\n        return interval + ' months ago';\n      }\n    }\n    // weeks\n    interval = Math.floor(seconds / 604800);\n    if (interval >= 1) {\n      if (interval === 1) {\n        return interval + ' week ago';\n      } else {\n        return interval + ' weeks ago';\n      }\n    }\n    // days\n    interval = Math.floor(seconds / 86400);\n    if (interval >= 1) {\n      if (interval === 1) {\n        return ' yesterday';\n      } else {\n        return interval + ' days ago';\n      }\n    }\n    // hours\n    interval = Math.floor(seconds / 3600);\n    if (interval >= 1) {\n      if (interval === 1) {\n        return interval + ' hour ago';\n      } else {\n        return interval + ' hours ago';\n      }\n    }\n    // minutes\n    interval = Math.floor(seconds / 60);\n    if (interval >= 1) {\n      if (interval === 1) {\n        return interval + ' minute ago';\n      } else {\n        return interval + ' minutes ago';\n      }\n    }\n\n    return 'Just now';\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/EllipsisPipe.html":{"url":"pipes/EllipsisPipe.html","title":"pipe - EllipsisPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  EllipsisPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/pipes/ellipsis.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        ellipsis\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any, args?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/pipes/ellipsis.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'ellipsis'\n})\nexport class EllipsisPipe implements PipeTransform {\n\n  transform(value: any, args?: number): any {\n    if (args === undefined) {\n      return value;\n    }\n\n    if (value && value.length > args) {\n      return value.substring(0, args) + '...';\n    } else {\n      return value;\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GeneralConfig.html":{"url":"classes/GeneralConfig.html","title":"class - GeneralConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GeneralConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/tc-general-config.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Deserializable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                applicationTitle\n                            \n                            \n                                browserTitle\n                            \n                            \n                                displayName\n                            \n                            \n                                documentationUrl\n                            \n                            \n                                id\n                            \n                            \n                                roles\n                            \n                            \n                                uiAppId\n                            \n                            \n                                welcomeMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applicationTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-general-config.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            browserTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-general-config.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-general-config.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            documentationUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-general-config.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-general-config.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoleAttribute[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-general-config.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uiAppId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-general-config.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            welcomeMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-general-config.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(input: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/tc-general-config.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Deserializable} from './deserializable';\n\nexport class RoleAttribute {\n  public id: string;\n  public group: string;\n  public display: string;\n  public welcome: string;\n  public imageUrl: string;\n  public configuration: boolean;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class GeneralConfig implements Deserializable {\n  id: string;\n  uiAppId: string;\n  browserTitle: string;\n  applicationTitle: string;\n  welcomeMessage: string;\n  displayName: boolean;\n  documentationUrl: string;\n  roles: RoleAttribute[];\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/GeneralConfigResolver.html":{"url":"guards/GeneralConfigResolver.html","title":"guard - GeneralConfigResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    GeneralConfigResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/lib/resolvers/general-config.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                APP_ID_URL\n                            \n                            \n                                DEFAULT_CONFIG_URL\n                            \n                            \n                                    Public\n                                defaultAppConfig\n                            \n                            \n                                    Private\n                                getAppId\n                            \n                            \n                                    Private\n                                getDefaultAppConfig\n                            \n                            \n                                    Private\n                                sandboxId\n                            \n                            \n                                    Public\n                                setSandbox\n                            \n                            \n                                    Private\n                                uiAppId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(tcSharedState: TcSharedStateService, generalConfigService: TcGeneralConfigService, http: HttpClient, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/lib/resolvers/general-config.resolver.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tcSharedState\n                                                  \n                                                        \n                                                                        TcSharedStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        generalConfigService\n                                                  \n                                                        \n                                                                        TcGeneralConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/resolvers/general-config.resolver.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {Resolve} from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport {UiAppConfig, UiAppIdConfig} from '../models/tc-app-config';\nimport {flatMap, map, mergeMap, switchMap} from 'rxjs/operators';\nimport {TcSharedStateService} from '../services/tc-shared-state.service';\nimport {HttpClient} from '@angular/common/http';\nimport {TcGeneralConfigService} from '../services/tc-general-config.service';\nimport {GeneralConfig} from '../models/tc-general-config';\nimport {Location} from '@angular/common';\nimport {TcCoreCommonFunctions} from '../common/tc-core-common-functions';\n\n@Injectable()\nexport class GeneralConfigResolver implements Resolve> {\n\n  DEFAULT_CONFIG_URL = TcCoreCommonFunctions.prepareUrlForStaticResource(this.location, 'assets/config/generalAppConfig.json');\n  APP_ID_URL = TcCoreCommonFunctions.prepareUrlForStaticResource(this.location, 'assets/config/uiAppId.json');\n\n  private sandboxId: number;\n  public defaultAppConfig: GeneralConfig;\n  private uiAppId: string;\n\n  constructor(private tcSharedState: TcSharedStateService, private generalConfigService: TcGeneralConfigService, private http: HttpClient, private location: Location) {}\n  // note appConfigResolver will need sandboxId to create app config state record.\n  // So we expect this to have been set by caller (done by tc-liveapps-lib/laConfigResolver).\n\n  public setSandbox = (sandboxId: number) => {\n    this.sandboxId = sandboxId;\n  }\n\n  // can be used to load defaultAppConfig from a JSON config\n  private getDefaultAppConfig = () => {\n    return this.http.get(this.DEFAULT_CONFIG_URL);\n  }\n\n  // loads uiAppId from json file in assets (appId.json)\n  private getAppId = (): Observable => {\n    return this.http.get(this.APP_ID_URL).pipe(\n      map(uiAppId => {\n        const uiAppIdConfig = new UiAppIdConfig().deserialize(uiAppId);\n        this.uiAppId = uiAppIdConfig.uiAppId;\n        return uiAppIdConfig;\n        }\n      )\n    );\n  }\n\n  resolve(): Observable {\n    const appConfig = this.getAppId().pipe(\n      switchMap(uiAppId => this.generalConfigService.getGeneralConfig(uiAppId.uiAppId, true, false)\n      .pipe(\n        mergeMap(\n          generalConfig => {\n            if (generalConfig === undefined) {\n              return this.getDefaultAppConfig().pipe(\n                flatMap(config => {\n                  this.defaultAppConfig = new GeneralConfig().deserialize(config);\n                  this.defaultAppConfig.uiAppId = this.uiAppId;\n                  return this.generalConfigService.createGeneralConfig(\n                    this.sandboxId,\n                    this.defaultAppConfig.uiAppId,\n                    this.defaultAppConfig)\n                    .pipe(\n                      flatMap(\n                        result => {\n                          const newAppConfig = this.defaultAppConfig;\n                          newAppConfig.id = result;\n                          return this.generalConfigService.updateGeneralConfig(\n                            this.sandboxId,\n                            newAppConfig.uiAppId,\n                            newAppConfig,\n                            result).pipe(\n                              flatMap(\n                                // trigger a read to flush the cache since we changed it\n                              updatedConf => {\n                                  return this.generalConfigService.getGeneralConfig(this.uiAppId, true, true).pipe(\n                                    map(\n                                      cachedConfig => {\n                                        return cachedConfig;\n                                      }\n                                    )\n                                  );\n\n                              }\n                              )\n                          );\n                         // return newAppConfig;\n                        })\n                    );\n                })\n              );\n             } else {\n              return of(generalConfig);\n            }\n          }\n        )\n      )\n      )\n    )\n    return appConfig;\n  }\n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GeneralLandingPageConfig.html":{"url":"classes/GeneralLandingPageConfig.html","title":"class - GeneralLandingPageConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GeneralLandingPageConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/tc-general-landing-page-config.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Deserializable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                landingPage\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-general-landing-page-config.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            landingPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LandingPageConfig[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-general-landing-page-config.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-general-landing-page-config.ts:31\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(input: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/tc-general-landing-page-config.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Deserializable } from './deserializable';\n\nexport class LandingPageItemConfig {\n    public title: string;\n    public content: string;\n    public iconURL: string;\n    deserialize(input: any) {\n        Object.assign(this, input);\n        return this;\n    }\n}\n\nexport class LandingPageConfig {\n    public key: string;\n    public description: string;\n    public title: string;\n    public subtitle: string;\n    public backgroundURL: string;\n    public homeRoute: string;\n    public highlights: LandingPageItemConfig[];\n    roles: string[];\n    priority: number;\n    deserialize(input: any) {\n        Object.assign(this, input);\n        return this;\n    }\n}\n\nexport class GeneralLandingPageConfig implements Deserializable {\n    id: string;\n    version: string;\n    landingPage: LandingPageConfig[];\n    deserialize(input: any) {\n        Object.assign(this, input);\n        return this;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/GeneralLandingPageConfigResolver.html":{"url":"guards/GeneralLandingPageConfigResolver.html","title":"guard - GeneralLandingPageConfigResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    GeneralLandingPageConfigResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/lib/resolvers/general-landing-page-config.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                APP_ID_URL\n                            \n                            \n                                DEFAULT_CONFIG_URL\n                            \n                            \n                                    Public\n                                defaultLandingPageConfig\n                            \n                            \n                                    Private\n                                getAppId\n                            \n                            \n                                    Private\n                                getDefaultAppConfig\n                            \n                            \n                                    Private\n                                sandboxId\n                            \n                            \n                                    Public\n                                setSandbox\n                            \n                            \n                                    Private\n                                uiAppId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(tcSharedState: TcSharedStateService, generalLandingPageConfigService: TcGeneralLandingPageConfigService, http: HttpClient, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/lib/resolvers/general-landing-page-config.resolver.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tcSharedState\n                                                  \n                                                        \n                                                                        TcSharedStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        generalLandingPageConfigService\n                                                  \n                                                        \n                                                                        TcGeneralLandingPageConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/resolvers/general-landing-page-config.resolver.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { UiAppIdConfig } from '../models/tc-app-config';\nimport { flatMap, map, mergeMap, switchMap } from 'rxjs/operators';\nimport { TcSharedStateService } from '../services/tc-shared-state.service';\nimport { HttpClient } from '@angular/common/http';\nimport { GeneralConfig } from '../models/tc-general-config';\nimport { Location } from '@angular/common';\nimport { TcCoreCommonFunctions } from '../common/tc-core-common-functions';\nimport { TcGeneralLandingPageConfigService } from '../services/tc-general-landing-page-config.service';\nimport { GeneralLandingPageConfig } from '../models/tc-general-landing-page-config';\n\n@Injectable()\nexport class GeneralLandingPageConfigResolver implements Resolve> {\n\n    DEFAULT_CONFIG_URL = 'assets/config//landingPages.json';\n    APP_ID_URL = TcCoreCommonFunctions.prepareUrlForStaticResource(this.location, 'assets/config/uiAppId.json');\n\n    private sandboxId: number;\n    public defaultLandingPageConfig: GeneralLandingPageConfig;\n    private uiAppId: string;\n\n    constructor(\n        private tcSharedState: TcSharedStateService, \n        private generalLandingPageConfigService: TcGeneralLandingPageConfigService,\n        private http: HttpClient, \n        private location: Location) { }\n    // note appConfigResolver will need sandboxId to create app config state record.\n    // So we expect this to have been set by caller (done by tc-liveapps-lib/laConfigResolver).\n\n    public setSandbox = (sandboxId: number) => {\n        this.sandboxId = sandboxId;\n    }\n\n    // can be used to load defaultAppConfig from a JSON config\n    private getDefaultAppConfig = () => {\n        return this.http.get(TcCoreCommonFunctions.prepareUrlForStaticResource(this.location, this.DEFAULT_CONFIG_URL.replace('', this.uiAppId)));\n    }\n\n    // loads uiAppId from json file in assets (appId.json)\n    private getAppId = (): Observable => {\n        return this.http.get(this.APP_ID_URL).pipe(\n            map(uiAppId => {\n                const uiAppIdConfig = new UiAppIdConfig().deserialize(uiAppId);\n                this.uiAppId = uiAppIdConfig.uiAppId;\n                return uiAppIdConfig;\n            }\n            )\n        );\n    }\n\n    resolve(): Observable {\n        const appConfig = this.getAppId().pipe(\n            switchMap(uiAppId => this.generalLandingPageConfigService.getGeneralLandingPageConfig(uiAppId.uiAppId, true, false)\n                .pipe(\n                    mergeMap(\n                        generalConfig => {\n                            if (generalConfig === undefined) {\n                                return this.getDefaultAppConfig().pipe(\n                                    flatMap(config => {\n                                        this.defaultLandingPageConfig = new GeneralLandingPageConfig().deserialize(config);\n                                        // this..uiAppId = this.uiAppId;\n                                        return this.generalLandingPageConfigService.createGeneralLandingPageConfig(\n                                            this.sandboxId,\n                                            this.uiAppId,\n                                            this.defaultLandingPageConfig)\n                                            .pipe(\n                                                flatMap(\n                                                    result => {\n                                                        const newAppConfig = this.defaultLandingPageConfig;\n                                                        newAppConfig.id = result;\n                                                        return this.generalLandingPageConfigService.updateGeneralLandingPageConfig(\n                                                            this.sandboxId,\n                                                            this.uiAppId,\n                                                            newAppConfig,\n                                                            result).pipe(\n                                                                flatMap(\n                                                                    // trigger a read to flush the cache since we changed it\n                                                                    updatedConf => {\n                                                                        return this.generalLandingPageConfigService.getGeneralLandingPageConfig(this.uiAppId, true, true).pipe(\n                                                                            map(\n                                                                                cachedConfig => {\n                                                                                    return cachedConfig;\n                                                                                }\n                                                                            )\n                                                                        );\n\n                                                                    }\n                                                                )\n                                                            );\n                                                        // return newAppConfig;\n                                                    })\n                                            );\n                                    })\n                                );\n                            } else {\n                                return of(generalConfig);\n                            }\n                        }\n                    )\n                )\n            )\n        )\n        return appConfig;\n    }\n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Group.html":{"url":"classes/Group.html","title":"class - Group","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Group\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/tc-login.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, type: string)\n                    \n                \n                        \n                            \n                                Defined in src/lib/models/tc-login.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Deserializable} from './deserializable';\n\nexport class Group {\n  constructor(public id: string,\n              public type: string\n  ) {\n  }\n}\n\nexport class Claim implements Deserializable {\n  email: string;\n  firstName: string;\n  id: string;\n  lastName: string;\n  sandboxes: Sandbox[];\n  subscriptionId: string;\n  username: string;\n  primaryProductionSandbox: Sandbox;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class Sandbox {\n  constructor(public groups: Group[],\n              public id: string,\n              public type: string,\n              public name: string,\n              public subscriptionId: string,\n              public ownerId: string,\n  ) {\n  }\n}\n\nexport class SandboxList {\n  sandboxes: Sandbox[];\n  deserialize(input: any): this {\n    this.sandboxes = [];\n    Object.assign(this.sandboxes, input);\n    return this;\n  }\n}\n\nexport class AccessToken implements Deserializable {\n  access_token: string;\n  token_type: string;\n  expires_in: number;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class AuthInfo implements Deserializable {\n  userName: string;\n  firstName: string;\n  lastName: string;\n  userId: string;\n  ts: number;\n  orgName: string;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class Subscription {\n  constructor(\n    public accountId: string,\n    public accountDisplayName: string,\n    public ownerName: string,\n    public loggedInUserRole: string,\n    public regions: string[]\n  ) {}\n}\n\nexport class Owner {\n  email: string;\n  firstName: string;\n  lastName: string;\n  role: string;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class AccountInfo {\n  accountDisplayName: string;\n  accountId: string;\n  loggedInUserRole: string;\n  ownerInfo: Owner;\n  regions: string[];\n}\n\nexport class AccountsInfo implements Deserializable {\n  accountInfos: AccountInfo[];\n  deserialize(input: any): this {\n    this.accountInfos = [];\n    Object.assign(this.accountInfos, input);\n    return this;\n  }\n}\n\nexport class LoginPrefill implements Deserializable {\n  emailId: string;\n  clientId: string;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/HighlightPipe.html":{"url":"pipes/HighlightPipe.html","title":"pipe - HighlightPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  HighlightPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/pipes/highlight.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        highlight\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(data: string, highlightText: string, option: string, caseSensitive: boolean, highlightStyleName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/pipes/highlight.pipe.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    highlightText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    option\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'Single-And-StartsWith-Match'\n                                    \n\n                                \n                                \n                                    caseSensitive\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                                \n                                    highlightStyleName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'search-highlight'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SafeHtml\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            MULTI_MATCH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Multi-Match'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/pipes/highlight.pipe.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            SINGLE_AND_STARTS_WITH_MATCH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Single-And-StartsWith-Match'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/pipes/highlight.pipe.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            SINGLE_MATCH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Single-Match'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/pipes/highlight.pipe.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport {SafeHtml} from '@angular/platform-browser';\n\n@Pipe({\n  name: 'highlight'\n})\nexport class HighlightPipe implements PipeTransform {\n\n// todo: from https://gist.github.com/adamrecsko/0f28f474eca63e0279455476cc11eca7\n// post by ankitgrover\n\n  /* use this for single match search */\n  static SINGLE_MATCH = 'Single-Match';\n  /* use this for single match search with a restriction that target should start with search string */\n  static SINGLE_AND_STARTS_WITH_MATCH = 'Single-And-StartsWith-Match';\n  /* use this for global search */\n  static MULTI_MATCH = 'Multi-Match';\n\n  transform(data: string,\n            highlightText: string,\n            option: string = 'Single-And-StartsWith-Match',\n            caseSensitive: boolean = false,\n            highlightStyleName: string = 'search-highlight'): SafeHtml {\n    if (highlightText && data && option) {\n      let regex: any = '';\n      const caseFlag: string = !caseSensitive ? 'i' : '';\n      switch (option) {\n        case 'Single-Match': {\n          regex = new RegExp(highlightText, caseFlag);\n          break;\n        }\n        case 'Single-And-StartsWith-Match': {\n          regex = new RegExp('^' + highlightText, caseFlag);\n          break;\n        }\n        case 'Multi-Match': {\n          regex = new RegExp(highlightText, 'g' + caseFlag);\n          break;\n        }\n        default: {\n          // default will be a global case-insensitive match\n          regex = new RegExp(highlightText, 'gi');\n        }\n      }\n      return data.replace(regex, (match) => `${match}`);\n\n    } else {\n      return data;\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LandingPageConfig.html":{"url":"classes/LandingPageConfig.html","title":"class - LandingPageConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LandingPageConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/tc-general-landing-page-config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backgroundURL\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                highlights\n                            \n                            \n                                    Public\n                                homeRoute\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                priority\n                            \n                            \n                                roles\n                            \n                            \n                                    Public\n                                subtitle\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backgroundURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-general-landing-page-config.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-general-landing-page-config.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            highlights\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LandingPageItemConfig[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-general-landing-page-config.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            homeRoute\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-general-landing-page-config.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-general-landing-page-config.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-general-landing-page-config.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-general-landing-page-config.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subtitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-general-landing-page-config.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-general-landing-page-config.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(input: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/tc-general-landing-page-config.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Deserializable } from './deserializable';\n\nexport class LandingPageItemConfig {\n    public title: string;\n    public content: string;\n    public iconURL: string;\n    deserialize(input: any) {\n        Object.assign(this, input);\n        return this;\n    }\n}\n\nexport class LandingPageConfig {\n    public key: string;\n    public description: string;\n    public title: string;\n    public subtitle: string;\n    public backgroundURL: string;\n    public homeRoute: string;\n    public highlights: LandingPageItemConfig[];\n    roles: string[];\n    priority: number;\n    deserialize(input: any) {\n        Object.assign(this, input);\n        return this;\n    }\n}\n\nexport class GeneralLandingPageConfig implements Deserializable {\n    id: string;\n    version: string;\n    landingPage: LandingPageConfig[];\n    deserialize(input: any) {\n        Object.assign(this, input);\n        return this;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LandingPageItemConfig.html":{"url":"classes/LandingPageItemConfig.html","title":"class - LandingPageItemConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LandingPageItemConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/tc-general-landing-page-config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                content\n                            \n                            \n                                    Public\n                                iconURL\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-general-landing-page-config.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-general-landing-page-config.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-general-landing-page-config.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(input: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/tc-general-landing-page-config.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Deserializable } from './deserializable';\n\nexport class LandingPageItemConfig {\n    public title: string;\n    public content: string;\n    public iconURL: string;\n    deserialize(input: any) {\n        Object.assign(this, input);\n        return this;\n    }\n}\n\nexport class LandingPageConfig {\n    public key: string;\n    public description: string;\n    public title: string;\n    public subtitle: string;\n    public backgroundURL: string;\n    public homeRoute: string;\n    public highlights: LandingPageItemConfig[];\n    roles: string[];\n    priority: number;\n    deserialize(input: any) {\n        Object.assign(this, input);\n        return this;\n    }\n}\n\nexport class GeneralLandingPageConfig implements Deserializable {\n    id: string;\n    version: string;\n    landingPage: LandingPageConfig[];\n    deserialize(input: any) {\n        Object.assign(this, input);\n        return this;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogService.html":{"url":"injectables/LogService.html","title":"injectable - LogService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/tc-logging.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                level\n                            \n                            \n                                logWithDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                fatal\n                            \n                            \n                                    Private\n                                formatParams\n                            \n                            \n                                    Private\n                                getLevelString\n                            \n                            \n                                info\n                            \n                            \n                                log\n                            \n                            \n                                    Private\n                                shouldLog\n                            \n                            \n                                warn\n                            \n                            \n                                    Private\n                                writeToLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(msg: string, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/tc-logging.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(msg: string, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/tc-logging.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fatal\n                        \n                        \n                    \n                \n            \n            \n                \nfatal(msg: string, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/tc-logging.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            formatParams\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    formatParams(params: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/tc-logging.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getLevelString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLevelString(level)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/tc-logging.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            info\n                        \n                        \n                    \n                \n            \n            \n                \ninfo(msg: string, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/tc-logging.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(msg: string, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/tc-logging.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            shouldLog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldLog(level: LogLevel)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/tc-logging.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(msg: string, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/tc-logging.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            writeToLog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeToLog(msg: string, level: LogLevel, params: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/tc-logging.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            level\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogLevel\n\n                        \n                    \n                    \n                        \n                            Default value : LogLevel.All\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/tc-logging.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logWithDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/tc-logging.service.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class LogService {\n\n  level: LogLevel = LogLevel.All;\n  logWithDate = true;\n\n  private writeToLog(msg: string,\n                     level: LogLevel,\n                     params: any[]) {\n    if (this.shouldLog(level)) {\n      let value = '';\n\n      // Build log string\n      if (this.logWithDate) {\n        value = new Date() + ' - ';\n      }\n      value += '[My Cloud Starter] [' + LogLevel[this.level] + '](' + this.getLevelString(level) + ')';\n      value += ' - Message: ' + msg;\n      if (params.length) {\n        value += ' - Extra Info: '\n          + this.formatParams(params);\n      }\n\n      // Log the value\n      console.log(value);\n    }\n  }\n\n  private shouldLog(level: LogLevel): boolean {\n    let ret = false;\n    if ((level >= this.level &&\n      level !== LogLevel.Off) ||\n      this.level === LogLevel.All) {\n      ret = true;\n    }\n    return ret;\n  }\n\n  private formatParams(params: any[]): string {\n    let ret: string = params.join(',');\n    // Is there at least one object in the array?\n    if (params.some(p => typeof p === 'object')) {\n      ret = '';\n      // Build comma-delimited string\n      for (const item of params) {\n        ret += JSON.stringify(item) + ',';\n      }\n    }\n    return ret;\n  }\n\n\n  debug(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Debug,\n      optionalParams);\n  }\n\n  info(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Info,\n      optionalParams);\n  }\n\n  warn(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Warn,\n      optionalParams);\n  }\n\n  error(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Error,\n      optionalParams);\n  }\n\n  fatal(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Fatal,\n      optionalParams);\n  }\n\n  log(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.All,\n      optionalParams);\n  }\n  private getLevelString(level) {\n    let re = '';\n    switch (level) {\n      case LogLevel.All: {\n        re = 'All';\n        break;\n      }\n      case LogLevel.Debug: {\n        re = 'Debug';\n        break;\n      }\n      case LogLevel.Error: {\n        re = 'Error';\n        break;\n      }\n      case LogLevel.Fatal: {\n        re = 'Fatal';\n        break;\n      }\n      case LogLevel.Info: {\n        re = 'Info';\n        break;\n      }\n      case LogLevel.Off: {\n        re = 'Off';\n        break;\n      }\n      case LogLevel.Warn: {\n        re = 'Warn';\n        break;\n      }\n      default: {\n        // statements;\n        break;\n      }\n    }\n    return re;\n\n  }\n}\n\nexport enum LogLevel {\n  All = 0,\n  Debug = 1,\n  Info = 2,\n  Warn = 3,\n  Error = 4,\n  Fatal = 5,\n  Off = 6\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginPrefill.html":{"url":"classes/LoginPrefill.html","title":"class - LoginPrefill","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginPrefill\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/tc-login.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Deserializable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clientId\n                            \n                            \n                                emailId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:111\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:110\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(input: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/tc-login.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Deserializable} from './deserializable';\n\nexport class Group {\n  constructor(public id: string,\n              public type: string\n  ) {\n  }\n}\n\nexport class Claim implements Deserializable {\n  email: string;\n  firstName: string;\n  id: string;\n  lastName: string;\n  sandboxes: Sandbox[];\n  subscriptionId: string;\n  username: string;\n  primaryProductionSandbox: Sandbox;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class Sandbox {\n  constructor(public groups: Group[],\n              public id: string,\n              public type: string,\n              public name: string,\n              public subscriptionId: string,\n              public ownerId: string,\n  ) {\n  }\n}\n\nexport class SandboxList {\n  sandboxes: Sandbox[];\n  deserialize(input: any): this {\n    this.sandboxes = [];\n    Object.assign(this.sandboxes, input);\n    return this;\n  }\n}\n\nexport class AccessToken implements Deserializable {\n  access_token: string;\n  token_type: string;\n  expires_in: number;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class AuthInfo implements Deserializable {\n  userName: string;\n  firstName: string;\n  lastName: string;\n  userId: string;\n  ts: number;\n  orgName: string;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class Subscription {\n  constructor(\n    public accountId: string,\n    public accountDisplayName: string,\n    public ownerName: string,\n    public loggedInUserRole: string,\n    public regions: string[]\n  ) {}\n}\n\nexport class Owner {\n  email: string;\n  firstName: string;\n  lastName: string;\n  role: string;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class AccountInfo {\n  accountDisplayName: string;\n  accountId: string;\n  loggedInUserRole: string;\n  ownerInfo: Owner;\n  regions: string[];\n}\n\nexport class AccountsInfo implements Deserializable {\n  accountInfos: AccountInfo[];\n  deserialize(input: any): this {\n    this.accountInfos = [];\n    Object.assign(this.accountInfos, input);\n    return this;\n  }\n}\n\nexport class LoginPrefill implements Deserializable {\n  emailId: string;\n  clientId: string;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoginPrefillResolver.html":{"url":"guards/LoginPrefillResolver.html","title":"guard - LoginPrefillResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoginPrefillResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/lib/resolvers/login-prefill.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getClientId\n                            \n                            \n                                    Private\n                                getEmail\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/resolvers/login-prefill.resolver.ts:9\n                            \n                        \n\n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/resolvers/login-prefill.resolver.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LoginPrefill\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {Resolve} from '@angular/router';\nimport { LoginPrefill } from '../models/tc-login';\n\nexport const EMAIL_ID_KEY = 'tcs-login-email-id';\nexport const CLIENT_ID_KEY = 'tcs-login-client-id';\n\n@Injectable()\nexport class LoginPrefillResolver implements Resolve {\n\n  constructor() {}\n\n  private getClientId = (): string => {\n    return localStorage.getItem(CLIENT_ID_KEY);\n  }\n\n  private getEmail = (): string => {\n    return localStorage.getItem(EMAIL_ID_KEY);\n  }\n\n  resolve(): LoginPrefill {\n    return new LoginPrefill().deserialize({ emailId: this.getEmail(), clientId: this.getClientId() } );\n  }\n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/MockingInterceptor.html":{"url":"interceptors/MockingInterceptor.html","title":"interceptor - MockingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  MockingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interceptors/mocking-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                MOCK_BASE_PATH\n                            \n                            \n                                sendRequest\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                            \n                                    Public\n                                readMockJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/lib/interceptors/mocking-interceptor.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/interceptors/mocking-interceptor.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            readMockJSON\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    readMockJSON(url)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/interceptors/mocking-interceptor.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MOCK_BASE_PATH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/assets/mocks'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/interceptors/mocking-interceptor.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendRequest\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/interceptors/mocking-interceptor.ts:122\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpRequest, HttpResponse, HttpInterceptor, HttpHandler, HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, onErrorResumeNext, throwError} from 'rxjs';\nimport {map, catchError, delay} from 'rxjs/operators';\n\n@Injectable()\nexport class MockingInterceptor implements HttpInterceptor {\n  MOCK_BASE_PATH = '/assets/mocks';\n\n  constructor(private http: HttpClient) {\n  }\n\n  public readMockJSON(url): Observable {\n    return this.http.get(url);\n  }\n\n  intercept(req: HttpRequest, next: HttpHandler) {\n\n    // save original request\n    const originalReq = req.clone();\n\n    // dont mock anything from assets folder\n    const urlparts = req.url.split('.');\n    const pathparts = urlparts[0].split('/');\n\n    if (pathparts[1] === 'assets') {\n      return this.sendRequest(originalReq, next);\n    }\n\n\n    // try and find a mock response\n    const resource = originalReq.url.split('?')[0];\n    const segments: string[] = resource.split('/');\n    const seg2: string[] = resource.split('/');\n    let path = this.MOCK_BASE_PATH;\n    // ignore the http/url parts if present\n    let responseType = 'json';\n    if (segments[0] === 'http:' || segments[0] === 'https:') {\n      segments.splice(0, 3);\n      // we are getting a webresource (will only work for text based resources like svg)\n      if (segments[0] === 'webresource') {\n        responseType = 'text';\n      }\n    } else {\n      // just remove the blank part\n      segments.splice(0, 1);\n    }\n    segments.splice(0, segments.length).forEach((seg) => {\n      path = path + '/' + seg;\n    });\n    if (responseType !== 'text') {\n      path = path + '.json';\n    } else {\n      path = path + '.txt';\n    }\n\n    let options = {};\n    if (responseType === 'text') {\n      options = { responseType: 'text' };\n    }\n    const httpRequest = new HttpRequest(\n      'GET',\n      path,\n      options\n    );\n    req = Object.assign(req, httpRequest);\n    req = req.clone();\n    return next.handle(req).pipe(\n      delay(100),\n      map(\n        data => {\n          let d = > data;\n          if (d.status === 200) {\n            // return the body of the cached response loaded from file\n            console.log(originalReq.url);\n            let mockedResponse: HttpResponse;\n            if (data['body']['mockedResponses']) {\n              // multi mocked response file\n              if (data['body']['mockedResponses'][originalReq.url]) {\n                data['body'] = data['body']['mockedResponses'][originalReq.url];\n                d = > data;\n                mockedResponse = new HttpResponse(d);\n              } else {\n                // no mock for this URL\n                // todo: there is a bug here that this does not trigger the real call\n                throwError('no mock for this url - no response sent');\n              }\n            } else {\n              // single mocked response file\n              mockedResponse = new HttpResponse(d);\n            }\n            return mockedResponse;\n          } else {\n            return data;\n          }\n        }\n      ),\n      catchError(\n        error => {\n          // no mock file so make real request\n          return this.sendRequest(originalReq, next);\n        }\n      )\n    );\n  }\n\n  sendRequest = (\n    req: HttpRequest,\n    next: HttpHandler): Observable> => {\n    return next.handle(req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/OnCreateDirective.html":{"url":"directives/OnCreateDirective.html","title":"directive - OnCreateDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  OnCreateDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/directives/on-create.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [tcOnCreate]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                idx\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                fireCreated\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/directives/on-create.directive.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        idx\n                    \n                \n                \n                    \n                        Type :         Number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/on-create.directive.ts:9\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        fireCreated\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/on-create.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/on-create.directive.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Directive({\n  selector: '[tcOnCreate]',\n  exportAs: 'onCreate'\n})\nexport class OnCreateDirective implements OnInit {\n  // @Output() created: EventEmitter = new EventEmitter();\n  @Input() idx: Number;\n  @Output() fireCreated: EventEmitter = new EventEmitter();\n\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.fireCreated.emit(this.idx);\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/OrderByDatePipe.html":{"url":"pipes/OrderByDatePipe.html","title":"pipe - OrderByDatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  OrderByDatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/pipes/order-by-date.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        orderByDate\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(array: any[], field: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/pipes/order-by-date.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    array\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    field\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'orderByDate'\n})\nexport class OrderByDatePipe implements PipeTransform {\n\n  transform(array: any[], field: string): any[] {\n    return array.sort(function(a, b) {\n        a = new Date(a[field]);\n        b = new Date(b[field]);\n        return a > b ? -1 : a \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Owner.html":{"url":"classes/Owner.html","title":"class - Owner","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Owner\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/tc-login.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:85\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(input: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/tc-login.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Deserializable} from './deserializable';\n\nexport class Group {\n  constructor(public id: string,\n              public type: string\n  ) {\n  }\n}\n\nexport class Claim implements Deserializable {\n  email: string;\n  firstName: string;\n  id: string;\n  lastName: string;\n  sandboxes: Sandbox[];\n  subscriptionId: string;\n  username: string;\n  primaryProductionSandbox: Sandbox;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class Sandbox {\n  constructor(public groups: Group[],\n              public id: string,\n              public type: string,\n              public name: string,\n              public subscriptionId: string,\n              public ownerId: string,\n  ) {\n  }\n}\n\nexport class SandboxList {\n  sandboxes: Sandbox[];\n  deserialize(input: any): this {\n    this.sandboxes = [];\n    Object.assign(this.sandboxes, input);\n    return this;\n  }\n}\n\nexport class AccessToken implements Deserializable {\n  access_token: string;\n  token_type: string;\n  expires_in: number;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class AuthInfo implements Deserializable {\n  userName: string;\n  firstName: string;\n  lastName: string;\n  userId: string;\n  ts: number;\n  orgName: string;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class Subscription {\n  constructor(\n    public accountId: string,\n    public accountDisplayName: string,\n    public ownerName: string,\n    public loggedInUserRole: string,\n    public regions: string[]\n  ) {}\n}\n\nexport class Owner {\n  email: string;\n  firstName: string;\n  lastName: string;\n  role: string;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class AccountInfo {\n  accountDisplayName: string;\n  accountId: string;\n  loggedInUserRole: string;\n  ownerInfo: Owner;\n  regions: string[];\n}\n\nexport class AccountsInfo implements Deserializable {\n  accountInfos: AccountInfo[];\n  deserialize(input: any): this {\n    this.accountInfos = [];\n    Object.assign(this.accountInfos, input);\n    return this;\n  }\n}\n\nexport class LoginPrefill implements Deserializable {\n  emailId: string;\n  clientId: string;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestCacheService.html":{"url":"injectables/RequestCacheService.html","title":"injectable - RequestCacheService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RequestCacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/request-cache.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(req: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/request-cache.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            put\n                        \n                        \n                    \n                \n            \n            \n                \nput(req: HttpRequest, response: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/request-cache.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/request-cache.service.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpResponse } from '@angular/common/http';\n\n// cache for an hour max\nconst maxAge = 3.6e+6;\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class RequestCacheService {\n  cache = new Map();\n\n  get(req: HttpRequest): HttpResponse | undefined {\n    const url = req.urlWithParams;\n    const cached = this.cache.get(url);\n\n    if (!cached) {\n      return undefined;\n    }\n\n    const isExpired = cached.lastRead , response: HttpResponse): void {\n    // console.log(JSON.stringify(response));\n    const url = req.url;\n    const entry = { url, response, lastRead: Date.now() };\n    this.cache.set(url, entry);\n\n    const expired = Date.now() - maxAge;\n    this.cache.forEach(expiredEntry => {\n      if (expiredEntry.lastRead \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ReversePipe.html":{"url":"pipes/ReversePipe.html","title":"pipe - ReversePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ReversePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/pipes/reverse.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        reverse\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any, args?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/pipes/reverse.pipe.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'reverse',\n  pure: false\n})\nexport class ReversePipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n      return value.slice().reverse();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleAttribute.html":{"url":"classes/RoleAttribute.html","title":"class - RoleAttribute","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleAttribute\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/tc-general-config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                configuration\n                            \n                            \n                                    Public\n                                display\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                imageUrl\n                            \n                            \n                                    Public\n                                welcome\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            configuration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-general-config.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            display\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-general-config.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-general-config.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-general-config.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imageUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-general-config.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            welcome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-general-config.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(input: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/tc-general-config.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Deserializable} from './deserializable';\n\nexport class RoleAttribute {\n  public id: string;\n  public group: string;\n  public display: string;\n  public welcome: string;\n  public imageUrl: string;\n  public configuration: boolean;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class GeneralConfig implements Deserializable {\n  id: string;\n  uiAppId: string;\n  browserTitle: string;\n  applicationTitle: string;\n  welcomeMessage: string;\n  displayName: boolean;\n  documentationUrl: string;\n  roles: RoleAttribute[];\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouteAction.html":{"url":"classes/RouteAction.html","title":"class - RouteAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouteAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/tc-routing-actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                action\n                            \n                            \n                                    Public\n                                context\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(action: string, context: any)\n                    \n                \n                        \n                            \n                                Defined in src/lib/models/tc-routing-actions.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            action\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-routing-actions.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-routing-actions.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RouteAction {\n  constructor(public action: string,\n              public context: any\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Sandbox.html":{"url":"classes/Sandbox.html","title":"class - Sandbox","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Sandbox\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/tc-login.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                groups\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                ownerId\n                            \n                            \n                                    Public\n                                subscriptionId\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(groups: Group[], id: string, type: string, name: string, subscriptionId: string, ownerId: string)\n                    \n                \n                        \n                            \n                                Defined in src/lib/models/tc-login.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        groups\n                                                  \n                                                        \n                                                                        Group[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        subscriptionId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ownerId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            groups\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Group[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ownerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subscriptionId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Deserializable} from './deserializable';\n\nexport class Group {\n  constructor(public id: string,\n              public type: string\n  ) {\n  }\n}\n\nexport class Claim implements Deserializable {\n  email: string;\n  firstName: string;\n  id: string;\n  lastName: string;\n  sandboxes: Sandbox[];\n  subscriptionId: string;\n  username: string;\n  primaryProductionSandbox: Sandbox;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class Sandbox {\n  constructor(public groups: Group[],\n              public id: string,\n              public type: string,\n              public name: string,\n              public subscriptionId: string,\n              public ownerId: string,\n  ) {\n  }\n}\n\nexport class SandboxList {\n  sandboxes: Sandbox[];\n  deserialize(input: any): this {\n    this.sandboxes = [];\n    Object.assign(this.sandboxes, input);\n    return this;\n  }\n}\n\nexport class AccessToken implements Deserializable {\n  access_token: string;\n  token_type: string;\n  expires_in: number;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class AuthInfo implements Deserializable {\n  userName: string;\n  firstName: string;\n  lastName: string;\n  userId: string;\n  ts: number;\n  orgName: string;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class Subscription {\n  constructor(\n    public accountId: string,\n    public accountDisplayName: string,\n    public ownerName: string,\n    public loggedInUserRole: string,\n    public regions: string[]\n  ) {}\n}\n\nexport class Owner {\n  email: string;\n  firstName: string;\n  lastName: string;\n  role: string;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class AccountInfo {\n  accountDisplayName: string;\n  accountId: string;\n  loggedInUserRole: string;\n  ownerInfo: Owner;\n  regions: string[];\n}\n\nexport class AccountsInfo implements Deserializable {\n  accountInfos: AccountInfo[];\n  deserialize(input: any): this {\n    this.accountInfos = [];\n    Object.assign(this.accountInfos, input);\n    return this;\n  }\n}\n\nexport class LoginPrefill implements Deserializable {\n  emailId: string;\n  clientId: string;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SandboxList.html":{"url":"classes/SandboxList.html","title":"class - SandboxList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SandboxList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/tc-login.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sandboxes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sandboxes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Sandbox[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:38\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(input: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/tc-login.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Deserializable} from './deserializable';\n\nexport class Group {\n  constructor(public id: string,\n              public type: string\n  ) {\n  }\n}\n\nexport class Claim implements Deserializable {\n  email: string;\n  firstName: string;\n  id: string;\n  lastName: string;\n  sandboxes: Sandbox[];\n  subscriptionId: string;\n  username: string;\n  primaryProductionSandbox: Sandbox;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class Sandbox {\n  constructor(public groups: Group[],\n              public id: string,\n              public type: string,\n              public name: string,\n              public subscriptionId: string,\n              public ownerId: string,\n  ) {\n  }\n}\n\nexport class SandboxList {\n  sandboxes: Sandbox[];\n  deserialize(input: any): this {\n    this.sandboxes = [];\n    Object.assign(this.sandboxes, input);\n    return this;\n  }\n}\n\nexport class AccessToken implements Deserializable {\n  access_token: string;\n  token_type: string;\n  expires_in: number;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class AuthInfo implements Deserializable {\n  userName: string;\n  firstName: string;\n  lastName: string;\n  userId: string;\n  ts: number;\n  orgName: string;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class Subscription {\n  constructor(\n    public accountId: string,\n    public accountDisplayName: string,\n    public ownerName: string,\n    public loggedInUserRole: string,\n    public regions: string[]\n  ) {}\n}\n\nexport class Owner {\n  email: string;\n  firstName: string;\n  lastName: string;\n  role: string;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class AccountInfo {\n  accountDisplayName: string;\n  accountId: string;\n  loggedInUserRole: string;\n  ownerInfo: Owner;\n  regions: string[];\n}\n\nexport class AccountsInfo implements Deserializable {\n  accountInfos: AccountInfo[];\n  deserialize(input: any): this {\n    this.accountInfos = [];\n    Object.assign(this.accountInfos, input);\n    return this;\n  }\n}\n\nexport class LoginPrefill implements Deserializable {\n  emailId: string;\n  clientId: string;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SharedStateContent.html":{"url":"classes/SharedStateContent.html","title":"class - SharedStateContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SharedStateContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/tc-shared-state.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Deserializable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                json\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            json\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-shared-state.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(input: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/tc-shared-state.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Deserializable} from './deserializable';\n\nexport class SharedStateContent implements Deserializable {\n  json: string;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class SharedStateEntry implements Deserializable {\n  attributes: string[];\n  content: SharedStateContent;\n  createdBy: string;\n  createdByName: string;\n  description: string;\n  id: string;\n  isAbandoned: boolean;\n  isOrphaned: boolean;\n  links: string[];\n  modifiedById: string;\n  modifiedByName: string;\n  modifiedDate: number;\n  name: string;\n  roles: string[];\n  sandboxId: number;\n  scope: string;\n  type: string;\n\n  deserialize(input: any): this {\n    this.attributes = input.attributes;\n    this.content = input.content;\n    this.createdBy = input.createdBy;\n    this.createdByName = input.createdByName;\n    this.description = input.description;\n    this.id = input.id;\n    this.isAbandoned = input.isAbandoned;\n    this.isOrphaned = input.isOrphaned;\n    this.links = input.links;\n    this.modifiedById = input.modifiedById;\n    this.modifiedDate = input.modifiedDate;\n    this.name = input.name;\n    this.roles = input.roles;\n    this.sandboxId = input.sandboxId;\n    this.scope = input.scope;\n    this.type = input.type;\n    this.content = input.json.content;\n    return this;\n  }\n}\n\nexport class SharedStateList implements Deserializable {\n  sharedStateEntries: SharedStateEntry[];\n  deserialize(input: any): this {\n    this.sharedStateEntries = [];\n    Object.assign(this.sharedStateEntries, input);\n    return this;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SharedStateEntry.html":{"url":"classes/SharedStateEntry.html","title":"class - SharedStateEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SharedStateEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/tc-shared-state.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Deserializable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                attributes\n                            \n                            \n                                content\n                            \n                            \n                                createdBy\n                            \n                            \n                                createdByName\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                isAbandoned\n                            \n                            \n                                isOrphaned\n                            \n                            \n                                links\n                            \n                            \n                                modifiedById\n                            \n                            \n                                modifiedByName\n                            \n                            \n                                modifiedDate\n                            \n                            \n                                name\n                            \n                            \n                                roles\n                            \n                            \n                                sandboxId\n                            \n                            \n                                scope\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attributes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-shared-state.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SharedStateContent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-shared-state.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-shared-state.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdByName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-shared-state.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-shared-state.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-shared-state.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAbandoned\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-shared-state.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOrphaned\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-shared-state.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            links\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-shared-state.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modifiedById\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-shared-state.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modifiedByName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-shared-state.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modifiedDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-shared-state.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-shared-state.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-shared-state.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sandboxId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-shared-state.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scope\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-shared-state.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-shared-state.ts:28\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(input: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/tc-shared-state.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Deserializable} from './deserializable';\n\nexport class SharedStateContent implements Deserializable {\n  json: string;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class SharedStateEntry implements Deserializable {\n  attributes: string[];\n  content: SharedStateContent;\n  createdBy: string;\n  createdByName: string;\n  description: string;\n  id: string;\n  isAbandoned: boolean;\n  isOrphaned: boolean;\n  links: string[];\n  modifiedById: string;\n  modifiedByName: string;\n  modifiedDate: number;\n  name: string;\n  roles: string[];\n  sandboxId: number;\n  scope: string;\n  type: string;\n\n  deserialize(input: any): this {\n    this.attributes = input.attributes;\n    this.content = input.content;\n    this.createdBy = input.createdBy;\n    this.createdByName = input.createdByName;\n    this.description = input.description;\n    this.id = input.id;\n    this.isAbandoned = input.isAbandoned;\n    this.isOrphaned = input.isOrphaned;\n    this.links = input.links;\n    this.modifiedById = input.modifiedById;\n    this.modifiedDate = input.modifiedDate;\n    this.name = input.name;\n    this.roles = input.roles;\n    this.sandboxId = input.sandboxId;\n    this.scope = input.scope;\n    this.type = input.type;\n    this.content = input.json.content;\n    return this;\n  }\n}\n\nexport class SharedStateList implements Deserializable {\n  sharedStateEntries: SharedStateEntry[];\n  deserialize(input: any): this {\n    this.sharedStateEntries = [];\n    Object.assign(this.sharedStateEntries, input);\n    return this;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SharedStateList.html":{"url":"classes/SharedStateList.html","title":"class - SharedStateList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SharedStateList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/tc-shared-state.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Deserializable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sharedStateEntries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sharedStateEntries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SharedStateEntry[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-shared-state.ts:53\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(input: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/tc-shared-state.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Deserializable} from './deserializable';\n\nexport class SharedStateContent implements Deserializable {\n  json: string;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class SharedStateEntry implements Deserializable {\n  attributes: string[];\n  content: SharedStateContent;\n  createdBy: string;\n  createdByName: string;\n  description: string;\n  id: string;\n  isAbandoned: boolean;\n  isOrphaned: boolean;\n  links: string[];\n  modifiedById: string;\n  modifiedByName: string;\n  modifiedDate: number;\n  name: string;\n  roles: string[];\n  sandboxId: number;\n  scope: string;\n  type: string;\n\n  deserialize(input: any): this {\n    this.attributes = input.attributes;\n    this.content = input.content;\n    this.createdBy = input.createdBy;\n    this.createdByName = input.createdByName;\n    this.description = input.description;\n    this.id = input.id;\n    this.isAbandoned = input.isAbandoned;\n    this.isOrphaned = input.isOrphaned;\n    this.links = input.links;\n    this.modifiedById = input.modifiedById;\n    this.modifiedDate = input.modifiedDate;\n    this.name = input.name;\n    this.roles = input.roles;\n    this.sandboxId = input.sandboxId;\n    this.scope = input.scope;\n    this.type = input.type;\n    this.content = input.json.content;\n    return this;\n  }\n}\n\nexport class SharedStateList implements Deserializable {\n  sharedStateEntries: SharedStateEntry[];\n  deserialize(input: any): this {\n    this.sharedStateEntries = [];\n    Object.assign(this.sharedStateEntries, input);\n    return this;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Subscription.html":{"url":"classes/Subscription.html","title":"class - Subscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Subscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/tc-login.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                accountDisplayName\n                            \n                            \n                                    Public\n                                accountId\n                            \n                            \n                                    Public\n                                loggedInUserRole\n                            \n                            \n                                    Public\n                                ownerName\n                            \n                            \n                                    Public\n                                regions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accountId: string, accountDisplayName: string, ownerName: string, loggedInUserRole: string, regions: string[])\n                    \n                \n                        \n                            \n                                Defined in src/lib/models/tc-login.ts:71\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountDisplayName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ownerName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loggedInUserRole\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        regions\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            accountDisplayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            accountId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loggedInUserRole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ownerName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            regions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-login.ts:77\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Deserializable} from './deserializable';\n\nexport class Group {\n  constructor(public id: string,\n              public type: string\n  ) {\n  }\n}\n\nexport class Claim implements Deserializable {\n  email: string;\n  firstName: string;\n  id: string;\n  lastName: string;\n  sandboxes: Sandbox[];\n  subscriptionId: string;\n  username: string;\n  primaryProductionSandbox: Sandbox;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class Sandbox {\n  constructor(public groups: Group[],\n              public id: string,\n              public type: string,\n              public name: string,\n              public subscriptionId: string,\n              public ownerId: string,\n  ) {\n  }\n}\n\nexport class SandboxList {\n  sandboxes: Sandbox[];\n  deserialize(input: any): this {\n    this.sandboxes = [];\n    Object.assign(this.sandboxes, input);\n    return this;\n  }\n}\n\nexport class AccessToken implements Deserializable {\n  access_token: string;\n  token_type: string;\n  expires_in: number;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class AuthInfo implements Deserializable {\n  userName: string;\n  firstName: string;\n  lastName: string;\n  userId: string;\n  ts: number;\n  orgName: string;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class Subscription {\n  constructor(\n    public accountId: string,\n    public accountDisplayName: string,\n    public ownerName: string,\n    public loggedInUserRole: string,\n    public regions: string[]\n  ) {}\n}\n\nexport class Owner {\n  email: string;\n  firstName: string;\n  lastName: string;\n  role: string;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class AccountInfo {\n  accountDisplayName: string;\n  accountId: string;\n  loggedInUserRole: string;\n  ownerInfo: Owner;\n  regions: string[];\n}\n\nexport class AccountsInfo implements Deserializable {\n  accountInfos: AccountInfo[];\n  deserialize(input: any): this {\n    this.accountInfos = [];\n    Object.assign(this.accountInfos, input);\n    return this;\n  }\n}\n\nexport class LoginPrefill implements Deserializable {\n  emailId: string;\n  clientId: string;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TcButtonsHelperService.html":{"url":"injectables/TcButtonsHelperService.html","title":"injectable - TcButtonsHelperService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TcButtonsHelperService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/tc-buttons-helper.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addButtons\n                            \n                            \n                                    Public\n                                createButton\n                            \n                            \n                                    Public\n                                removeButtons\n                            \n                            \n                                    Public\n                                updateButtons\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/tc-buttons-helper.service.ts:7\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addButtons\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/tc-buttons-helper.service.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/tc-buttons-helper.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeButtons\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/tc-buttons-helper.service.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateButtons\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/tc-buttons-helper.service.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {ToolbarButton} from '../models/tc-widget-header';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TcButtonsHelperService {\n\n  constructor() { }\n\n  public createButton = (\n    id: string, icon: string, filled: boolean, tooltip: string, visible: boolean, enabled: boolean): ToolbarButton => {\n    const newButton = new ToolbarButton().deserialize(\n      {\n        id: id,\n        icon: icon,\n        filled: filled,\n        tooltip: tooltip,\n        visible: visible,\n        enabled: enabled\n      }\n    );\n    return newButton;\n  }\n\n  public updateButtons = (updatedToolbarButtons: ToolbarButton[], toolbarButtons: ToolbarButton[]): ToolbarButton[] => {\n    updatedToolbarButtons.forEach( updatedButton => {\n      const idx = toolbarButtons.findIndex(item => item.id === updatedButton.id);\n      if (idx > -1) {\n        toolbarButtons[idx] = updatedButton;\n      } else {\n        // no existing button so add it\n        toolbarButtons.push(updatedButton);\n      }\n    });\n    return toolbarButtons;\n  }\n\n  public addButtons = (buttons: ToolbarButton[], toolbarButtons: ToolbarButton[]): ToolbarButton[] => {\n    buttons.forEach(button => {\n      toolbarButtons.push(button);\n    });\n    return toolbarButtons;\n  }\n\n  public removeButtons = (buttons: ToolbarButton[], toolbarButtons: ToolbarButton[]): ToolbarButton[] => {\n    buttons.forEach(button => {\n      const idx = toolbarButtons.findIndex(item => item.id === button.id);\n      toolbarButtons.splice(idx, 1);\n    });\n    return toolbarButtons;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcCoreCommonFunctions.html":{"url":"classes/TcCoreCommonFunctions.html","title":"class - TcCoreCommonFunctions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcCoreCommonFunctions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/tc-core-common-functions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                camelize\n                            \n                            \n                                    Static\n                                prepareUrlForNonStaticResource\n                            \n                            \n                                    Static\n                                prepareUrlForStaticResource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                camelCaseToWords\n                            \n                            \n                                    Static\n                                convertToJSON\n                            \n                            \n                                    Static\n                                escapeString\n                            \n                            \n                                    Static\n                                fileSizeToHuman\n                            \n                            \n                                    Static\n                                transposeArray\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            camelize\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/common/tc-core-common-functions.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            prepareUrlForNonStaticResource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/common/tc-core-common-functions.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            prepareUrlForStaticResource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/common/tc-core-common-functions.ts:74\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            camelCaseToWords\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    camelCaseToWords(str)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/common/tc-core-common-functions.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            convertToJSON\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertToJSON(array)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/common/tc-core-common-functions.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    array\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            escapeString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    escapeString(text)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/common/tc-core-common-functions.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            fileSizeToHuman\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fileSizeToHuman(size)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/common/tc-core-common-functions.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    size\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            transposeArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transposeArray(array, arrayLength)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/common/tc-core-common-functions.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    array\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    arrayLength\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {HashLocationStrategy, Location} from '@angular/common';\n\n// @dynamic\nexport class TcCoreCommonFunctions {\n\n\n  public static escapeString(text) {\n    return text.replace(/\"/g, '\\\"');\n  }\n\n  public static fileSizeToHuman(size) {\n    const e = (Math.log(size) / Math.log(1e3)) | 0;\n    return +(size / Math.pow(1e3, e)).toFixed(2) + ' ' + ('kMGTPEZY'[e - 1] || '') + 'B';\n  }\n\n  public static camelCaseToWords(str) {\n\n    const re =  str.replace(/([a-z])([A-Z])/g, '$1 $2')\n      .replace(/([A-Z])([a-z])/g, ' $1$2')\n      .replace(/\\ +/g, ' ');\n    return re;\n  }\n\n\n  public static convertToJSON(array) {\n    const objArray = [];\n    for (let i = 1; i  {\n    let newStr = '';\n    let newArr = [];\n\n    if (str.indexOf('-') !== -1) {\n      newArr = str.split('-');\n      for (let i = 0; i  {\n    // @ts-ignore\n    if (location._platformStrategy instanceof HashLocationStrategy) {\n      return str;\n    } else {\n      return str;\n    }\n  }\n\n  public static prepareUrlForStaticResource = (location: Location, str: string): string => {\n    // @ts-ignore\n    if (location._platformStrategy instanceof HashLocationStrategy) {\n      return str;\n    } else {\n      return location.prepareExternalUrl(str);\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TcCoreLibModule.html":{"url":"modules/TcCoreLibModule.html","title":"module - TcCoreLibModule","body":"\n                   \n\n\n\n\n    Modules\n    TcCoreLibModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TcCoreLibModule\n\n\n\ncluster_TcCoreLibModule_declarations\n\n\n\ncluster_TcCoreLibModule_exports\n\n\n\ncluster_TcCoreLibModule_providers\n\n\n\n\nDurationSincePipe\n\nDurationSincePipe\n\n\n\nTcCoreLibModule\n\nTcCoreLibModule\n\nTcCoreLibModule -->\n\nDurationSincePipe->TcCoreLibModule\n\n\n\n\n\nEllipsisPipe\n\nEllipsisPipe\n\nTcCoreLibModule -->\n\nEllipsisPipe->TcCoreLibModule\n\n\n\n\n\nHighlightPipe\n\nHighlightPipe\n\nTcCoreLibModule -->\n\nHighlightPipe->TcCoreLibModule\n\n\n\n\n\nOnCreateDirective\n\nOnCreateDirective\n\nTcCoreLibModule -->\n\nOnCreateDirective->TcCoreLibModule\n\n\n\n\n\nOrderByDatePipe\n\nOrderByDatePipe\n\nTcCoreLibModule -->\n\nOrderByDatePipe->TcCoreLibModule\n\n\n\n\n\nReversePipe\n\nReversePipe\n\nTcCoreLibModule -->\n\nReversePipe->TcCoreLibModule\n\n\n\n\n\nTibcoCloudConfigurationComponent\n\nTibcoCloudConfigurationComponent\n\nTcCoreLibModule -->\n\nTibcoCloudConfigurationComponent->TcCoreLibModule\n\n\n\n\n\nTibcoCloudErrorComponent\n\nTibcoCloudErrorComponent\n\nTcCoreLibModule -->\n\nTibcoCloudErrorComponent->TcCoreLibModule\n\n\n\n\n\nTibcoCloudLoginComponent\n\nTibcoCloudLoginComponent\n\nTcCoreLibModule -->\n\nTibcoCloudLoginComponent->TcCoreLibModule\n\n\n\n\n\nTibcoCloudMenuBarComponent\n\nTibcoCloudMenuBarComponent\n\nTcCoreLibModule -->\n\nTibcoCloudMenuBarComponent->TcCoreLibModule\n\n\n\n\n\nTibcoCloudMultipleSubscriptionComponent\n\nTibcoCloudMultipleSubscriptionComponent\n\nTcCoreLibModule -->\n\nTibcoCloudMultipleSubscriptionComponent->TcCoreLibModule\n\n\n\n\n\nTibcoCloudNavbarComponent\n\nTibcoCloudNavbarComponent\n\nTcCoreLibModule -->\n\nTibcoCloudNavbarComponent->TcCoreLibModule\n\n\n\n\n\nTibcoCloudNewElementComponent\n\nTibcoCloudNewElementComponent\n\nTcCoreLibModule -->\n\nTibcoCloudNewElementComponent->TcCoreLibModule\n\n\n\n\n\nTibcoCloudSelectTableComponent\n\nTibcoCloudSelectTableComponent\n\nTcCoreLibModule -->\n\nTibcoCloudSelectTableComponent->TcCoreLibModule\n\n\n\n\n\nTibcoCloudSettingLandingComponent\n\nTibcoCloudSettingLandingComponent\n\nTcCoreLibModule -->\n\nTibcoCloudSettingLandingComponent->TcCoreLibModule\n\n\n\n\n\nTibcoCloudSettingMenuEntryComponent\n\nTibcoCloudSettingMenuEntryComponent\n\nTcCoreLibModule -->\n\nTibcoCloudSettingMenuEntryComponent->TcCoreLibModule\n\n\n\n\n\nTibcoCloudSettingsGeneralComponent\n\nTibcoCloudSettingsGeneralComponent\n\nTcCoreLibModule -->\n\nTibcoCloudSettingsGeneralComponent->TcCoreLibModule\n\n\n\n\n\nTibcoCloudSplashScreenComponent\n\nTibcoCloudSplashScreenComponent\n\nTcCoreLibModule -->\n\nTibcoCloudSplashScreenComponent->TcCoreLibModule\n\n\n\n\n\nTibcoCloudTableComponent\n\nTibcoCloudTableComponent\n\nTcCoreLibModule -->\n\nTibcoCloudTableComponent->TcCoreLibModule\n\n\n\n\n\nTibcoCloudWidgetHeaderComponent\n\nTibcoCloudWidgetHeaderComponent\n\nTcCoreLibModule -->\n\nTibcoCloudWidgetHeaderComponent->TcCoreLibModule\n\n\n\n\n\nDurationSincePipe \n\nDurationSincePipe \n\nDurationSincePipe  -->\n\nTcCoreLibModule->DurationSincePipe \n\n\n\n\n\nEllipsisPipe \n\nEllipsisPipe \n\nEllipsisPipe  -->\n\nTcCoreLibModule->EllipsisPipe \n\n\n\n\n\nHighlightPipe \n\nHighlightPipe \n\nHighlightPipe  -->\n\nTcCoreLibModule->HighlightPipe \n\n\n\n\n\nOnCreateDirective \n\nOnCreateDirective \n\nOnCreateDirective  -->\n\nTcCoreLibModule->OnCreateDirective \n\n\n\n\n\nOrderByDatePipe \n\nOrderByDatePipe \n\nOrderByDatePipe  -->\n\nTcCoreLibModule->OrderByDatePipe \n\n\n\n\n\nReversePipe \n\nReversePipe \n\nReversePipe  -->\n\nTcCoreLibModule->ReversePipe \n\n\n\n\n\nTibcoCloudConfigurationComponent \n\nTibcoCloudConfigurationComponent \n\nTibcoCloudConfigurationComponent  -->\n\nTcCoreLibModule->TibcoCloudConfigurationComponent \n\n\n\n\n\nTibcoCloudErrorComponent \n\nTibcoCloudErrorComponent \n\nTibcoCloudErrorComponent  -->\n\nTcCoreLibModule->TibcoCloudErrorComponent \n\n\n\n\n\nTibcoCloudLoginComponent \n\nTibcoCloudLoginComponent \n\nTibcoCloudLoginComponent  -->\n\nTcCoreLibModule->TibcoCloudLoginComponent \n\n\n\n\n\nTibcoCloudMenuBarComponent \n\nTibcoCloudMenuBarComponent \n\nTibcoCloudMenuBarComponent  -->\n\nTcCoreLibModule->TibcoCloudMenuBarComponent \n\n\n\n\n\nTibcoCloudMultipleSubscriptionComponent \n\nTibcoCloudMultipleSubscriptionComponent \n\nTibcoCloudMultipleSubscriptionComponent  -->\n\nTcCoreLibModule->TibcoCloudMultipleSubscriptionComponent \n\n\n\n\n\nTibcoCloudNavbarComponent \n\nTibcoCloudNavbarComponent \n\nTibcoCloudNavbarComponent  -->\n\nTcCoreLibModule->TibcoCloudNavbarComponent \n\n\n\n\n\nTibcoCloudNewElementComponent \n\nTibcoCloudNewElementComponent \n\nTibcoCloudNewElementComponent  -->\n\nTcCoreLibModule->TibcoCloudNewElementComponent \n\n\n\n\n\nTibcoCloudSelectTableComponent \n\nTibcoCloudSelectTableComponent \n\nTibcoCloudSelectTableComponent  -->\n\nTcCoreLibModule->TibcoCloudSelectTableComponent \n\n\n\n\n\nTibcoCloudSettingMenuEntryComponent \n\nTibcoCloudSettingMenuEntryComponent \n\nTibcoCloudSettingMenuEntryComponent  -->\n\nTcCoreLibModule->TibcoCloudSettingMenuEntryComponent \n\n\n\n\n\nTibcoCloudSettingsGeneralComponent \n\nTibcoCloudSettingsGeneralComponent \n\nTibcoCloudSettingsGeneralComponent  -->\n\nTcCoreLibModule->TibcoCloudSettingsGeneralComponent \n\n\n\n\n\nTibcoCloudSplashScreenComponent \n\nTibcoCloudSplashScreenComponent \n\nTibcoCloudSplashScreenComponent  -->\n\nTcCoreLibModule->TibcoCloudSplashScreenComponent \n\n\n\n\n\nTibcoCloudTableComponent \n\nTibcoCloudTableComponent \n\nTibcoCloudTableComponent  -->\n\nTcCoreLibModule->TibcoCloudTableComponent \n\n\n\n\n\nTibcoCloudWidgetHeaderComponent \n\nTibcoCloudWidgetHeaderComponent \n\nTibcoCloudWidgetHeaderComponent  -->\n\nTcCoreLibModule->TibcoCloudWidgetHeaderComponent \n\n\n\n\n\nAuthErrorInterceptor\n\nAuthErrorInterceptor\n\nTcCoreLibModule -->\n\nAuthErrorInterceptor->TcCoreLibModule\n\n\n\n\n\nCachingInterceptor\n\nCachingInterceptor\n\nTcCoreLibModule -->\n\nCachingInterceptor->TcCoreLibModule\n\n\n\n\n\nRequestCacheService\n\nRequestCacheService\n\nTcCoreLibModule -->\n\nRequestCacheService->TcCoreLibModule\n\n\n\n\n\nTcButtonsHelperService\n\nTcButtonsHelperService\n\nTcCoreLibModule -->\n\nTcButtonsHelperService->TcCoreLibModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/tc-core-lib.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DurationSincePipe\n                        \n                        \n                            EllipsisPipe\n                        \n                        \n                            HighlightPipe\n                        \n                        \n                            OnCreateDirective\n                        \n                        \n                            OrderByDatePipe\n                        \n                        \n                            ReversePipe\n                        \n                        \n                            TibcoCloudConfigurationComponent\n                        \n                        \n                            TibcoCloudErrorComponent\n                        \n                        \n                            TibcoCloudLoginComponent\n                        \n                        \n                            TibcoCloudMenuBarComponent\n                        \n                        \n                            TibcoCloudMultipleSubscriptionComponent\n                        \n                        \n                            TibcoCloudNavbarComponent\n                        \n                        \n                            TibcoCloudNewElementComponent\n                        \n                        \n                            TibcoCloudSelectTableComponent\n                        \n                        \n                            TibcoCloudSettingLandingComponent\n                        \n                        \n                            TibcoCloudSettingMenuEntryComponent\n                        \n                        \n                            TibcoCloudSettingsGeneralComponent\n                        \n                        \n                            TibcoCloudSplashScreenComponent\n                        \n                        \n                            TibcoCloudTableComponent\n                        \n                        \n                            TibcoCloudWidgetHeaderComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            TibcoCloudNewElementComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthErrorInterceptor\n                        \n                        \n                            CachingInterceptor\n                        \n                        \n                            RequestCacheService\n                        \n                        \n                            TcButtonsHelperService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DurationSincePipe\n                        \n                        \n                            EllipsisPipe\n                        \n                        \n                            HighlightPipe\n                        \n                        \n                            OnCreateDirective\n                        \n                        \n                            OrderByDatePipe\n                        \n                        \n                            ReversePipe\n                        \n                        \n                            TibcoCloudConfigurationComponent\n                        \n                        \n                            TibcoCloudErrorComponent\n                        \n                        \n                            TibcoCloudLoginComponent\n                        \n                        \n                            TibcoCloudMenuBarComponent\n                        \n                        \n                            TibcoCloudMultipleSubscriptionComponent\n                        \n                        \n                            TibcoCloudNavbarComponent\n                        \n                        \n                            TibcoCloudNewElementComponent\n                        \n                        \n                            TibcoCloudSelectTableComponent\n                        \n                        \n                            TibcoCloudSettingMenuEntryComponent\n                        \n                        \n                            TibcoCloudSettingsGeneralComponent\n                        \n                        \n                            TibcoCloudSplashScreenComponent\n                        \n                        \n                            TibcoCloudTableComponent\n                        \n                        \n                            TibcoCloudWidgetHeaderComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tc-core-lib.module.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadNavbarJS\n                        \n                        \n                    \n                \n            \n            \n                \nloadNavbarJS()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tc-core-lib.module.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {TibcoCloudNavbarComponent} from './components/tibco-cloud-navbar/tibco-cloud-navbar.component';\nimport {\n  TibcoCloudMultipleSubscriptionComponent\n} from './components/tibco-cloud-multiple-subscription/tibco-cloud-multiple-subscription.component';\nimport {TibcoCloudLoginComponent} from './components/tibco-cloud-login/tibco-cloud-login.component';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {BrowserModule, DomSanitizer} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {\n  MatButtonModule, MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatDialogModule, MatExpansionModule,\n  MatFormFieldModule,\n  MatIconModule, MatIconRegistry,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatOptionModule,\n  MatPaginatorModule,\n  MatSelectModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule, MatToolbarModule,\n  MatTooltipModule\n} from '@angular/material';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {TcSharedStateService} from './services/tc-shared-state.service';\nimport {RequestCacheService} from './services/request-cache.service';\nimport {CachingInterceptor} from './interceptors/caching-interceptor';\nimport {AuthGuard} from './guards/auth.guard';\nimport {TcCoreCommonFunctions} from './common/tc-core-common-functions';\nimport {AuthErrorInterceptor} from './interceptors/authentication-error-interceptor';\nimport {EllipsisPipe} from './pipes/ellipsis.pipe';\nimport {DurationSincePipe} from './pipes/duration-since.pipe';\nimport {HighlightPipe} from './pipes/highlight.pipe';\nimport {OrderByDatePipe} from './pipes/order-by-date.pipe';\nimport {ReversePipe} from './pipes/reverse.pipe';\nimport { TibcoCloudWidgetHeaderComponent } from './components/tibco-cloud-widget-header/tibco-cloud-widget-header.component';\nimport { TibcoCloudMenuBarComponent } from './components/tibco-cloud-menu-bar/tibco-cloud-menu-bar.component';\nimport {TcButtonsHelperService} from './services/tc-buttons-helper.service';\nimport {TibcoCloudErrorComponent} from './components/tibco-cloud-error/tibco-cloud-error.component';\nimport { OnCreateDirective } from './directives/on-create.directive';\nimport {TcGeneralConfigService} from './services/tc-general-config.service';\nimport {TibcoCloudTableComponent} from './components/tibco-cloud-table/tibco-cloud-table.component';\nimport { TibcoCloudSelectTableComponent } from './components/tibco-cloud-select-table/tibco-cloud-select-table.component';\nimport {TibcoCloudSettingMenuEntryComponent} from './components/tibco-cloud-setting-menu-entry/tibco-cloud-setting-menu-entry.component';\nimport {TibcoCloudSettingsGeneralComponent} from './components/tibco-cloud-settings-general/tibco-cloud-settings-general.component';\nimport { TibcoCloudConfigurationComponent } from './components/tibco-cloud-configuration/tibco-cloud-configuration.component';\nimport {RouterModule} from '@angular/router';\nimport {TibcoCloudSplashScreenComponent} from './components/tibco-cloud-splash-screen/tibco-cloud-splash-screen.component';\nimport {CommonModule, Location} from '@angular/common';\nimport { TibcoCloudSettingLandingComponent } from './components/tibco-cloud-setting-landing/tibco-cloud-setting-landing.component';\nimport { TibcoCloudNewElementComponent } from './components/tibco-cloud-new-element/tibco-cloud-new-element.component';\n\nexport const TC_NAVBAR_URL = { url: 'https://account.cloud.tibco.com/tsc-ws-content/tsc-universal-header/globalNavbar.js', type: 'application/javascript' };\n\n@NgModule({\n  declarations: [\n    TibcoCloudNavbarComponent,\n    TibcoCloudLoginComponent,\n    TibcoCloudMultipleSubscriptionComponent,\n    EllipsisPipe,\n    DurationSincePipe,\n    HighlightPipe,\n    OrderByDatePipe,\n    ReversePipe,\n    TibcoCloudWidgetHeaderComponent,\n    TibcoCloudMenuBarComponent,\n    TibcoCloudErrorComponent,\n    OnCreateDirective,\n    TibcoCloudTableComponent,\n    TibcoCloudSelectTableComponent,\n    TibcoCloudSettingMenuEntryComponent,\n    TibcoCloudSettingsGeneralComponent,\n    TibcoCloudConfigurationComponent,\n    TibcoCloudSplashScreenComponent,\n    TibcoCloudSettingLandingComponent,\n    TibcoCloudNewElementComponent\n  ],\n  imports: [\n    RouterModule,\n    HttpClientModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatListModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatCardModule,\n    MatTooltipModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatListModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatCardModule,\n    MatTooltipModule,\n    MatTabsModule,\n    MatButtonToggleModule,\n    FormsModule,\n    FlexLayoutModule,\n    ScrollingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatSortModule,\n    MatTableModule,\n    MatPaginatorModule,\n    CommonModule\n  ],\n  exports: [\n    TibcoCloudNavbarComponent,\n    TibcoCloudLoginComponent,\n    TibcoCloudMultipleSubscriptionComponent,\n    TibcoCloudMenuBarComponent,\n    EllipsisPipe,\n    DurationSincePipe,\n    HighlightPipe,\n    OrderByDatePipe,\n    ReversePipe,\n    TibcoCloudWidgetHeaderComponent,\n    TibcoCloudErrorComponent,\n    OnCreateDirective,\n    TibcoCloudTableComponent,\n    TibcoCloudSelectTableComponent,\n    TibcoCloudSettingMenuEntryComponent,\n    TibcoCloudSettingsGeneralComponent,\n    TibcoCloudConfigurationComponent,\n    TibcoCloudSplashScreenComponent,\n    TibcoCloudNewElementComponent\n  ],\n  providers: [\n    RequestCacheService,\n    TcButtonsHelperService,\n    AuthGuard,\n    // comment this line to disable the CachingInterceptor\n    { provide: HTTP_INTERCEPTORS, useClass: CachingInterceptor, multi: true },\n    // error handling interceptor\n    { provide: HTTP_INTERCEPTORS, useClass: AuthErrorInterceptor, multi: true }\n    // uncomment this line to use the mock service interceptor\n    // { provide: HTTP_INTERCEPTORS, useClass: MockingInterceptor, multi: true }\n  ],\n  entryComponents: [ TibcoCloudNewElementComponent ]\n})\n\nexport class TcCoreLibModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TcCoreLibModule,\n      providers: [ TcSharedStateService, TcGeneralConfigService ]\n    };\n  }\n  constructor() {\n    this.loadNavbarJS();\n  }\n\n  loadNavbarJS() {\n    const jsUrls = [\n      TC_NAVBAR_URL\n    ];\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TcGeneralConfigService.html":{"url":"injectables/TcGeneralConfigService.html","title":"injectable - TcGeneralConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TcGeneralConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/tc-general-config.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createGeneralConfig\n                            \n                            \n                                    Public\n                                getGeneralConfig\n                            \n                            \n                                    Public\n                                updateGeneralConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(location: Location, sharedStateService: TcSharedStateService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/tc-general-config.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sharedStateService\n                                                  \n                                                        \n                                                                        TcSharedStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createGeneralConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGeneralConfig(sandboxId: number, uiAppId: string, generalConfig: GeneralConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/tc-general-config.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sandboxId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uiAppId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    generalConfig\n                                    \n                                                GeneralConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGeneralConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGeneralConfig(uiAppId: string, useCache: boolean, flushCache: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/tc-general-config.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uiAppId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    useCache\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    flushCache\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateGeneralConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGeneralConfig(sandboxId: number, uiAppId: string, generalConfig: GeneralConfig, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/tc-general-config.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sandboxId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uiAppId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    generalConfig\n                                    \n                                                GeneralConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {SharedStateContent, SharedStateEntry, SharedStateList} from '../models/tc-shared-state';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {Location} from '@angular/common';\nimport {TcCoreCommonFunctions} from '../common/tc-core-common-functions';\nimport {GeneralConfig} from '../models/tc-general-config';\nimport {TcSharedStateService} from './tc-shared-state.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TcGeneralConfigService {\n\n  constructor(private location: Location, private sharedStateService: TcSharedStateService) {\n  }\n\n  public createGeneralConfig(sandboxId: number, uiAppId: string, generalConfig: GeneralConfig) {\n    const ssName = uiAppId + '.general.config.tibcolabs.client.context.PUBLIC';\n    const content: SharedStateContent = new SharedStateContent();\n    content.json = TcCoreCommonFunctions.escapeString(JSON.stringify(generalConfig));\n\n    return this.sharedStateService.createSharedState(ssName, 'PUBLIC', '', sandboxId, undefined, undefined, undefined, content)\n      .pipe(\n        map(value => value)\n      );\n  }\n\n  public getGeneralConfig(uiAppId: string, useCache: boolean, flushCache: boolean): Observable {\n    // if useCache is false this will trigger the service to update the cached version with latest\n    const ssName = uiAppId + '.general.config.tibcolabs.client.context.PUBLIC';\n\n    return this.sharedStateService.getSharedState(ssName, 'PUBLIC', useCache, flushCache)\n      .pipe(\n        map(value => {\n            if (value.sharedStateEntries.length > 0) {\n              const ssresult = new GeneralConfig().deserialize(JSON.parse(value.sharedStateEntries[0].content.json));\n              ssresult.id = value.sharedStateEntries[0].id;\n              return ssresult;\n            } else {\n              return undefined;\n            }\n          }\n        )\n      );\n  }\n\n  public updateGeneralConfig(sandboxId: number, uiAppId: string, generalConfig: GeneralConfig, id: string) {\n    const ssName = uiAppId + '.general.config.tibcolabs.client.context.PUBLIC';\n    const content: SharedStateContent = new SharedStateContent();\n    content.json = TcCoreCommonFunctions.escapeString(JSON.stringify(generalConfig));\n    const entry: SharedStateEntry = new SharedStateEntry();\n    entry.content = content;\n    entry.sandboxId = sandboxId;\n    entry.name = ssName;\n    entry.type = 'PUBLIC';\n    entry.id = id;\n    const ssList: SharedStateList = new SharedStateList();\n    ssList.sharedStateEntries = [];\n    ssList.sharedStateEntries.push(entry);\n\n    return this.sharedStateService.updateSharedState(ssList.sharedStateEntries)\n      .pipe(\n        map(value => {\n          // flush the cache\n          this.getGeneralConfig(uiAppId, true, true).subscribe();\n          return new GeneralConfig().deserialize((JSON.parse(value.sharedStateEntries[0].content.json)));\n        })\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TcGeneralLandingPageConfigService.html":{"url":"injectables/TcGeneralLandingPageConfigService.html","title":"injectable - TcGeneralLandingPageConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TcGeneralLandingPageConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/tc-general-landing-page-config.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getLandingPage\n                            \n                            \n                                    Public\n                                getLandingPageForRoles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createGeneralLandingPageConfig\n                            \n                            \n                                    Public\n                                getGeneralLandingPageConfig\n                            \n                            \n                                    Public\n                                updateGeneralLandingPageConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sharedStateService: TcSharedStateService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/tc-general-landing-page-config.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sharedStateService\n                                                  \n                                                        \n                                                                        TcSharedStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createGeneralLandingPageConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGeneralLandingPageConfig(sandboxId: number, uiAppId: string, generalLandingPageConfig: GeneralLandingPageConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/tc-general-landing-page-config.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sandboxId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uiAppId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    generalLandingPageConfig\n                                    \n                                                GeneralLandingPageConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGeneralLandingPageConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGeneralLandingPageConfig(uiAppId: string, useCache: boolean, flushCache: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/tc-general-landing-page-config.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uiAppId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    useCache\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    flushCache\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateGeneralLandingPageConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGeneralLandingPageConfig(sandboxId: number, uiAppId: string, generalLandingPageConfig: GeneralLandingPageConfig, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/tc-general-landing-page-config.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sandboxId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uiAppId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    generalLandingPageConfig\n                                    \n                                                GeneralLandingPageConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getLandingPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/tc-general-landing-page-config.service.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getLandingPageForRoles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/services/tc-general-landing-page-config.service.ts:84\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { TcSharedStateService } from './tc-shared-state.service';\nimport { GeneralLandingPageConfig, LandingPageConfig } from '../models/tc-general-landing-page-config';\nimport { SharedStateContent, SharedStateEntry, SharedStateList } from '../models/tc-shared-state';\nimport { TcCoreCommonFunctions } from '../common/tc-core-common-functions';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class TcGeneralLandingPageConfigService {\n\n    constructor(\n        private sharedStateService: TcSharedStateService\n    ) {\n    }\n\n    public createGeneralLandingPageConfig(sandboxId: number, uiAppId: string, generalLandingPageConfig: GeneralLandingPageConfig) {\n        const ssName = uiAppId + '.general.landing.page.config.tibcolabs.client.context.PUBLIC';\n        const content: SharedStateContent = new SharedStateContent();\n        content.json = TcCoreCommonFunctions.escapeString(JSON.stringify(generalLandingPageConfig));\n\n        return this.sharedStateService.createSharedState(ssName, 'PUBLIC', '', sandboxId, undefined, undefined, undefined, content)\n            .pipe(\n                map(value => value)\n            );\n    }\n\n    public getGeneralLandingPageConfig(uiAppId: string, useCache: boolean, flushCache: boolean): Observable {\n        // if useCache is false this will trigger the service to update the cached version with latest\n        const ssName = uiAppId + '.general.landing.page.config.tibcolabs.client.context.PUBLIC';\n\n        return this.sharedStateService.getSharedState(ssName, 'PUBLIC', useCache, flushCache)\n            .pipe(\n                map(value => {\n                    if (value.sharedStateEntries.length > 0) {\n                        const ssresult = new GeneralLandingPageConfig().deserialize(JSON.parse(value.sharedStateEntries[0].content.json));\n                        ssresult.id = value.sharedStateEntries[0].id;\n                        return ssresult;\n                    } else {\n                        return undefined;\n                    }\n                }\n                )\n            );\n    }\n\n    public updateGeneralLandingPageConfig(sandboxId: number, uiAppId: string, generalLandingPageConfig: GeneralLandingPageConfig, id: string) {\n        const ssName = uiAppId + '.general.landing.page.config.tibcolabs.client.context.PUBLIC';\n        const content: SharedStateContent = new SharedStateContent();\n        content.json = TcCoreCommonFunctions.escapeString(JSON.stringify(generalLandingPageConfig));\n        const entry: SharedStateEntry = new SharedStateEntry();\n        entry.content = content;\n        entry.sandboxId = sandboxId;\n        entry.name = ssName;\n        entry.type = 'PUBLIC';\n        entry.id = id;\n        const ssList: SharedStateList = new SharedStateList();\n        ssList.sharedStateEntries = [];\n        ssList.sharedStateEntries.push(entry);\n\n        return this.sharedStateService.updateSharedState(ssList.sharedStateEntries)\n            .pipe(\n                map(value => {\n                    // flush the cache\n                    this.getGeneralLandingPageConfig(uiAppId, true, true).subscribe();\n                    return new GeneralLandingPageConfig().deserialize((JSON.parse(value.sharedStateEntries[0].content.json)));\n                })\n            );\n    }\n\n    public getLandingPage = (key: string, uiAppId: string): Observable => {\n        const landingPage = this.getGeneralLandingPageConfig(uiAppId, true, true).pipe(\n            map(landingPages => {\n                const page = landingPages.landingPage.filter(element => element.key === key )[0];\n                return page;\n            })            \n        )   \n        return landingPage;\n    }\n\n    public getLandingPageForRoles = (roles: string[], uiAppId: string): Observable => {\n        const landingPage = this.getGeneralLandingPageConfig(uiAppId, true, true).pipe(\n            map(landingPages => {\n                const candidatePages = landingPages.landingPage.filter(element => roles.some(r => element.roles.indexOf(r) >= 0));\n                if (candidatePages.length == 1) {\n                    return candidatePages[0];\n                } else {\n                    const higherPriority = Math.max.apply(Math, candidatePages.map(function (o) { return o.priority; }))\n                    const candidatePage = candidatePages.find(function (o) { return o.priority == higherPriority; })\n                    return candidatePage;\n                }\n            })\n        )\n        return landingPage;\n\n    } \n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TcLoginService.html":{"url":"injectables/TcLoginService.html","title":"injectable - TcLoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TcLoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/tc-login.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                laAuthorize\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                loginV2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/tc-login.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            laAuthorize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    laAuthorize(accessToken: AccessToken, accountId)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/tc-login.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accessToken\n                                    \n                                                AccessToken\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    accountId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(username, password, clientID)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/tc-login.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientID\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loginV2\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loginV2(username, password)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/tc-login.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {AccessToken, AuthInfo} from '../models/tc-login';\nimport {Observable} from 'rxjs';\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\nimport {map, tap} from 'rxjs/operators';\nimport {Location} from '@angular/common';\nimport {EMAIL_ID_KEY, CLIENT_ID_KEY} from '../resolvers/login-prefill.resolver';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class TcLoginService {\n  constructor(private http: HttpClient, private location: Location) { }\n\n  // Provide ability to login to Tibco Subscriber Cloud\n  public login(username, password, clientID): Observable {\n    localStorage.setItem(EMAIL_ID_KEY, username);\n    localStorage.setItem(CLIENT_ID_KEY, clientID);\n\n\n    const url = '/idm/v3/login-oauth';\n    const body = new HttpParams()\n      .set('Email', username)\n      .set('Password', password)\n      .set('TenantId', 'bpm')\n      .set('ClientID', clientID);\n    const headers = new HttpHeaders()\n      .set('Content-Type', 'application/x-www-form-urlencoded');\n\n    return this.http.post(url, body.toString(), { headers })\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map( authInfo => new AuthInfo().deserialize(authInfo)));\n  }\n\n  public loginV2(username, password): Observable {\n    const url = '/as/token.oauth2';\n    const body = new HttpParams()\n      .set('username', username)\n      .set('password', password)\n      .set('client_id', 'ropc_ipass')\n      .set('grant_type', 'password');\n    const headers = new HttpHeaders()\n      .set('Content-Type', 'application/x-www-form-urlencoded');\n\n    return this.http.post(url, body.toString(), { headers })\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map( accessToken => new AccessToken().deserialize(accessToken)));\n  }\n\n\n  // Provide ability to authorize against live apps (note tenantId: bpm)\n  public laAuthorize(accessToken: AccessToken, accountId): Observable {\n    const url = '/idm/v2/login-oauth';\n    const body = new HttpParams()\n      .set('AccessToken', accessToken.access_token)\n      .set('TenantId', 'bpm')\n      .set('AccountId', accountId);\n\n    const headers = new HttpHeaders()\n      .set('Content-Type', 'application/x-www-form-urlencoded');\n\n    return this.http.post(url, body.toString(), { headers })\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map( authInfo => new AuthInfo().deserialize(authInfo)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TcSharedStateService.html":{"url":"injectables/TcSharedStateService.html","title":"injectable - TcSharedStateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TcSharedStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/tc-shared-state.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createSharedState\n                            \n                            \n                                    Public\n                                createUiAppConfig\n                            \n                            \n                                    Public\n                                getSharedState\n                            \n                            \n                                    Public\n                                getUiAppConfig\n                            \n                            \n                                    Public\n                                updateSharedState\n                            \n                            \n                                    Public\n                                updateUiAppConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/tc-shared-state.service.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createSharedState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createSharedState(name: string, type: string, description: string, sandboxId: number, attributes: string[], roles: string[], links: string[], content: SharedStateContent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/tc-shared-state.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sandboxId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    attributes\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    roles\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    links\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    content\n                                    \n                                                SharedStateContent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createUiAppConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUiAppConfig(sandboxId: number, uiAppConfig: UiAppConfig, uiAppId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/tc-shared-state.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sandboxId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uiAppConfig\n                                    \n                                                UiAppConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uiAppId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSharedState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSharedState(name: string, type: string, useCache: boolean, flushCache: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/tc-shared-state.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    useCache\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    flushCache\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUiAppConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUiAppConfig(uiAppId: string, useCache: boolean, flushCache: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/tc-shared-state.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uiAppId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    useCache\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    flushCache\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateSharedState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSharedState(sharedStateList)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/tc-shared-state.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sharedStateList\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateUiAppConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUiAppConfig(sandboxId: number, uiAppConfig: UiAppConfig, uiAppId: string, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/tc-shared-state.service.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sandboxId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uiAppConfig\n                                    \n                                                UiAppConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uiAppId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {SharedStateContent, SharedStateEntry, SharedStateList} from '../models/tc-shared-state';\nimport {Observable} from 'rxjs';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {map, tap} from 'rxjs/operators';\nimport {Location} from '@angular/common';\nimport {UiAppConfig} from '../models/tc-app-config';\nimport {TcCoreCommonFunctions} from '../common/tc-core-common-functions';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TcSharedStateService {\n\n  constructor(private http: HttpClient, private location: Location) {\n  }\n\n  public createSharedState(name: string,\n                           type: string,\n                           description: string,\n                           sandboxId: number,\n                           attributes: string[],\n                           roles: string[],\n                           links: string[],\n                           content: SharedStateContent): Observable {\n    const url = '/clientstate/v1/states';\n\n    const body = {\n      'name': name,\n      'type': type,\n      'description': description,\n      'sandboxId': sandboxId,\n      'attributes': attributes,\n      'roles': roles,\n      'links': links,\n      content: content\n    };\n    const bodyStr = JSON.stringify(body);\n    const headers = new HttpHeaders()\n      .set('Content-Type', 'application/json');\n    return this.http.post(url, bodyStr, {headers})\n      .pipe(\n        tap(val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map(result => {\n          return result.toString();\n        })\n      );\n  }\n\n  public updateSharedState(sharedStateList): Observable {\n    const url = '/clientstate/v1/states';\n\n    const body = sharedStateList;\n    const bodyStr = JSON.stringify(body);\n    const headers = new HttpHeaders()\n      .set('Content-Type', 'application/json');\n    return this.http.put(url, bodyStr, {headers})\n      .pipe(\n        tap(val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map(updatedSharedStateList => new SharedStateList().deserialize(updatedSharedStateList))\n      );\n  }\n\n  public getSharedState(name: string, type: string, useCache: boolean, flushCache: boolean): Observable {\n    const url = '/clientstate/v1/states?$filter=type=' + type\n      + ' and name=\\'' + name + '\\'';\n    let options = {}\n    // set headers when caching required\n    let headers: HttpHeaders = new HttpHeaders();\n    if (useCache) {\n      headers = headers.set('cacheResponse', 'true');\n    }\n    if (flushCache) {\n      headers = headers.set('flushCache', 'true');\n    }\n    options = {headers: headers};\n\n    return this.http.get(url, options)\n      .pipe(\n        tap(val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map(sharedStateList => new SharedStateList().deserialize(sharedStateList)));\n  }\n\n  /* Ui App Config */\n\n  public getUiAppConfig(uiAppId: string, useCache: boolean, flushCache: boolean): Observable {\n    // if useCache is false this will trigger the service to update the cached version with latest\n    const ssName = uiAppId + '.config.tibcolabs.client.context.PUBLIC';\n\n    return this.getSharedState(ssName, 'PUBLIC', useCache, flushCache)\n      .pipe(\n        map(value => {\n            if (value.sharedStateEntries.length > 0) {\n              const ssresult = new UiAppConfig().deserialize(JSON.parse(value.sharedStateEntries[0].content.json));\n              ssresult.id = value.sharedStateEntries[0].id;\n              return ssresult;\n            } else {\n              return undefined;\n            }\n          }\n        )\n      );\n  }\n\n  public createUiAppConfig(sandboxId: number, uiAppConfig: UiAppConfig, uiAppId: string): Observable {\n    const ssName = uiAppId + '.config.tibcolabs.client.context.PUBLIC';\n    const content: SharedStateContent = new SharedStateContent();\n    content.json = TcCoreCommonFunctions.escapeString(JSON.stringify(uiAppConfig));\n    return this.createSharedState(ssName, 'PUBLIC', '', sandboxId, undefined, undefined, undefined, content)\n      .pipe(\n        map(value => value)\n      );\n  }\n\n  public updateUiAppConfig(sandboxId: number, uiAppConfig: UiAppConfig, uiAppId: string, id: string): Observable {\n    const ssName = uiAppId + '.config.tibcolabs.client.context.PUBLIC';\n    const content: SharedStateContent = new SharedStateContent();\n    content.json = TcCoreCommonFunctions.escapeString(JSON.stringify(uiAppConfig));\n    const entry: SharedStateEntry = new SharedStateEntry();\n    entry.content = content;\n    entry.sandboxId = sandboxId;\n    entry.name = ssName;\n    entry.type = 'PUBLIC';\n    entry.id = id;\n    const ssList: SharedStateList = new SharedStateList();\n    ssList.sharedStateEntries = [];\n    ssList.sharedStateEntries.push(entry);\n    return this.updateSharedState(ssList.sharedStateEntries)\n      .pipe(\n        map(value => {\n          return new UiAppConfig().deserialize((JSON.parse(value.sharedStateEntries[0].content.json)));\n        })\n      );\n  }\n\n  /* UI App Config */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TibcoCloudConfigurationComponent.html":{"url":"components/TibcoCloudConfigurationComponent.html","title":"component - TibcoCloudConfigurationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TibcoCloudConfigurationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/tibco-cloud-configuration/tibco-cloud-configuration.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tc-tibco-cloud-configuration\n            \n\n            \n                styleUrls\n                ./tibco-cloud-configuration.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tibco-cloud-configuration.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configName\n                            \n                            \n                                    Private\n                                createToolbarButtons\n                            \n                            \n                                    Public\n                                handleSelectionEvent\n                            \n                            \n                                    Public\n                                handleToolbarButtonEvent\n                            \n                            \n                                showConfig\n                            \n                            \n                                toolbarButtons\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                baseRoute\n                            \n                            \n                                configMenuPages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                routeAction\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute, buttonsHelper: TcButtonsHelperService, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/tibco-cloud-configuration/tibco-cloud-configuration.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        buttonsHelper\n                                                  \n                                                        \n                                                                        TcButtonsHelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        baseRoute\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-configuration/tibco-cloud-configuration.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        configMenuPages\n                    \n                \n                \n                    \n                        Type :         ConfigurationMenuConfig[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-configuration/tibco-cloud-configuration.component.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        routeAction\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-configuration/tibco-cloud-configuration.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/tibco-cloud-configuration/tibco-cloud-configuration.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-configuration/tibco-cloud-configuration.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createToolbarButtons\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-configuration/tibco-cloud-configuration.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            handleSelectionEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-configuration/tibco-cloud-configuration.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            handleToolbarButtonEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-configuration/tibco-cloud-configuration.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-configuration/tibco-cloud-configuration.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toolbarButtons\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ToolbarButton[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-configuration/tibco-cloud-configuration.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Router, Route, ActivatedRoute} from '@angular/router';\nimport { Location } from '@angular/common';\nimport { ToolbarButton } from '../../models/tc-widget-header';\nimport { TcButtonsHelperService } from '../../services/tc-buttons-helper.service';\nimport {RouteAction} from '../../models/tc-routing-actions';\nimport {ConfigurationMenuConfig} from '../../models/tc-configuration-menu-config';\n\n@Component({\n  selector: 'tc-tibco-cloud-configuration',\n  templateUrl: './tibco-cloud-configuration.component.html',\n  styleUrls: ['./tibco-cloud-configuration.component.css']\n})\nexport class TibcoCloudConfigurationComponent implements OnInit {\n  @Input() baseRoute: string;\n  @Input() configMenuPages: ConfigurationMenuConfig[];\n  @Output() routeAction: EventEmitter = new EventEmitter();\n  configName: string;\n  toolbarButtons: ToolbarButton[];\n\n  constructor(private router: Router, private route: ActivatedRoute, private buttonsHelper: TcButtonsHelperService, private location: Location) { }\n\n  private createToolbarButtons = (): ToolbarButton[] => {\n    const homeButton = this.buttonsHelper.createButton('close', 'tcs-close-icon', true, 'Close', true, true);\n    const buttons = [ homeButton ];\n    return buttons;\n  }\n\n  public handleSelectionEvent = (id: string) => {\n    this.configName = id;\n    const url = this.baseRoute + id.toLowerCase().split(' ').join('-');\n    this.router.navigate([url]);\n  }\n\n  public handleToolbarButtonEvent = (buttonId: string) => {\n    if (buttonId === 'close') {\n      this.routeAction.emit(new RouteAction('backClicked', null));\n    }\n  }\n\n  showConfig = (option: string) => {\n    this.configName = option;\n    console.log('Setting selected: ' + option);\n  }\n\n  ngOnInit() {\n    this.toolbarButtons = this.createToolbarButtons();\n    // this.configName = this.route.component;\n  }\n\n}\n\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n  \n\n    \n      \n    \n\n    \n    \n      \n        \n      \n    \n\n    \n      \n        \n      \n    \n\n  \n\n\n    \n\n    \n                \n                    ./tibco-cloud-configuration.component.css\n                \n                .starters-custom-layout-panel-text {\n  line-height: 1.5;\n  letter-spacing: 0.3px;\n  text-align: left;\n  color: #212121;\n  font-weight: 600;\n  font-size: 18px;\n  box-shadow: 0 0 0px black;\n}\n\n.starters-custom-layout-box-header {\n  /* width: 100%; */\n  height: 40px;\n  min-height: 40px;\n  border-radius: 3px;\n  background-color: #ffffff;\n  box-shadow: 0 2px 0px 0 #dedede;\n  border-bottom-left-radius: 0px;\n  border-bottom-right-radius: 0px;\n}\n\n.starters-custom-layout-panel-icon {\n  max-width: 24px;\n  max-height: 24px;\n  margin-left: 8px;\n  margin-right: 8px;\n}\n\n.starters-custom-layout-panel-icon {\n  padding: 4px;\n}\n\n.tcs-configuration-router-pane {\n  overflow: hidden;\n}\n\n.tcs-configuration-outer-pane {\n  border-radius: 3px;\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.33);\n  background-color: #ffffff;\n  border: solid 1px #dedede;\n  overflow: hidden;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                '\n    var COMPONENTS = [{'name': 'TibcoCloudConfigurationComponent', 'selector': 'tc-tibco-cloud-configuration'},{'name': 'TibcoCloudErrorComponent', 'selector': 'laapp-error'},{'name': 'TibcoCloudLoginComponent', 'selector': 'tc-tibco-cloud-login'},{'name': 'TibcoCloudMenuBarComponent', 'selector': 'tc-tibco-cloud-menu-bar'},{'name': 'TibcoCloudMultipleSubscriptionComponent', 'selector': 'tc-tibco-cloud-multiple-subscription'},{'name': 'TibcoCloudNavbarComponent', 'selector': 'tc-tibco-cloud-navbar'},{'name': 'TibcoCloudNewElementComponent', 'selector': 'tc-tibco-cloud-new-element'},{'name': 'TibcoCloudSelectTableComponent', 'selector': 'tc-tibco-cloud-select-table'},{'name': 'TibcoCloudSettingLandingComponent', 'selector': 'tc-tibco-cloud-setting-landing'},{'name': 'TibcoCloudSettingMenuEntryComponent', 'selector': 'tc-tibco-cloud-setting-menu-entry'},{'name': 'TibcoCloudSettingsGeneralComponent', 'selector': 'tc-tibco-cloud-settings-general'},{'name': 'TibcoCloudSplashScreenComponent', 'selector': 'tc-tibco-cloud-splash-screen'},{'name': 'TibcoCloudTableComponent', 'selector': 'tc-tibco-cloud-table'},{'name': 'TibcoCloudWidgetHeaderComponent', 'selector': 'tc-tibco-cloud-widget-header'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[tcOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'TibcoCloudConfigurationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TibcoCloudErrorComponent.html":{"url":"components/TibcoCloudErrorComponent.html","title":"component - TibcoCloudErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TibcoCloudErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/tibco-cloud-error/tibco-cloud-error.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                laapp-error\n            \n\n            \n                styleUrls\n                ./tibco-cloud-error.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tibco-cloud-error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                knownErrorList\n                            \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/tibco-cloud-error/tibco-cloud-error.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/tibco-cloud-error/tibco-cloud-error.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-error/tibco-cloud-error.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            knownErrorList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      errorCode : 'NO_ROLE',\n      'errorMessage' : 'You are not a Member of this Application, please contact the Application- or Subscription-Owner.'\n\n    },\n    {\n      'errorCode' : 'NO_ACCESS',\n      'errorMessage' : 'You are not entitled to access this Application, please contact the Application- or Subscription-Owner.'\n\n    },\n    {\n      'errorCode' : 'CONFIGURATION_MISSING',\n      'errorMessage' : 'The Portal configuration seems wrong, this can only be fixed by an Application Configurator.'\n\n    },\n    {\n      'errorCode' : 'WRONG_APPLICATION_ID',\n      'errorMessage' : 'The linked LiveApps Application ID is invalid, this can only be fixed by an Application Configurator.'\n\n    },\n    {\n      'errorCode' : 'GROUP_ERROR' ,\n      'errorMessage' : 'There is a cache issue around groups, this can only be fixed by an Application Configurator.'\n\n    },\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-error/tibco-cloud-error.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-error/tibco-cloud-error.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'laapp-error',\n  templateUrl: './tibco-cloud-error.component.html',\n  styleUrls: ['./tibco-cloud-error.component.css']\n})\nexport class TibcoCloudErrorComponent implements OnInit {\n\n  // todo: Add logger\n  constructor(private route: ActivatedRoute) {\n    this.message = '';\n    this.route.params.subscribe(params => {\n      console.log(params); // log the entire params object\n      console.log(params['errorCode']);\n      console.log(params['errorMessage?']);\n      if (params['errorCode'] != null) {\n        this.code = params['errorCode'];\n        this.message = this.knownErrorList.find(x => x.errorCode == this.code).errorMessage;\n      } else {\n        this.code = 'Unknown Error Code';\n      }\n      if (this.message === '' && params['errorMessage?'] != null) {\n        this.message = params['errorMessage?'];\n      }\n\n      // log the value of id\n    });\n  }\n\n  code: string;\n  message: string;\n\n  knownErrorList = [\n    {\n      errorCode : 'NO_ROLE',\n      'errorMessage' : 'You are not a Member of this Application, please contact the Application- or Subscription-Owner.'\n\n    },\n    {\n      'errorCode' : 'NO_ACCESS',\n      'errorMessage' : 'You are not entitled to access this Application, please contact the Application- or Subscription-Owner.'\n\n    },\n    {\n      'errorCode' : 'CONFIGURATION_MISSING',\n      'errorMessage' : 'The Portal configuration seems wrong, this can only be fixed by an Application Configurator.'\n\n    },\n    {\n      'errorCode' : 'WRONG_APPLICATION_ID',\n      'errorMessage' : 'The linked LiveApps Application ID is invalid, this can only be fixed by an Application Configurator.'\n\n    },\n    {\n      'errorCode' : 'GROUP_ERROR' ,\n      'errorMessage' : 'There is a cache issue around groups, this can only be fixed by an Application Configurator.'\n\n    },\n  ];\n\n  ngOnInit() {\n  }\n\n\n}\n\n\n\n    \n\n    \n        \n\n\n  Error Code: {{code}}\n\n\n  Error Message: {{message}}\n\n\n\n    \n\n    \n                \n                    ./tibco-cloud-error.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Error Code: {{code}}  Error Message: {{message}}'\n    var COMPONENTS = [{'name': 'TibcoCloudConfigurationComponent', 'selector': 'tc-tibco-cloud-configuration'},{'name': 'TibcoCloudErrorComponent', 'selector': 'laapp-error'},{'name': 'TibcoCloudLoginComponent', 'selector': 'tc-tibco-cloud-login'},{'name': 'TibcoCloudMenuBarComponent', 'selector': 'tc-tibco-cloud-menu-bar'},{'name': 'TibcoCloudMultipleSubscriptionComponent', 'selector': 'tc-tibco-cloud-multiple-subscription'},{'name': 'TibcoCloudNavbarComponent', 'selector': 'tc-tibco-cloud-navbar'},{'name': 'TibcoCloudNewElementComponent', 'selector': 'tc-tibco-cloud-new-element'},{'name': 'TibcoCloudSelectTableComponent', 'selector': 'tc-tibco-cloud-select-table'},{'name': 'TibcoCloudSettingLandingComponent', 'selector': 'tc-tibco-cloud-setting-landing'},{'name': 'TibcoCloudSettingMenuEntryComponent', 'selector': 'tc-tibco-cloud-setting-menu-entry'},{'name': 'TibcoCloudSettingsGeneralComponent', 'selector': 'tc-tibco-cloud-settings-general'},{'name': 'TibcoCloudSplashScreenComponent', 'selector': 'tc-tibco-cloud-splash-screen'},{'name': 'TibcoCloudTableComponent', 'selector': 'tc-tibco-cloud-table'},{'name': 'TibcoCloudWidgetHeaderComponent', 'selector': 'tc-tibco-cloud-widget-header'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[tcOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'TibcoCloudErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TibcoCloudLoginComponent.html":{"url":"components/TibcoCloudLoginComponent.html","title":"component - TibcoCloudLoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TibcoCloudLoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/tibco-cloud-login/tibco-cloud-login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tc-tibco-cloud-login\n            \n\n            \n                styleUrls\n                ./tibco-cloud-login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tibco-cloud-login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountsInfo\n                            \n                            \n                                auth\n                            \n                            \n                                authInfo\n                            \n                            \n                                clientId\n                            \n                            \n                                loading\n                            \n                            \n                                loginError\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                doLogin\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                loginPrefill\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                loggedIn\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tcLogin: TcLoginService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/tibco-cloud-login/tibco-cloud-login.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tcLogin\n                                                  \n                                                        \n                                                                        TcLoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        loginPrefill\n                    \n                \n                \n                    \n                        Type :         LoginPrefill\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-login/tibco-cloud-login.component.ts:38\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        loggedIn\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-login/tibco-cloud-login.component.ts:37\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doLogin\n                        \n                        \n                    \n                \n            \n            \n                \ndoLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/tibco-cloud-login/tibco-cloud-login.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/tibco-cloud-login/tibco-cloud-login.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accountsInfo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AccountsInfo\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-login/tibco-cloud-login.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-login/tibco-cloud-login.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authInfo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthInfo\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-login/tibco-cloud-login.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-login/tibco-cloud-login.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-login/tibco-cloud-login.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginError\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-login/tibco-cloud-login.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-login/tibco-cloud-login.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-login/tibco-cloud-login.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AccessToken\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-login/tibco-cloud-login.component.ts:46\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {AccountsInfo, LoginPrefill, Subscription} from '../../models/tc-login';\nimport {Observable, ObservableInput} from 'rxjs';\nimport {map, mergeMap} from 'rxjs/operators';\nimport {AccessToken, AuthInfo } from '../../models/tc-login';\nimport {TcLoginService} from '../../services/tc-login.service';\n\n@Component({\n    selector: 'tc-tibco-cloud-login',\n    templateUrl: './tibco-cloud-login.component.html',\n    styleUrls: ['./tibco-cloud-login.component.css']\n})\n\nexport class TibcoCloudLoginComponent  implements OnInit {\n\n  @Output() loggedIn = new EventEmitter();\n  @Input() loginPrefill: LoginPrefill;\n\n    name: string;\n    password: string;\n    clientId: string;\n    loading = false;\n    accountsInfo: AccountsInfo;\n    loginError;\n    token: AccessToken;\n    authInfo: AuthInfo;\n    auth: Observable;\n\n  constructor(\n    private tcLogin: TcLoginService\n  ) {\n\n  }\n\n  ngOnInit() {\n    console.log('Login Init');\n\n    if(this.loginPrefill) {\n      this.name = this.loginPrefill.emailId;\n      this.clientId = this.loginPrefill.clientId;\n    }\n  }\n\n    doLogin() {\n        this.loading = true;\n        this.loginError = undefined;\n\n        // We need to pass the token from getToken into the authorize call. Hence, using mergeMap below.\n\n      this.auth = this.tcLogin.login(this.name, this.password, this.clientId).pipe(\n        map(authInfo => {\n            this.authInfo = authInfo;\n            return authInfo;\n          }\n        )\n      );\n\n        this.auth.subscribe(authorize => {\n            this.loading = false;\n            // ok logged in\n            console.log('User logged in...');\n            this.loggedIn.emit( { authInfo: authorize, accessToken: this.token } );\n          },\n          error => {\n              this.loading = false;\n              this.loginError = error.error.error_description;\n              console.error('Login Failed: ');\n              console.error(error);\n          });\n    }\n}\n\n    \n\n    \n          \n    \n        \n          \n            \n              \n            \n            \n              \n            \n\n            \n              \n                \n                  Subscription Parameters\n                \n                \n                  \n                \n              \n            \n\n            \n              Login\n            \n\n          \n        \n\n        \n          \n            Logging in...\n          \n          Unable to login: {{loginError}}\n        \n    \n  \n\n    \n\n    \n                \n                    ./tibco-cloud-login.component.css\n                \n                .la-login-card {\n  width: 500px;\n  height: 280px;\n}\n.la-login-div {\n  margin-top: 50px;\n}\n\n.la-login-button {\n  width: 50px;\n}\n\n.la-login-info-pane {\n  height: 100px;\n}\n\n.la-login-button-div {\n  margin-top: 25px;\n}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                Subscription Parameters                                                                                                                      Login                                                            Logging in...                    Unable to login: {{loginError}}              '\n    var COMPONENTS = [{'name': 'TibcoCloudConfigurationComponent', 'selector': 'tc-tibco-cloud-configuration'},{'name': 'TibcoCloudErrorComponent', 'selector': 'laapp-error'},{'name': 'TibcoCloudLoginComponent', 'selector': 'tc-tibco-cloud-login'},{'name': 'TibcoCloudMenuBarComponent', 'selector': 'tc-tibco-cloud-menu-bar'},{'name': 'TibcoCloudMultipleSubscriptionComponent', 'selector': 'tc-tibco-cloud-multiple-subscription'},{'name': 'TibcoCloudNavbarComponent', 'selector': 'tc-tibco-cloud-navbar'},{'name': 'TibcoCloudNewElementComponent', 'selector': 'tc-tibco-cloud-new-element'},{'name': 'TibcoCloudSelectTableComponent', 'selector': 'tc-tibco-cloud-select-table'},{'name': 'TibcoCloudSettingLandingComponent', 'selector': 'tc-tibco-cloud-setting-landing'},{'name': 'TibcoCloudSettingMenuEntryComponent', 'selector': 'tc-tibco-cloud-setting-menu-entry'},{'name': 'TibcoCloudSettingsGeneralComponent', 'selector': 'tc-tibco-cloud-settings-general'},{'name': 'TibcoCloudSplashScreenComponent', 'selector': 'tc-tibco-cloud-splash-screen'},{'name': 'TibcoCloudTableComponent', 'selector': 'tc-tibco-cloud-table'},{'name': 'TibcoCloudWidgetHeaderComponent', 'selector': 'tc-tibco-cloud-widget-header'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[tcOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'TibcoCloudLoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TibcoCloudMenuBarComponent.html":{"url":"components/TibcoCloudMenuBarComponent.html","title":"component - TibcoCloudMenuBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TibcoCloudMenuBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/tibco-cloud-menu-bar/tibco-cloud-menu-bar.component.ts\n\n\n\n    \n        Extends\n    \n    \n                TibcoCloudWidgetHeaderComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tc-tibco-cloud-menu-bar\n            \n\n            \n                styleUrls\n                ./tibco-cloud-menu-bar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tibco-cloud-menu-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                toolbarButtonClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                headerText\n                            \n                            \n                                icon\n                            \n                            \n                                showHeader\n                            \n                            \n                                toolbarButtons\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toolbarButtonEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/tibco-cloud-menu-bar/tibco-cloud-menu-bar.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        headerText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         TibcoCloudWidgetHeaderComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         TibcoCloudWidgetHeaderComponent:10\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         TibcoCloudWidgetHeaderComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         TibcoCloudWidgetHeaderComponent:11\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showHeader\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : this.showHeader ? this.showHeader : true\n                    \n                \n                            \n                                \n                                    Inherited from         TibcoCloudWidgetHeaderComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         TibcoCloudWidgetHeaderComponent:13\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toolbarButtons\n                    \n                \n                \n                    \n                        Type :         ToolbarButton[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         TibcoCloudWidgetHeaderComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         TibcoCloudWidgetHeaderComponent:12\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toolbarButtonEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         TibcoCloudWidgetHeaderComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         TibcoCloudWidgetHeaderComponent:14\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/tibco-cloud-menu-bar/tibco-cloud-menu-bar.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toolbarButtonClick\n                        \n                        \n                    \n                \n            \n            \n                \ntoolbarButtonClick(id)\n                \n            \n\n\n            \n                \n                    Inherited from         TibcoCloudWidgetHeaderComponent\n\n                \n            \n            \n                \n                        Defined in         TibcoCloudWidgetHeaderComponent:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {TibcoCloudWidgetHeaderComponent} from '../tibco-cloud-widget-header/tibco-cloud-widget-header.component';\nimport {ToolbarButton} from '../../models/tc-widget-header';\n\n@Component({\n  selector: 'tc-tibco-cloud-menu-bar',\n  templateUrl: './tibco-cloud-menu-bar.component.html',\n  styleUrls: ['./tibco-cloud-menu-bar.component.css']\n})\nexport class TibcoCloudMenuBarComponent extends TibcoCloudWidgetHeaderComponent implements OnInit {\n\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{headerText}}\n    \n    \n  \n\n  \n    \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./tibco-cloud-menu-bar.component.css\n                \n                .tcs-menu-bar-pane {\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2), 0 2px 4px 0 rgba(0, 0, 0, 0.5);\n  background-color: #ffffff;\n  height: 65px;\n  padding-left: 20px;\n  padding-right: 20px;\n}\n\n.tcs-toolbar-button-div {\n  /*margin-left: 10px;\n  margin-right: 10px;*/\n}\n\n.tcs-widget-header-text {\n  font-family: Source Sans Pro;\n  font-size: 30px;\n  font-weight: normal;\n  font-style: normal;\n  font-stretch: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  color: #212121;\n}\n\n\n:host ::ng-deep .tcs-toolbar-button:hover .svg-content {\n  fill: #0081cb;\n}\n\n:host ::ng-deep .tcs-button-filled .svg-content {\n  fill: #727272;\n}\n\n:host ::ng-deep .tcs-button-not-filled .svg-content {\n  fill: #dedede;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{headerText}}                                          '\n    var COMPONENTS = [{'name': 'TibcoCloudConfigurationComponent', 'selector': 'tc-tibco-cloud-configuration'},{'name': 'TibcoCloudErrorComponent', 'selector': 'laapp-error'},{'name': 'TibcoCloudLoginComponent', 'selector': 'tc-tibco-cloud-login'},{'name': 'TibcoCloudMenuBarComponent', 'selector': 'tc-tibco-cloud-menu-bar'},{'name': 'TibcoCloudMultipleSubscriptionComponent', 'selector': 'tc-tibco-cloud-multiple-subscription'},{'name': 'TibcoCloudNavbarComponent', 'selector': 'tc-tibco-cloud-navbar'},{'name': 'TibcoCloudNewElementComponent', 'selector': 'tc-tibco-cloud-new-element'},{'name': 'TibcoCloudSelectTableComponent', 'selector': 'tc-tibco-cloud-select-table'},{'name': 'TibcoCloudSettingLandingComponent', 'selector': 'tc-tibco-cloud-setting-landing'},{'name': 'TibcoCloudSettingMenuEntryComponent', 'selector': 'tc-tibco-cloud-setting-menu-entry'},{'name': 'TibcoCloudSettingsGeneralComponent', 'selector': 'tc-tibco-cloud-settings-general'},{'name': 'TibcoCloudSplashScreenComponent', 'selector': 'tc-tibco-cloud-splash-screen'},{'name': 'TibcoCloudTableComponent', 'selector': 'tc-tibco-cloud-table'},{'name': 'TibcoCloudWidgetHeaderComponent', 'selector': 'tc-tibco-cloud-widget-header'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[tcOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'TibcoCloudMenuBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TibcoCloudMultipleSubscriptionComponent.html":{"url":"components/TibcoCloudMultipleSubscriptionComponent.html","title":"component - TibcoCloudMultipleSubscriptionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TibcoCloudMultipleSubscriptionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/tibco-cloud-multiple-subscription/tibco-cloud-multiple-subscription.component.ts\n\n\n    \n        Description\n    \n    \n        A user will use this component when they have multiple subscriptions. The component is passed a list of subscriptions.\nThe user must choose a subscription, then the user is logged in against that subscription.\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tc-tibco-cloud-multiple-subscription\n            \n\n            \n                styleUrls\n                ./tibco-cloud-multiple-subscription.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tibco-cloud-multiple-subscription.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                selectedSubscriptionId\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                subscriptions\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                subscriptionSelection\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tcLogin: TcLoginService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/tibco-cloud-multiple-subscription/tibco-cloud-multiple-subscription.component.ts:32\n                            \n                        \n\n                \n                    \n                             is a component providing the ability for a user to login to a specific subscription.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tcLogin\n                                                  \n                                                        \n                                                                        TcLoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        subscriptions\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-multiple-subscription/tibco-cloud-multiple-subscription.component.ts:21\n                            \n                        \n                \n                    \n                        a list of available subscriptions for this user\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        token\n                    \n                \n                \n                    \n                        Type :         AccessToken\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-multiple-subscription/tibco-cloud-multiple-subscription.component.ts:25\n                            \n                        \n                \n                    \n                        the access token created from initial login\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        subscriptionSelection\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-multiple-subscription/tibco-cloud-multiple-subscription.component.ts:29\n                            \n                        \n                \n                    \n                        Notify parent that user is logged into a specific subscription the authorization object is returned for that login/subscription.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-multiple-subscription/tibco-cloud-multiple-subscription.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedSubscriptionId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-multiple-subscription/tibco-cloud-multiple-subscription.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {AccessToken} from '../../models/tc-login';\nimport {TcLoginService} from '../../services/tc-login.service';\n\n/**\n * A user will use this component when they have multiple subscriptions. The component is passed a list of subscriptions.\n * The user must choose a subscription, then the user is logged in against that subscription.\n *\n * @example \n */\n@Component({\n    selector: 'tc-tibco-cloud-multiple-subscription',\n    templateUrl: './tibco-cloud-multiple-subscription.component.html',\n    styleUrls: ['./tibco-cloud-multiple-subscription.component.css']\n})\n\nexport class TibcoCloudMultipleSubscriptionComponent {\n  /**\n  * a list of available subscriptions for this user\n  */\n  @Input() subscriptions: any;\n  /**\n  * the access token created from initial login\n  */\n  @Input() token: AccessToken;\n  /**\n  * Notify parent that user is logged into a specific subscription the authorization object is returned for that login/subscription.\n  */\n  @Output() subscriptionSelection = new EventEmitter();\n\n    public selectedSubscriptionId;\n    public loading = false;\n\n    /**\n     * `` is a component providing the ability for a user to login to a specific subscription.\n     */\n    constructor(\n        private tcLogin: TcLoginService\n    ) { }\n\n    /**\n     * @ignore\n     */\n    authorize(subscriptionId) {\n        this.loading = true;\n        this.tcLogin.laAuthorize(this.token, subscriptionId)\n            .subscribe(authorize => {\n                this.loading = false;\n                this.subscriptionSelection.emit(authorize);\n            },\n            error => {\n                console.log(JSON.stringify(error, null, 2));\n            }\n        );\n    }\n}\n\n    \n\n    \n        d\n  \n    Select Subscription:\n        \n          \n              {{subscription.accountDisplayName}}\n              \n                Owner: {{subscription.ownerName}}\n                Your role: {{subscription.loggedInUserRole}}\n                Regions: {{subscription.regions}}\n              \n          \n        \n  \n\n\n    \n\n    \n                \n                    ./tibco-cloud-multiple-subscription.component.css\n                \n                .la-subscription-div {\n  margin-top: 50px;\n}\n\n.la-subscriptions-card {\n  width: 500px;\n/*  height: 300px; */\n}\n\n.la-available-sub:hover {\n  box-shadow: 0 7px 14px 0 rgba(0,0,0,.3);\n  transition: all .2s ease-in-out;\n  cursor: pointer;\n}\n\n.la-available-sub {\n  border: 1px solid #dedede;\n  border-radius: 4px;\n  box-shadow: 0 1px 4px 0 rgba(0,0,0,.1);\n  padding: 20px 31px 31px;\n  margin-top: 5px;\n  margin-bottom: 5px;\n}\n\n.la-subscription-name {\n  font-size: 18px;\n  font-weight: bold;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'd      Select Subscription:                                {{subscription.accountDisplayName}}                              Owner: {{subscription.ownerName}}                Your role: {{subscription.loggedInUserRole}}                Regions: {{subscription.regions}}                                  '\n    var COMPONENTS = [{'name': 'TibcoCloudConfigurationComponent', 'selector': 'tc-tibco-cloud-configuration'},{'name': 'TibcoCloudErrorComponent', 'selector': 'laapp-error'},{'name': 'TibcoCloudLoginComponent', 'selector': 'tc-tibco-cloud-login'},{'name': 'TibcoCloudMenuBarComponent', 'selector': 'tc-tibco-cloud-menu-bar'},{'name': 'TibcoCloudMultipleSubscriptionComponent', 'selector': 'tc-tibco-cloud-multiple-subscription'},{'name': 'TibcoCloudNavbarComponent', 'selector': 'tc-tibco-cloud-navbar'},{'name': 'TibcoCloudNewElementComponent', 'selector': 'tc-tibco-cloud-new-element'},{'name': 'TibcoCloudSelectTableComponent', 'selector': 'tc-tibco-cloud-select-table'},{'name': 'TibcoCloudSettingLandingComponent', 'selector': 'tc-tibco-cloud-setting-landing'},{'name': 'TibcoCloudSettingMenuEntryComponent', 'selector': 'tc-tibco-cloud-setting-menu-entry'},{'name': 'TibcoCloudSettingsGeneralComponent', 'selector': 'tc-tibco-cloud-settings-general'},{'name': 'TibcoCloudSplashScreenComponent', 'selector': 'tc-tibco-cloud-splash-screen'},{'name': 'TibcoCloudTableComponent', 'selector': 'tc-tibco-cloud-table'},{'name': 'TibcoCloudWidgetHeaderComponent', 'selector': 'tc-tibco-cloud-widget-header'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[tcOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'TibcoCloudMultipleSubscriptionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TibcoCloudNavbarComponent.html":{"url":"components/TibcoCloudNavbarComponent.html","title":"component - TibcoCloudNavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TibcoCloudNavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/tibco-cloud-navbar/tibco-cloud-navbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tc-tibco-cloud-navbar\n            \n\n            \n                styleUrls\n                ./tibco-cloud-navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tibco-cloud-navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                navbarRef\n                            \n                            \n                                    Public\n                                ready\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appName\n                            \n                            \n                                docUrl\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/tibco-cloud-navbar/tibco-cloud-navbar.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        appName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-navbar/tibco-cloud-navbar.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        docUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-navbar/tibco-cloud-navbar.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/tibco-cloud-navbar/tibco-cloud-navbar.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            navbarRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('navbar')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-navbar/tibco-cloud-navbar.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ready\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-navbar/tibco-cloud-navbar.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit, ViewChild, ElementRef, Input, SystemJsNgModuleLoader} from '@angular/core';\nimport {Location} from '@angular/common';\nimport { TcCoreCommonFunctions } from '../../common/tc-core-common-functions';\n\ndeclare var GlobalNavbar: any;\n\n@Component({\n  selector: 'tc-tibco-cloud-navbar',\n  templateUrl: './tibco-cloud-navbar.component.html',\n  styleUrls: ['./tibco-cloud-navbar.component.css']\n})\nexport class TibcoCloudNavbarComponent implements OnInit {\n  @ViewChild('navbar') private navbarRef: ElementRef;\n  @Input() appName: string;\n  @Input() docUrl: string;\n\n  public ready = false;\n\n  constructor(private location: Location) {\n  }\n\n  ngOnInit() {\n\n    if (this.docUrl && (this.docUrl.slice(0, 4).toLowerCase() !== 'http')) {\n//      this.docUrl = this.location.prepareExternalUrl(this.docUrl);        // This will work with non hash routing\n        this.docUrl = TcCoreCommonFunctions.prepareUrlForStaticResource(this.location, this.docUrl);        // This will work with hash routing\n    }\n\n    const navbar = new GlobalNavbar({\n      container: '#navbar',\n      textAfterLogo: this.appName,\n      iconMenus: {\n        search: {\n          visible: false  // for versions 0.1.X the propertie is \"disabled\" instead of \"visible\".\n        },\n        download: {\n          visible: false\n        },\n        help: {\n          visible: true\n        },\n        notifications: {\n          visible: false\n        }\n      },\n      customizedComponents: [\n        {\n          name: 'help',\n          template: '#help-template'\n        }\n      ]\n    });\n\n    navbar.load();\n    navbar.customizePanel('help', '');  // set HTML string\n\n    /*navbar.subscribeEvent('CLICK_ICON_MENU_NOTIFICATIONS', function(event) {\n      console.log('Logout ', event);\n      alert('Logout');\n      this.logout();\n      // call function\n    }.bind(this));*/\n\n  }\n}\n\n    \n\n    \n        \n\n\n\n    \n\n    \n                \n                    ./tibco-cloud-navbar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'TibcoCloudConfigurationComponent', 'selector': 'tc-tibco-cloud-configuration'},{'name': 'TibcoCloudErrorComponent', 'selector': 'laapp-error'},{'name': 'TibcoCloudLoginComponent', 'selector': 'tc-tibco-cloud-login'},{'name': 'TibcoCloudMenuBarComponent', 'selector': 'tc-tibco-cloud-menu-bar'},{'name': 'TibcoCloudMultipleSubscriptionComponent', 'selector': 'tc-tibco-cloud-multiple-subscription'},{'name': 'TibcoCloudNavbarComponent', 'selector': 'tc-tibco-cloud-navbar'},{'name': 'TibcoCloudNewElementComponent', 'selector': 'tc-tibco-cloud-new-element'},{'name': 'TibcoCloudSelectTableComponent', 'selector': 'tc-tibco-cloud-select-table'},{'name': 'TibcoCloudSettingLandingComponent', 'selector': 'tc-tibco-cloud-setting-landing'},{'name': 'TibcoCloudSettingMenuEntryComponent', 'selector': 'tc-tibco-cloud-setting-menu-entry'},{'name': 'TibcoCloudSettingsGeneralComponent', 'selector': 'tc-tibco-cloud-settings-general'},{'name': 'TibcoCloudSplashScreenComponent', 'selector': 'tc-tibco-cloud-splash-screen'},{'name': 'TibcoCloudTableComponent', 'selector': 'tc-tibco-cloud-table'},{'name': 'TibcoCloudWidgetHeaderComponent', 'selector': 'tc-tibco-cloud-widget-header'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[tcOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'TibcoCloudNavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TibcoCloudNewElementComponent.html":{"url":"components/TibcoCloudNewElementComponent.html","title":"component - TibcoCloudNewElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TibcoCloudNewElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/tibco-cloud-new-element/tibco-cloud-new-element.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tc-tibco-cloud-new-element\n            \n\n            \n                styleUrls\n                ./tibco-cloud-new-element.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tibco-cloud-new-element.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                elementType\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onCreate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/tibco-cloud-new-element/tibco-cloud-new-element.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCreate\n                        \n                        \n                    \n                \n            \n            \n                \nonCreate()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/tibco-cloud-new-element/tibco-cloud-new-element.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-new-element/tibco-cloud-new-element.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-new-element/tibco-cloud-new-element.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-new-element/tibco-cloud-new-element.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-new-element/tibco-cloud-new-element.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-new-element/tibco-cloud-new-element.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n    selector: 'tc-tibco-cloud-new-element',\n    templateUrl: './tibco-cloud-new-element.component.html',\n    styleUrls: ['./tibco-cloud-new-element.component.css']\n})\nexport class TibcoCloudNewElementComponent {\n\n    public id: string;\n    public name: string;\n    public elementType: string;\n\n    constructor(\n        public dialogRef: MatDialogRef,\n        @Inject(MAT_DIALOG_DATA) public data: any\n    ) {\n        this.elementType = data.resourceType;\n    }\n\n    onCreate() {\n        this.dialogRef.close({ event: 'submit', id: this.id, name: this.name });\n    }\n\n\n}\n\n    \n\n    \n        \n    \n        \n            Create New {{elementType}}\n        \n    \n    \n        \n            \n        \n        \n            \n        \n    \n    \n    \n        Cancel\n        Create\n    \n\n    \n\n    \n                \n                    ./tibco-cloud-new-element.component.css\n                \n                .tcs-dialog-outer-div {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Create New {{elementType}}                                                                                            Cancel        Create    '\n    var COMPONENTS = [{'name': 'TibcoCloudConfigurationComponent', 'selector': 'tc-tibco-cloud-configuration'},{'name': 'TibcoCloudErrorComponent', 'selector': 'laapp-error'},{'name': 'TibcoCloudLoginComponent', 'selector': 'tc-tibco-cloud-login'},{'name': 'TibcoCloudMenuBarComponent', 'selector': 'tc-tibco-cloud-menu-bar'},{'name': 'TibcoCloudMultipleSubscriptionComponent', 'selector': 'tc-tibco-cloud-multiple-subscription'},{'name': 'TibcoCloudNavbarComponent', 'selector': 'tc-tibco-cloud-navbar'},{'name': 'TibcoCloudNewElementComponent', 'selector': 'tc-tibco-cloud-new-element'},{'name': 'TibcoCloudSelectTableComponent', 'selector': 'tc-tibco-cloud-select-table'},{'name': 'TibcoCloudSettingLandingComponent', 'selector': 'tc-tibco-cloud-setting-landing'},{'name': 'TibcoCloudSettingMenuEntryComponent', 'selector': 'tc-tibco-cloud-setting-menu-entry'},{'name': 'TibcoCloudSettingsGeneralComponent', 'selector': 'tc-tibco-cloud-settings-general'},{'name': 'TibcoCloudSplashScreenComponent', 'selector': 'tc-tibco-cloud-splash-screen'},{'name': 'TibcoCloudTableComponent', 'selector': 'tc-tibco-cloud-table'},{'name': 'TibcoCloudWidgetHeaderComponent', 'selector': 'tc-tibco-cloud-widget-header'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[tcOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'TibcoCloudNewElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TibcoCloudSelectTableComponent.html":{"url":"components/TibcoCloudSelectTableComponent.html","title":"component - TibcoCloudSelectTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TibcoCloudSelectTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/tibco-cloud-select-table/tibco-cloud-select-table.component.ts\n\n\n\n    \n        Extends\n    \n    \n                TibcoCloudTableComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tc-tibco-cloud-select-table\n            \n\n            \n                styleUrls\n                ./tibco-cloud-select-table.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tibco-cloud-select-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                            \n                                columns\n                            \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                id\n                            \n                            \n                                paginator\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clicked\n                            \n                            \n                                highlight\n                            \n                            \n                                camelCaseTW\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateTable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                jsonSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedlines\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/tibco-cloud-select-table/tibco-cloud-select-table.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        jsonSource\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         TibcoCloudTableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         TibcoCloudTableComponent:12\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectedlines\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-select-table/tibco-cloud-select-table.component.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clicked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clicked(row)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/tibco-cloud-select-table/tibco-cloud-select-table.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            highlight\n                        \n                        \n                    \n                \n            \n            \n                \nhighlight(element)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/tibco-cloud-select-table/tibco-cloud-select-table.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            camelCaseTW\n                        \n                        \n                    \n                \n            \n            \n                \ncamelCaseTW(header: string | any)\n                \n            \n\n\n            \n                \n                    Inherited from         TibcoCloudTableComponent\n\n                \n            \n            \n                \n                        Defined in         TibcoCloudTableComponent:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    header\n                                    \n                                            string | any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes)\n                \n            \n\n\n            \n                \n                    Inherited from         TibcoCloudTableComponent\n\n                \n            \n            \n                \n                        Defined in         TibcoCloudTableComponent:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         TibcoCloudTableComponent\n\n                \n            \n            \n                \n                        Defined in         TibcoCloudTableComponent:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTable\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTable()\n                \n            \n\n\n            \n                \n                    Inherited from         TibcoCloudTableComponent\n\n                \n            \n            \n                \n                        Defined in         TibcoCloudTableComponent:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-select-table/tibco-cloud-select-table.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         TibcoCloudTableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         TibcoCloudTableComponent:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TibcoCloudTableDataSource\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TibcoCloudTableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         TibcoCloudTableComponent:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         TibcoCloudTableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         TibcoCloudTableComponent:21\n\n                            \n                        \n\n                \n                    \n                        Columns displayed in the table. Columns IDs can be added, removed, or reordered. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '_' + Math.random().toString(36).substr(2, 9)\n                        \n                    \n                            \n                                \n                                    Inherited from         TibcoCloudTableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         TibcoCloudTableComponent:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TibcoCloudTableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         TibcoCloudTableComponent:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSort\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSort)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TibcoCloudTableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         TibcoCloudTableComponent:14\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {TibcoCloudTableComponent} from '../tibco-cloud-table/tibco-cloud-table.component';\nimport {LogService} from '../../services/tc-logging.service';\n\n@Component({\n  selector: 'tc-tibco-cloud-select-table',\n  templateUrl: './tibco-cloud-select-table.component.html',\n  styleUrls: ['./tibco-cloud-select-table.component.css']\n})\nexport class TibcoCloudSelectTableComponent extends TibcoCloudTableComponent {\n\n  @Output() selectedlines: EventEmitter = new EventEmitter();\n\n  selected = {};\n\n  highlight(element) {\n    element.highlighted = !element.highlighted;\n  }\n\n  constructor(private logger: LogService) { /*, private tcfunctions: TcFunctionsService) {*/\n    super();\n    logger.info('Select Table Started... ');\n  }\n\n\n  public clicked(row) {\n    // console.log(row);\n    const myData = JSON.parse(JSON.stringify(this.dataSource.data));\n    // console.log(this.dataSource);\n    const selectedArray = new Array();\n    for (const line of myData) {\n      // console.log('s:' , line);\n      if (line.highlighted) {\n        delete line['hovered'];\n        delete line['highlighted'];\n        selectedArray.push(line);\n      }\n\n    }\n    // console.log('Selected Array: ' , selectedArray);\n    this.selected = JSON.stringify(selectedArray);\n    this.selectedlines.emit(this.selected);\n  }\n\n\n}\n\n    \n\n    \n        \n  \n    \n      {{camelCaseTW(column.header)}}\n      {{ column.cell(row) }}\n    \n    \n    \n\n\n    10\" -->\n -->\n  \n  \n\n-->\n\n    \n\n    \n                \n                    ./tibco-cloud-select-table.component.css\n                \n                .tcst-full-width-table {\n  width: 100%;\n}\n\n.mat-row.hovered {\n  background: #eee;\n  cursor: pointer;\n}\n\n.mat-row.highlighted {\n  background: #999;\n}\n\n.tcst-header{\n  /*\n  background-color: #d0d5e2;\n  font-size: 16px;*/\n  background: #0081cb;\n  color:white;\n  padding:5px 30px;\n  display:flex;\n  align-items: center;\n}\n\n.tcst-header:hover{\n  background-color: #229be0;\n}\n\n.tcstgray {\n  background-color: #f5f5f5;\n}\n\n.tcst-hide{\n  display: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{camelCaseTW(column.header)}}      {{ column.cell(row) }}                10\" --> -->    -->'\n    var COMPONENTS = [{'name': 'TibcoCloudConfigurationComponent', 'selector': 'tc-tibco-cloud-configuration'},{'name': 'TibcoCloudErrorComponent', 'selector': 'laapp-error'},{'name': 'TibcoCloudLoginComponent', 'selector': 'tc-tibco-cloud-login'},{'name': 'TibcoCloudMenuBarComponent', 'selector': 'tc-tibco-cloud-menu-bar'},{'name': 'TibcoCloudMultipleSubscriptionComponent', 'selector': 'tc-tibco-cloud-multiple-subscription'},{'name': 'TibcoCloudNavbarComponent', 'selector': 'tc-tibco-cloud-navbar'},{'name': 'TibcoCloudNewElementComponent', 'selector': 'tc-tibco-cloud-new-element'},{'name': 'TibcoCloudSelectTableComponent', 'selector': 'tc-tibco-cloud-select-table'},{'name': 'TibcoCloudSettingLandingComponent', 'selector': 'tc-tibco-cloud-setting-landing'},{'name': 'TibcoCloudSettingMenuEntryComponent', 'selector': 'tc-tibco-cloud-setting-menu-entry'},{'name': 'TibcoCloudSettingsGeneralComponent', 'selector': 'tc-tibco-cloud-settings-general'},{'name': 'TibcoCloudSplashScreenComponent', 'selector': 'tc-tibco-cloud-splash-screen'},{'name': 'TibcoCloudTableComponent', 'selector': 'tc-tibco-cloud-table'},{'name': 'TibcoCloudWidgetHeaderComponent', 'selector': 'tc-tibco-cloud-widget-header'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[tcOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'TibcoCloudSelectTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TibcoCloudSettingLandingComponent.html":{"url":"components/TibcoCloudSettingLandingComponent.html","title":"component - TibcoCloudSettingLandingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TibcoCloudSettingLandingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/tibco-cloud-setting-landing/tibco-cloud-setting-landing.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tc-tibco-cloud-setting-landing\n            \n\n            \n                styleUrls\n                ./tibco-cloud-setting-landing.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tibco-cloud-setting-landing.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                allRoles\n                            \n                            \n                                    Private\n                                claims\n                            \n                            \n                                compareObjects\n                            \n                            \n                                    Public\n                                landingPages\n                            \n                            \n                                    Private\n                                landingPagesConfig\n                            \n                            \n                                runNewConfiguration\n                            \n                            \n                                    Private\n                                sandboxId\n                            \n                            \n                                    Public\n                                selectedRole\n                            \n                            \n                                    Public\n                                selectedWelcomePage\n                            \n                            \n                                    Private\n                                uiAppId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                runDeleteConfiguration\n                            \n                            \n                                runSaveFunction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, generalLandingPageConfigService: TcGeneralLandingPageConfigService, snackBar: MatSnackBar, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/tibco-cloud-setting-landing/tibco-cloud-setting-landing.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        generalLandingPageConfigService\n                                                  \n                                                        \n                                                                        TcGeneralLandingPageConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/tibco-cloud-setting-landing/tibco-cloud-setting-landing.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runDeleteConfiguration\n                        \n                        \n                    \n                \n            \n            \n                \nrunDeleteConfiguration()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/tibco-cloud-setting-landing/tibco-cloud-setting-landing.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runSaveFunction\n                        \n                        \n                    \n                \n            \n            \n                \nrunSaveFunction()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/tibco-cloud-setting-landing/tibco-cloud-setting-landing.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            allRoles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoleAttribute[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-setting-landing/tibco-cloud-setting-landing.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            claims\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Claim\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-setting-landing/tibco-cloud-setting-landing.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            compareObjects\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-setting-landing/tibco-cloud-setting-landing.component.ts:94\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            landingPages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LandingPageConfig[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-setting-landing/tibco-cloud-setting-landing.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            landingPagesConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GeneralLandingPageConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-setting-landing/tibco-cloud-setting-landing.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            runNewConfiguration\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-setting-landing/tibco-cloud-setting-landing.component.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sandboxId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-setting-landing/tibco-cloud-setting-landing.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedRole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoleAttribute[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-setting-landing/tibco-cloud-setting-landing.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedWelcomePage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LandingPageConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-setting-landing/tibco-cloud-setting-landing.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            uiAppId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-setting-landing/tibco-cloud-setting-landing.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { LandingPageConfig, LandingPageItemConfig, GeneralLandingPageConfig } from '../../models/tc-general-landing-page-config';\nimport { TcGeneralLandingPageConfigService } from '../../services/tc-general-landing-page-config.service';\nimport { Claim } from '../../models/tc-login';\nimport { MatSnackBar, MatDialog } from '@angular/material';\nimport { TibcoCloudNewElementComponent } from '../tibco-cloud-new-element/tibco-cloud-new-element.component';\nimport { RoleAttribute } from '../../models/tc-general-config';\n\n@Component({\n  selector: 'tc-tibco-cloud-setting-landing',\n  templateUrl: './tibco-cloud-setting-landing.component.html',\n  styleUrls: ['./tibco-cloud-setting-landing.component.css']\n})\nexport class TibcoCloudSettingLandingComponent implements OnInit {\n\n    private claims: Claim;\n    private landingPagesConfig: GeneralLandingPageConfig;\n    private sandboxId: number;\n    private uiAppId: string;\n\n    public landingPages: LandingPageConfig[];\n    public selectedWelcomePage: LandingPageConfig;\n    public allRoles: RoleAttribute[];\n    public selectedRole: RoleAttribute[];\n\n    constructor(\n        private route: ActivatedRoute,\n        private generalLandingPageConfigService: TcGeneralLandingPageConfigService,\n        private snackBar: MatSnackBar,\n        private dialog: MatDialog\n    ) { }\n\n    ngOnInit() {\n        this.landingPagesConfig = this.route.snapshot.data.landingPagesConfigHolder;\n        this.landingPages = this.landingPagesConfig.landingPage;\n        this.allRoles = this.route.snapshot.data.allRolesHolder.roles.filter(element => !element.configuration);\n\n        this.sandboxId = this.route.snapshot.data.claims.primaryProductionSandbox.id;\n        this.uiAppId = 'processdiscovery1';\n    }\n\n    runSaveFunction(){\n        this.generalLandingPageConfigService.updateGeneralLandingPageConfig(this.sandboxId, this.uiAppId, this.landingPagesConfig, this.landingPagesConfig.id).subscribe(\n            result => {\n                this.snackBar.open('Landing Pages configuration saved', 'OK', {\n                    duration: 3000\n                });\n            },\n            err => {\n                this.snackBar.open('Error saving Landing Pages configuration', 'OK', {\n                    duration: 3000\n                });\n            }\n        );\n    }\n\n    runDeleteConfiguration(){\n        const pages = this.landingPages;\n        pages.forEach(element => {\n            if (element == this.selectedWelcomePage){\n                const index = pages.indexOf(element, 0);\n                pages.splice(index, 1);\n                this.selectedWelcomePage = undefined;\n            }\n        });\n    }\n\n    runNewConfiguration = ():void => {\n\n        const dialogRef = this.dialog.open(TibcoCloudNewElementComponent, {\n            width: '50%',\n            height: '30%',\n            maxWidth: '100vw',\n            maxHeight: '100vh',\n            panelClass: 'tcs-style-dialog',\n            data: { resourceType: 'Landing Page' }\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                const newElement = new LandingPageConfig().deserialize({\n                    key: result.id,\n                    description: result.name,\n                    highlights: [new LandingPageItemConfig(), new LandingPageItemConfig(), new LandingPageItemConfig()]\n                });\n\n                this.landingPages.push(newElement);\n                this.selectedWelcomePage = newElement;\n            }\n        });\n    }\n\n    compareObjects = (o1: string, o2: string): boolean => {\n        return o1 === o2;\n    }\n\n}\n\n    \n\n    \n        \n    \n    \n        \n            \n                You can manage the configuration for the landing pages here.\n                \n                \n                    Welcome Page Configuration\n                    \n                        \n                            {{landingPage.key}}-{{landingPage.description}}\n                        \n                    \n                \n\n                \n                    \n                        \n                            \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                        Used in roles\n                        \n                            {{role.display}}\n                        \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            \n                        \n                        \n                            \n                        \n                        \n                            \n                        \n                    \n                \n            \n        \n        \n        \n            Delete\n            New\n            Save\n        \n    \n\n    \n\n    \n                \n                    ./tibco-cloud-setting-landing.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            You can manage the configuration for the landing pages here.                                                    Welcome Page Configuration                                                                        {{landingPage.key}}-{{landingPage.description}}sed in roles                                                    {{role.display}}                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Delete            New            Save            '\n    var COMPONENTS = [{'name': 'TibcoCloudConfigurationComponent', 'selector': 'tc-tibco-cloud-configuration'},{'name': 'TibcoCloudErrorComponent', 'selector': 'laapp-error'},{'name': 'TibcoCloudLoginComponent', 'selector': 'tc-tibco-cloud-login'},{'name': 'TibcoCloudMenuBarComponent', 'selector': 'tc-tibco-cloud-menu-bar'},{'name': 'TibcoCloudMultipleSubscriptionComponent', 'selector': 'tc-tibco-cloud-multiple-subscription'},{'name': 'TibcoCloudNavbarComponent', 'selector': 'tc-tibco-cloud-navbar'},{'name': 'TibcoCloudNewElementComponent', 'selector': 'tc-tibco-cloud-new-element'},{'name': 'TibcoCloudSelectTableComponent', 'selector': 'tc-tibco-cloud-select-table'},{'name': 'TibcoCloudSettingLandingComponent', 'selector': 'tc-tibco-cloud-setting-landing'},{'name': 'TibcoCloudSettingMenuEntryComponent', 'selector': 'tc-tibco-cloud-setting-menu-entry'},{'name': 'TibcoCloudSettingsGeneralComponent', 'selector': 'tc-tibco-cloud-settings-general'},{'name': 'TibcoCloudSplashScreenComponent', 'selector': 'tc-tibco-cloud-splash-screen'},{'name': 'TibcoCloudTableComponent', 'selector': 'tc-tibco-cloud-table'},{'name': 'TibcoCloudWidgetHeaderComponent', 'selector': 'tc-tibco-cloud-widget-header'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[tcOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'TibcoCloudSettingLandingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TibcoCloudSettingMenuEntryComponent.html":{"url":"components/TibcoCloudSettingMenuEntryComponent.html","title":"component - TibcoCloudSettingMenuEntryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TibcoCloudSettingMenuEntryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/tibco-cloud-setting-menu-entry/tibco-cloud-setting-menu-entry.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tc-tibco-cloud-setting-menu-entry\n            \n\n            \n                styleUrls\n                ./tibco-cloud-setting-menu-entry.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tibco-cloud-setting-menu-entry.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                viewButtonClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                options\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                configureOption\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/tibco-cloud-setting-menu-entry/tibco-cloud-setting-menu-entry.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-setting-menu-entry/tibco-cloud-setting-menu-entry.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-setting-menu-entry/tibco-cloud-setting-menu-entry.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-setting-menu-entry/tibco-cloud-setting-menu-entry.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        configureOption\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-setting-menu-entry/tibco-cloud-setting-menu-entry.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/tibco-cloud-setting-menu-entry/tibco-cloud-setting-menu-entry.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            viewButtonClick\n                        \n                        \n                    \n                \n            \n            \n                \nviewButtonClick(id)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/tibco-cloud-setting-menu-entry/tibco-cloud-setting-menu-entry.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'tc-tibco-cloud-setting-menu-entry',\n    templateUrl: './tibco-cloud-setting-menu-entry.component.html',\n    styleUrls: ['./tibco-cloud-setting-menu-entry.component.css']\n})\nexport class TibcoCloudSettingMenuEntryComponent implements OnInit {\n\n    @Input() icon: string;\n    @Input() title: string;\n    @Input() options: string[];\n    @Output() configureOption: EventEmitter = new EventEmitter();\n\n    constructor() { }\n\n    viewButtonClick(id) {\n      this.configureOption.emit(id);\n    }\n\n    ngOnInit() {\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        {{title}}\n        \n            {{option}}\n        \n    \n\n\n    \n\n    \n                \n                    ./tibco-cloud-setting-menu-entry.component.css\n                \n                .starters-custom-layout-box-option:hover {\n    cursor: pointer;\n}\n\n.underlying-capability-text {\n    font-size: 14px;\n    font-weight: 600;\n    font-style: normal;\n    font-stretch: normal;\n    line-height: normal;\n    letter-spacing: 0.3px;\n    color: #062e79;\n}\n\n.underlying-capability-link {\n    font-size: 12px;\n    font-weight: normal;\n    font-style: normal;\n    font-stretch: normal;\n    line-height: normal;\n    letter-spacing: 0.3px;\n    color: #0081cb;\n    padding-bottom: 20px;\n}\n\n:host ::ng-deep .padding-icon{\n    padding-right: 15px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{title}}                    {{option}}            '\n    var COMPONENTS = [{'name': 'TibcoCloudConfigurationComponent', 'selector': 'tc-tibco-cloud-configuration'},{'name': 'TibcoCloudErrorComponent', 'selector': 'laapp-error'},{'name': 'TibcoCloudLoginComponent', 'selector': 'tc-tibco-cloud-login'},{'name': 'TibcoCloudMenuBarComponent', 'selector': 'tc-tibco-cloud-menu-bar'},{'name': 'TibcoCloudMultipleSubscriptionComponent', 'selector': 'tc-tibco-cloud-multiple-subscription'},{'name': 'TibcoCloudNavbarComponent', 'selector': 'tc-tibco-cloud-navbar'},{'name': 'TibcoCloudNewElementComponent', 'selector': 'tc-tibco-cloud-new-element'},{'name': 'TibcoCloudSelectTableComponent', 'selector': 'tc-tibco-cloud-select-table'},{'name': 'TibcoCloudSettingLandingComponent', 'selector': 'tc-tibco-cloud-setting-landing'},{'name': 'TibcoCloudSettingMenuEntryComponent', 'selector': 'tc-tibco-cloud-setting-menu-entry'},{'name': 'TibcoCloudSettingsGeneralComponent', 'selector': 'tc-tibco-cloud-settings-general'},{'name': 'TibcoCloudSplashScreenComponent', 'selector': 'tc-tibco-cloud-splash-screen'},{'name': 'TibcoCloudTableComponent', 'selector': 'tc-tibco-cloud-table'},{'name': 'TibcoCloudWidgetHeaderComponent', 'selector': 'tc-tibco-cloud-widget-header'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[tcOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'TibcoCloudSettingMenuEntryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TibcoCloudSettingsGeneralComponent.html":{"url":"components/TibcoCloudSettingsGeneralComponent.html","title":"component - TibcoCloudSettingsGeneralComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TibcoCloudSettingsGeneralComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/tibco-cloud-settings-general/tibco-cloud-settings-general.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tc-tibco-cloud-settings-general\n            \n\n            \n                styleUrls\n                ./tibco-cloud-settings-general.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tibco-cloud-settings-general.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                applicationTitle\n                            \n                            \n                                    Public\n                                claims\n                            \n                            \n                                    Public\n                                displayName\n                            \n                            \n                                    Public\n                                documentationURL\n                            \n                            \n                                    Public\n                                generalConfig\n                            \n                            \n                                    Public\n                                panelOpenState\n                            \n                            \n                                    Public\n                                roles\n                            \n                            \n                                    Public\n                                runSaveFunction\n                            \n                            \n                                    Public\n                                sandboxId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getRoute\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, generalConfigService: TcGeneralConfigService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/tibco-cloud-settings-general/tibco-cloud-settings-general.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        generalConfigService\n                                                  \n                                                        \n                                                                        TcGeneralConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getRoute\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRoute()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/tibco-cloud-settings-general/tibco-cloud-settings-general.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ActivatedRoute\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/tibco-cloud-settings-general/tibco-cloud-settings-general.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            applicationTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-settings-general/tibco-cloud-settings-general.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            claims\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Claim\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-settings-general/tibco-cloud-settings-general.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            displayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-settings-general/tibco-cloud-settings-general.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            documentationURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-settings-general/tibco-cloud-settings-general.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            generalConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GeneralConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-settings-general/tibco-cloud-settings-general.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            panelOpenState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-settings-general/tibco-cloud-settings-general.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            roles\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-settings-general/tibco-cloud-settings-general.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            runSaveFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-settings-general/tibco-cloud-settings-general.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sandboxId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-settings-general/tibco-cloud-settings-general.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GeneralConfig } from '../../models/tc-general-config';\nimport { TcGeneralConfigService } from '../../services/tc-general-config.service';\nimport { Claim } from '../../models/tc-login';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n    selector: 'tc-tibco-cloud-settings-general',\n    templateUrl: './tibco-cloud-settings-general.component.html',\n    styleUrls: ['./tibco-cloud-settings-general.component.css']\n})\nexport class TibcoCloudSettingsGeneralComponent implements OnInit {\n\n    public applicationTitle: string;\n    public roles;\n    public displayName: boolean;\n    public documentationURL: string;\n    public panelOpenState = false;\n    public generalConfig: GeneralConfig;\n    public sandboxId: number;\n    public claims: Claim;\n\n    constructor(protected route: ActivatedRoute, protected generalConfigService: TcGeneralConfigService, protected snackBar: MatSnackBar) { }\n\n    ngOnInit() {\n      this.generalConfig = this.route.snapshot.data.generalConfigHolder;\n      this.claims = this.route.snapshot.data.claims;\n      this.sandboxId = Number(this.claims.primaryProductionSandbox.id).valueOf();\n\n        this.applicationTitle = this.generalConfig.applicationTitle;\n        // this.roles = this.generalConfig.roles;\n        this.displayName = this.generalConfig.displayName;\n        this.documentationURL = this.generalConfig.documentationUrl;\n    }\n\n    protected getRoute(): ActivatedRoute {\n      return this.route;\n    }\n\n    public runSaveFunction = () => {\n      this.generalConfigService.updateGeneralConfig(this.sandboxId, this.generalConfig.uiAppId, this.generalConfig, this.generalConfig.id).subscribe(\n          result => {\n              this.snackBar.open('General configuration saved', 'OK', {\n                  duration: 3000\n              });\n          },\n          error => {\n              this.snackBar.open('Error saving general configuration saved', 'OK', {\n                  duration: 3000\n              });\n          }\n      );\n    }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        You can some of the default Application Settings here.\n        \n        \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n\n        \n        \n          \n            \n              Advanced Settings\n            \n            \n              \n            \n          \n        \n      \n\n    \n    \n    \n      Save\n    \n  \n\n\n    \n\n    \n                \n                    ./tibco-cloud-settings-general.component.css\n                \n                .tcs-app-form-field {\n  min-height: 57px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      You can some of the default Application Settings here.                                                                                                                                                                                                                    Advanced Settings                                                                                            Save      '\n    var COMPONENTS = [{'name': 'TibcoCloudConfigurationComponent', 'selector': 'tc-tibco-cloud-configuration'},{'name': 'TibcoCloudErrorComponent', 'selector': 'laapp-error'},{'name': 'TibcoCloudLoginComponent', 'selector': 'tc-tibco-cloud-login'},{'name': 'TibcoCloudMenuBarComponent', 'selector': 'tc-tibco-cloud-menu-bar'},{'name': 'TibcoCloudMultipleSubscriptionComponent', 'selector': 'tc-tibco-cloud-multiple-subscription'},{'name': 'TibcoCloudNavbarComponent', 'selector': 'tc-tibco-cloud-navbar'},{'name': 'TibcoCloudNewElementComponent', 'selector': 'tc-tibco-cloud-new-element'},{'name': 'TibcoCloudSelectTableComponent', 'selector': 'tc-tibco-cloud-select-table'},{'name': 'TibcoCloudSettingLandingComponent', 'selector': 'tc-tibco-cloud-setting-landing'},{'name': 'TibcoCloudSettingMenuEntryComponent', 'selector': 'tc-tibco-cloud-setting-menu-entry'},{'name': 'TibcoCloudSettingsGeneralComponent', 'selector': 'tc-tibco-cloud-settings-general'},{'name': 'TibcoCloudSplashScreenComponent', 'selector': 'tc-tibco-cloud-splash-screen'},{'name': 'TibcoCloudTableComponent', 'selector': 'tc-tibco-cloud-table'},{'name': 'TibcoCloudWidgetHeaderComponent', 'selector': 'tc-tibco-cloud-widget-header'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[tcOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'TibcoCloudSettingsGeneralComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TibcoCloudSplashScreenComponent.html":{"url":"components/TibcoCloudSplashScreenComponent.html","title":"component - TibcoCloudSplashScreenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TibcoCloudSplashScreenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/tibco-cloud-splash-screen/tibco-cloud-splash-screen.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tc-tibco-cloud-splash-screen\n            \n\n            \n                styleUrls\n                tibco-cloud-splash-screen.component.css\n            \n\n\n\n            \n                templateUrl\n                tibco-cloud-splash-screen.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getStartedClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                backGroundImage\n                            \n                            \n                                highlights\n                            \n                            \n                                subTitle\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                getStartedEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/tibco-cloud-splash-screen/tibco-cloud-splash-screen.component.ts:20\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        backGroundImage\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-splash-screen/tibco-cloud-splash-screen.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        highlights\n                    \n                \n                \n                    \n                        Type :         LandingPageItemConfig[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-splash-screen/tibco-cloud-splash-screen.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        subTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-splash-screen/tibco-cloud-splash-screen.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-splash-screen/tibco-cloud-splash-screen.component.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        getStartedEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-splash-screen/tibco-cloud-splash-screen.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/tibco-cloud-splash-screen/tibco-cloud-splash-screen.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStartedClick\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-splash-screen/tibco-cloud-splash-screen.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { TcCoreCommonFunctions } from '../../common/tc-core-common-functions';\nimport { Location } from '@angular/common';\nimport { LandingPageItemConfig } from '../../models/tc-general-landing-page-config';\n\n/**\n * @title Dialog Overview\n */\n@Component({\n    selector: 'tc-tibco-cloud-splash-screen',\n    templateUrl: 'tibco-cloud-splash-screen.component.html',\n    styleUrls: ['tibco-cloud-splash-screen.component.css'],\n})\nexport class TibcoCloudSplashScreenComponent implements OnInit {\n\n    @Input() title: string;\n    @Input() subTitle: string;\n    @Input() backGroundImage: string;\n    @Input() highlights: LandingPageItemConfig[];\n    @Output() getStartedEvent: EventEmitter = new EventEmitter();\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n    getStartedClick = (): void => {\n        this.getStartedEvent.emit('test');\n    }\n\n\n}\n\n    \n\n    \n        \n \n    \n      {{title}}\n      \n        {{subTitle}}\n      \n      \n        \n          \n          \n            \n              \n                \n              \n            \n            \n              {{highlight.title}}\n              {{highlight.content}}\n            \n          \n          \n        Get Started\n      \n    \n  \n\n\n\n\n    \n\n    \n                \n                    tibco-cloud-splash-screen.component.css\n                \n                /*\n@font-face {\n  font-family: Source Sans Pro;\n  src: url(/assets/fonts/tibco_fonts_Source_Sans_Pro_Source Sans Pro-Regular.ttf);\n}\n\n@font-face {\n  font-family: Source Sans ProBold;\n  src: url(/assets/fonts/tibco_fonts_Source_Sans_Pro_Source Sans Pro-Bold.ttf);\n}*/\n\n.splash-welcome {\n  font-family: Source Sans Pro;\n  font-size: 48px;\n  font-weight: 300;\n  font-style: normal;\n  font-stretch: normal;\n  line-height: normal;\n  letter-spacing: 0.3px;\n  text-align: center;\n  color: #ffffff;\n  text-shadow: 0 2px 8px rgba(6, 46, 121, 0.5);\n  padding-top: 88px;\n}\n\n.splash-welcome-message {\n  font-family: Source Sans Pro;\n  font-size: 20px;\n  font-weight: normal;\n  font-style: normal;\n  font-stretch: normal;\n  line-height: normal;\n  letter-spacing: 0.1px;\n  text-align: center;\n  color: #ffffff;\n  text-shadow: 0 2px 8px rgba(6, 46, 121, 0.5);\n  padding-top: 19px;\n  padding-bottom: 32px;\n}\n\n\n.splash-modal {\n  margin: auto;\n  width: 676px;\n  border-radius: 10px;\n  background-color: #ffffff;\n  box-shadow: 10px 10px 20px 0 rgba(33, 33, 33, 0.04);\n}\n\n.splash-oval {\n  width: 86px;\n  height: 86px;\n  border: solid 3px #349bed;\n  background-color: #349bed;\n  border-radius: 43px;\n  align-content: center;\n  background-position: center;\n  background-repeat: no-repeat;\n}\n\n.splash-img {\n  max-width: 60px;\n  /*max-height: 60px;*/\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 6px;\n  margin-bottom: auto;\n  display: block ;\n  vertical-align: center;\n}\n\n.splash-highlightstable {\n  border: 0;\n  padding-top: 3px;\n  padding-bottom: 0px;\n  border-spacing: 45px;\n  text-align: left;\n  border-collapse: separate;\n}\n\n.splash-get-started-button {\n  width: 117px;\n  height: 40px;\n  border-radius: 3px;\n  background-color: #349bed;\n  border: solid 1px #349bed;\n  margin-bottom: 58px;\n  font-family: Source Sans Pro;\n  font-size: 16px;\n  font-weight: 600;\n  font-style: normal;\n  font-stretch: normal;\n  line-height: normal;\n  letter-spacing: 0.3px;\n  text-align: center;\n  color: #ffffff;\n}\n.splash-get-started-button:hover{\n  border: solid 1px #74bee4;\n  background-color: #74bee4;\n}\n\n.splash-highlight-item-title {\n  font-family: Source Sans Pro;\n  font-size: 16px;\n  font-weight: bold;\n  font-style: normal;\n  font-stretch: normal;\n  line-height: 1.25;\n  letter-spacing: 0.1px;\n  color: #062e79;\n}\n\n.splash-highlight-item-content {\n  font-family: Source Sans Pro;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  font-stretch: normal;\n  line-height: 1.25;\n  letter-spacing: 0.1px;\n  color: #062e79;\n  padding-top: 12px;\n} \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           {{title}}              {{subTitle}}                                                                                                                                      {{highlight.title}}              {{highlight.content}}                                        Get Started            '\n    var COMPONENTS = [{'name': 'TibcoCloudConfigurationComponent', 'selector': 'tc-tibco-cloud-configuration'},{'name': 'TibcoCloudErrorComponent', 'selector': 'laapp-error'},{'name': 'TibcoCloudLoginComponent', 'selector': 'tc-tibco-cloud-login'},{'name': 'TibcoCloudMenuBarComponent', 'selector': 'tc-tibco-cloud-menu-bar'},{'name': 'TibcoCloudMultipleSubscriptionComponent', 'selector': 'tc-tibco-cloud-multiple-subscription'},{'name': 'TibcoCloudNavbarComponent', 'selector': 'tc-tibco-cloud-navbar'},{'name': 'TibcoCloudNewElementComponent', 'selector': 'tc-tibco-cloud-new-element'},{'name': 'TibcoCloudSelectTableComponent', 'selector': 'tc-tibco-cloud-select-table'},{'name': 'TibcoCloudSettingLandingComponent', 'selector': 'tc-tibco-cloud-setting-landing'},{'name': 'TibcoCloudSettingMenuEntryComponent', 'selector': 'tc-tibco-cloud-setting-menu-entry'},{'name': 'TibcoCloudSettingsGeneralComponent', 'selector': 'tc-tibco-cloud-settings-general'},{'name': 'TibcoCloudSplashScreenComponent', 'selector': 'tc-tibco-cloud-splash-screen'},{'name': 'TibcoCloudTableComponent', 'selector': 'tc-tibco-cloud-table'},{'name': 'TibcoCloudWidgetHeaderComponent', 'selector': 'tc-tibco-cloud-widget-header'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[tcOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'TibcoCloudSplashScreenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TibcoCloudTableComponent.html":{"url":"components/TibcoCloudTableComponent.html","title":"component - TibcoCloudTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TibcoCloudTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/tibco-cloud-table/tibco-cloud-table.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tc-tibco-cloud-table\n            \n\n            \n                styleUrls\n                ./tibco-cloud-table.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tibco-cloud-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                id\n                            \n                            \n                                paginator\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                camelCaseTW\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateTable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                jsonSource\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        jsonSource\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-table/tibco-cloud-table.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            camelCaseTW\n                        \n                        \n                    \n                \n            \n            \n                \ncamelCaseTW(header: string | any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/tibco-cloud-table/tibco-cloud-table.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    header\n                                    \n                                            string | any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/tibco-cloud-table/tibco-cloud-table.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/tibco-cloud-table/tibco-cloud-table.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTable\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTable()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/tibco-cloud-table/tibco-cloud-table.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-table/tibco-cloud-table.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TibcoCloudTableDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-table/tibco-cloud-table.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-table/tibco-cloud-table.component.ts:21\n                            \n                        \n\n                \n                    \n                        Columns displayed in the table. Columns IDs can be added, removed, or reordered. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '_' + Math.random().toString(36).substr(2, 9)\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-table/tibco-cloud-table.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-table/tibco-cloud-table.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSort\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSort)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-table/tibco-cloud-table.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild} from '@angular/core';\nimport {MatPaginator, MatSort} from '@angular/material';\nimport {TibcoCloudTableDataSource} from './tibco-cloud-table-datasource';\nimport {TcCoreCommonFunctions} from '../../common/tc-core-common-functions';\n\n@Component({\n  selector: 'tc-tibco-cloud-table',\n  templateUrl: './tibco-cloud-table.component.html',\n  styleUrls: ['./tibco-cloud-table.component.css']\n})\nexport class TibcoCloudTableComponent implements OnInit, OnChanges {\n  @Input() jsonSource: string;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  dataSource: TibcoCloudTableDataSource;\n\n  id: string = '_' + Math.random().toString(36).substr(2, 9);\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = [];\n  columns = [];\n\n  ngOnInit() {\n    this.updateTable();\n\n\n  }\n  ngOnChanges(changes) {\n    console.log('Table Changed');\n    this.updateTable();\n\n  }\n\n\n  updateTable() {\n    // console.log('JSONSource: ', this.jsonSource);\n    const parsedJsonSource = JSON.parse(this.jsonSource);\n    // console.log('Parsed JSON Source: ', parsedJsonSource);\n    this.dataSource = new TibcoCloudTableDataSource(this.paginator, this.sort, parsedJsonSource);\n    const myColumns = [];\n    if (parsedJsonSource.length != null) {\n      if (parsedJsonSource.length > 0) {\n        // console.log(parsedJsonSource[0]);\n        if (parsedJsonSource[0] != null) {\n          const myColumns = [];\n          let m = 0;\n          for (const headerName in parsedJsonSource[0]) {\n            if (parsedJsonSource[0].hasOwnProperty(headerName)) {\n              // console.log(m + ' headerName:', headerName);\n              this.displayedColumns.push(headerName);\n              myColumns[m] = {};\n              myColumns[m]['columnDef'] = headerName;\n              myColumns[m]['header'] = headerName;\n              myColumns[m].cell = function (element) {\n                return `${element[headerName]}`;\n              };\n              this.columns = myColumns;\n            }\n            m++;\n          }\n        }\n        // console.log('myColums:', this.columns);\n        // this.columDefArray = this.columns;\n      }\n    }\n  }\n\n\n  /*\n  private log(...m){\n    console.log('TIBCO CLOUD TABLE] ' , m);\n  }*/\n\n  camelCaseTW(header: string | any) {\n\n    return TcCoreCommonFunctions.camelCaseToWords(header);\n\n\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{camelCaseTW(column.header)}}\n      {{ column.cell(row) }}\n    \n    \n    \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./tibco-cloud-table.component.css\n                \n                .tct-full-width-table {\n  width: 100%;\n}\n.tct-header{\n  /*\n  background-color: #d0d5e2;\n  font-size: 16px;\n*/\n  background: #0081cb;\n  color:white;\n  padding:5px 30px;\n  display:flex;\n  align-items: center;\n}\n\n.tct-header:hover{\n  background-color: #229be0;\n}\n\n.tctgray {\n  background-color: #f5f5f5;\n}\n\n.tct-hide{\n  display: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{camelCaseTW(column.header)}}      {{ column.cell(row) }}                  '\n    var COMPONENTS = [{'name': 'TibcoCloudConfigurationComponent', 'selector': 'tc-tibco-cloud-configuration'},{'name': 'TibcoCloudErrorComponent', 'selector': 'laapp-error'},{'name': 'TibcoCloudLoginComponent', 'selector': 'tc-tibco-cloud-login'},{'name': 'TibcoCloudMenuBarComponent', 'selector': 'tc-tibco-cloud-menu-bar'},{'name': 'TibcoCloudMultipleSubscriptionComponent', 'selector': 'tc-tibco-cloud-multiple-subscription'},{'name': 'TibcoCloudNavbarComponent', 'selector': 'tc-tibco-cloud-navbar'},{'name': 'TibcoCloudNewElementComponent', 'selector': 'tc-tibco-cloud-new-element'},{'name': 'TibcoCloudSelectTableComponent', 'selector': 'tc-tibco-cloud-select-table'},{'name': 'TibcoCloudSettingLandingComponent', 'selector': 'tc-tibco-cloud-setting-landing'},{'name': 'TibcoCloudSettingMenuEntryComponent', 'selector': 'tc-tibco-cloud-setting-menu-entry'},{'name': 'TibcoCloudSettingsGeneralComponent', 'selector': 'tc-tibco-cloud-settings-general'},{'name': 'TibcoCloudSplashScreenComponent', 'selector': 'tc-tibco-cloud-splash-screen'},{'name': 'TibcoCloudTableComponent', 'selector': 'tc-tibco-cloud-table'},{'name': 'TibcoCloudWidgetHeaderComponent', 'selector': 'tc-tibco-cloud-widget-header'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[tcOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'TibcoCloudTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TibcoCloudTableDataSource.html":{"url":"classes/TibcoCloudTableDataSource.html","title":"class - TibcoCloudTableDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TibcoCloudTableDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/tibco-cloud-table/tibco-cloud-table-datasource.ts\n        \n\n            \n                Description\n            \n            \n                Data source for the TibcoCloudTable view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).\n\n            \n\n            \n                Extends\n            \n            \n                    DataSource\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                disconnect\n                            \n                            \n                                    Private\n                                getPagedData\n                            \n                            \n                                    Private\n                                getSortedData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(paginator: MatPaginator, sort: MatSort, d)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/tibco-cloud-table/tibco-cloud-table-datasource.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paginator\n                                                  \n                                                        \n                                                                    MatPaginator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sort\n                                                  \n                                                        \n                                                                    MatSort\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        d\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-table/tibco-cloud-table-datasource.ts:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \nconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/tibco-cloud-table/tibco-cloud-table-datasource.ts:29\n                \n            \n\n\n            \n                \n                    Connect this data source to the table. The table will only update when\nthe returned stream emits new items.\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        A stream of the items to be rendered.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disconnect\n                        \n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/tibco-cloud-table/tibco-cloud-table-datasource.ts:50\n                \n            \n\n\n            \n                \n                    Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getPagedData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPagedData(data: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/tibco-cloud-table/tibco-cloud-table-datasource.ts:56\n                \n            \n\n\n            \n                \n                    Paginate the data (client-side). If you're using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getSortedData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSortedData(data: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/tibco-cloud-table/tibco-cloud-table-datasource.ts:65\n                \n            \n\n\n            \n                \n                    Sort the data (client-side). If you're using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n\n/**\n * Data source for the TibcoCloudTable view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class TibcoCloudTableDataSource extends DataSource {\n  data;\n\n  constructor(private paginator: MatPaginator, private sort: MatSort, private d) {\n    super();\n    this.data = d;\n    //this._updateChangeSubscription();\n\n  }\n\n\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    // Set the paginator's length\n    this.paginator.length = this.data.length;\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: any[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: any[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      // console.log('Sort ON: ' + this.sort.active + ' A Has Property: ' + a.hasOwnProperty(this.sort.active) + ' B Has Property: ' + b.hasOwnProperty(this.sort.active) ) ;\n      if (a.hasOwnProperty(this.sort.active) && b.hasOwnProperty(this.sort.active)) {\n        return compare(a[this.sort.active], b[this.sort.active], isAsc);\n      } else {\n        return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a, b, isAsc) {\n  return (a \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TibcoCloudWidgetHeaderComponent.html":{"url":"components/TibcoCloudWidgetHeaderComponent.html","title":"component - TibcoCloudWidgetHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TibcoCloudWidgetHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/tibco-cloud-widget-header/tibco-cloud-widget-header.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tc-tibco-cloud-widget-header\n            \n\n            \n                styleUrls\n                ./tibco-cloud-widget-header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tibco-cloud-widget-header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toolbarButtonClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                headerText\n                            \n                            \n                                icon\n                            \n                            \n                                showHeader\n                            \n                            \n                                toolbarButtons\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toolbarButtonEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/tibco-cloud-widget-header/tibco-cloud-widget-header.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        headerText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-widget-header/tibco-cloud-widget-header.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-widget-header/tibco-cloud-widget-header.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showHeader\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : this.showHeader ? this.showHeader : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-widget-header/tibco-cloud-widget-header.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toolbarButtons\n                    \n                \n                \n                    \n                        Type :         ToolbarButton[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-widget-header/tibco-cloud-widget-header.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toolbarButtonEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/tibco-cloud-widget-header/tibco-cloud-widget-header.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toolbarButtonClick\n                        \n                        \n                    \n                \n            \n            \n                \ntoolbarButtonClick(id)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/tibco-cloud-widget-header/tibco-cloud-widget-header.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {ToolbarButton} from '../../models/tc-widget-header';\n\n@Component({\n  selector: 'tc-tibco-cloud-widget-header',\n  templateUrl: './tibco-cloud-widget-header.component.html',\n  styleUrls: ['./tibco-cloud-widget-header.component.css']\n})\nexport class TibcoCloudWidgetHeaderComponent {\n  @Input() headerText: string;\n  @Input() icon: string;\n  @Input() toolbarButtons: ToolbarButton[];\n  @Input() showHeader: boolean = this.showHeader ? this.showHeader : true;\n  @Output() toolbarButtonEvent: EventEmitter = new EventEmitter();\n\n  constructor() {\n  }\n\n  toolbarButtonClick(id) {\n    this.toolbarButtonEvent.emit(id);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    {{headerText}}\n  \n  \n    \n      \n    \n  \n\n\n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./tibco-cloud-widget-header.component.css\n                \n                .tcs-widget-header-icon {\n  height: 24px;\n  width: 24px;\n}\n\n.tcs-widget-toolbar-button {\n  height: 20px;\n  width: 20px;\n  margin-left: 5px;\n  margin-right: 5px;\n}\n\n:host ::ng-deep .tcs-widget-toolbar-button:hover path.svg-content {\n  fill: #0081cb;\n  cursor: pointer;\n}\n\n:host ::ng-deep .tcs-widget-toolbar-button:hover g.svg-content {\n  fill: #0081cb;\n  cursor: pointer;\n}\n\n.tcs-widget-header {\n  height: 40px;\n  border-radius: 3px 3px 0px 0px;\n  box-shadow: 0 1px 2px 0 #dedede;\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-bottom: 5px;\n}\n\n.tcs-widget-header-text {\n  margin-left: 10px;\n  font-family: Source Sans Pro;\n  font-size: 18px;\n  font-weight: 600;\n  font-style: normal;\n  font-stretch: normal;\n  line-height: 1.5;\n  letter-spacing: 0.3px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{headerText}}                            '\n    var COMPONENTS = [{'name': 'TibcoCloudConfigurationComponent', 'selector': 'tc-tibco-cloud-configuration'},{'name': 'TibcoCloudErrorComponent', 'selector': 'laapp-error'},{'name': 'TibcoCloudLoginComponent', 'selector': 'tc-tibco-cloud-login'},{'name': 'TibcoCloudMenuBarComponent', 'selector': 'tc-tibco-cloud-menu-bar'},{'name': 'TibcoCloudMultipleSubscriptionComponent', 'selector': 'tc-tibco-cloud-multiple-subscription'},{'name': 'TibcoCloudNavbarComponent', 'selector': 'tc-tibco-cloud-navbar'},{'name': 'TibcoCloudNewElementComponent', 'selector': 'tc-tibco-cloud-new-element'},{'name': 'TibcoCloudSelectTableComponent', 'selector': 'tc-tibco-cloud-select-table'},{'name': 'TibcoCloudSettingLandingComponent', 'selector': 'tc-tibco-cloud-setting-landing'},{'name': 'TibcoCloudSettingMenuEntryComponent', 'selector': 'tc-tibco-cloud-setting-menu-entry'},{'name': 'TibcoCloudSettingsGeneralComponent', 'selector': 'tc-tibco-cloud-settings-general'},{'name': 'TibcoCloudSplashScreenComponent', 'selector': 'tc-tibco-cloud-splash-screen'},{'name': 'TibcoCloudTableComponent', 'selector': 'tc-tibco-cloud-table'},{'name': 'TibcoCloudWidgetHeaderComponent', 'selector': 'tc-tibco-cloud-widget-header'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[tcOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'TibcoCloudWidgetHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ToolbarButton.html":{"url":"classes/ToolbarButton.html","title":"class - ToolbarButton","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ToolbarButton\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/tc-widget-header.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Deserializable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                enabled\n                            \n                            \n                                filled\n                            \n                            \n                                icon\n                            \n                            \n                                id\n                            \n                            \n                                tooltip\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-widget-header.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-widget-header.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-widget-header.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-widget-header.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tooltip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-widget-header.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-widget-header.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(input: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/tc-widget-header.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Deserializable} from './deserializable';\n\nexport class ToolbarButton implements Deserializable {\n  id: string;\n  icon: string;\n  visible: boolean;\n  enabled: boolean;\n  tooltip: string;\n  filled: boolean;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UiAppConfig.html":{"url":"classes/UiAppConfig.html","title":"class - UiAppConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UiAppConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/tc-app-config.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Deserializable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                applicationIds\n                            \n                            \n                                caseIconsFolderId\n                            \n                            \n                                caseTypeLabel\n                            \n                            \n                                id\n                            \n                            \n                                sandboxId\n                            \n                            \n                                typeId\n                            \n                            \n                                uiAppId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applicationIds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-app-config.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            caseIconsFolderId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-app-config.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            caseTypeLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-app-config.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-app-config.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sandboxId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-app-config.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-app-config.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uiAppId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-app-config.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(input: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/tc-app-config.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Deserializable} from './deserializable';\n\nexport class UiAppConfig implements Deserializable {\n  id: string;\n  sandboxId: number;\n  applicationIds: number[];\n  typeId: string;\n  uiAppId: string;\n  caseIconsFolderId: string;\n  caseTypeLabel: string;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\n\nexport class UiAppIdConfig implements  Deserializable {\n  uiAppId: string;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UiAppIdConfig.html":{"url":"classes/UiAppIdConfig.html","title":"class - UiAppIdConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UiAppIdConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/tc-app-config.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Deserializable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                uiAppId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uiAppId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/models/tc-app-config.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(input: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/tc-app-config.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Deserializable} from './deserializable';\n\nexport class UiAppConfig implements Deserializable {\n  id: string;\n  sandboxId: number;\n  applicationIds: number[];\n  typeId: string;\n  uiAppId: string;\n  caseIconsFolderId: string;\n  caseTypeLabel: string;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\n\nexport class UiAppIdConfig implements  Deserializable {\n  uiAppId: string;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/common/tc-core-common-functions.ts\n            \n            class\n            TcCoreCommonFunctions\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/lib/components/tibco-cloud-configuration/tibco-cloud-configuration.component.ts\n            \n            component\n            TibcoCloudConfigurationComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/lib/components/tibco-cloud-error/tibco-cloud-error.component.ts\n            \n            component\n            TibcoCloudErrorComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lib/components/tibco-cloud-login/tibco-cloud-login.component.ts\n            \n            component\n            TibcoCloudLoginComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/lib/components/tibco-cloud-menu-bar/tibco-cloud-menu-bar.component.ts\n            \n            component\n            TibcoCloudMenuBarComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/lib/components/tibco-cloud-multiple-subscription/tibco-cloud-multiple-subscription.component.ts\n            \n            component\n            TibcoCloudMultipleSubscriptionComponent\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/lib/components/tibco-cloud-navbar/tibco-cloud-navbar.component.ts\n            \n            component\n            TibcoCloudNavbarComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/components/tibco-cloud-navbar/tibco-cloud-navbar.component.ts\n            \n            variable\n            GlobalNavbar\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/components/tibco-cloud-new-element/tibco-cloud-new-element.component.ts\n            \n            component\n            TibcoCloudNewElementComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/lib/components/tibco-cloud-select-table/tibco-cloud-select-table.component.ts\n            \n            component\n            TibcoCloudSelectTableComponent\n            \n                5 %\n                (1/17)\n            \n        \n        \n            \n                \n                src/lib/components/tibco-cloud-setting-landing/tibco-cloud-setting-landing.component.ts\n            \n            component\n            TibcoCloudSettingLandingComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/lib/components/tibco-cloud-setting-menu-entry/tibco-cloud-setting-menu-entry.component.ts\n            \n            component\n            TibcoCloudSettingMenuEntryComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/lib/components/tibco-cloud-settings-general/tibco-cloud-settings-general.component.ts\n            \n            component\n            TibcoCloudSettingsGeneralComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/lib/components/tibco-cloud-splash-screen/tibco-cloud-splash-screen.component.ts\n            \n            component\n            TibcoCloudSplashScreenComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/lib/components/tibco-cloud-table/tibco-cloud-table-datasource.ts\n            \n            class\n            TibcoCloudTableDataSource\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/lib/components/tibco-cloud-table/tibco-cloud-table-datasource.ts\n            \n            function\n            compare\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/components/tibco-cloud-table/tibco-cloud-table.component.ts\n            \n            component\n            TibcoCloudTableComponent\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/lib/components/tibco-cloud-widget-header/tibco-cloud-widget-header.component.ts\n            \n            component\n            TibcoCloudWidgetHeaderComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/lib/directives/on-create.directive.ts\n            \n            directive\n            OnCreateDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lib/interceptors/authentication-error-interceptor.ts\n            \n            interceptor\n            AuthErrorInterceptor\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/interceptors/caching-interceptor.ts\n            \n            interceptor\n            CachingInterceptor\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/interceptors/mocking-interceptor.ts\n            \n            interceptor\n            MockingInterceptor\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lib/models/deserializable.ts\n            \n            interface\n            Deserializable\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/models/tc-app-config.ts\n            \n            class\n            UiAppConfig\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/lib/models/tc-app-config.ts\n            \n            class\n            UiAppIdConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/models/tc-configuration-menu-config.ts\n            \n            class\n            ConfigurationMenuConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/models/tc-configuration-menu-config.ts\n            \n            class\n            ConfigurationMenuEntry\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/models/tc-general-config.ts\n            \n            class\n            GeneralConfig\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/lib/models/tc-general-config.ts\n            \n            class\n            RoleAttribute\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/lib/models/tc-general-landing-page-config.ts\n            \n            class\n            GeneralLandingPageConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/models/tc-general-landing-page-config.ts\n            \n            class\n            LandingPageConfig\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/lib/models/tc-general-landing-page-config.ts\n            \n            class\n            LandingPageItemConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/models/tc-login.ts\n            \n            class\n            AccessToken\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/models/tc-login.ts\n            \n            class\n            AccountInfo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lib/models/tc-login.ts\n            \n            class\n            AccountsInfo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/models/tc-login.ts\n            \n            class\n            AuthInfo\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/lib/models/tc-login.ts\n            \n            class\n            Claim\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/lib/models/tc-login.ts\n            \n            class\n            Group\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/models/tc-login.ts\n            \n            class\n            LoginPrefill\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/models/tc-login.ts\n            \n            class\n            Owner\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lib/models/tc-login.ts\n            \n            class\n            Sandbox\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/lib/models/tc-login.ts\n            \n            class\n            SandboxList\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/models/tc-login.ts\n            \n            class\n            Subscription\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/models/tc-routing-actions.ts\n            \n            class\n            RouteAction\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/models/tc-shared-state.ts\n            \n            class\n            SharedStateContent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/models/tc-shared-state.ts\n            \n            class\n            SharedStateEntry\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/lib/models/tc-shared-state.ts\n            \n            class\n            SharedStateList\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/models/tc-widget-header.ts\n            \n            class\n            ToolbarButton\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/lib/pipes/duration-since.pipe.ts\n            \n            pipe\n            DurationSincePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/pipes/ellipsis.pipe.ts\n            \n            pipe\n            EllipsisPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/pipes/highlight.pipe.ts\n            \n            pipe\n            HighlightPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/pipes/order-by-date.pipe.ts\n            \n            pipe\n            OrderByDatePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/pipes/reverse.pipe.ts\n            \n            pipe\n            ReversePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/resolvers/configuration-menu-config.resolver.ts\n            \n            guard\n            ConfigurationMenuConfigResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/resolvers/general-config.resolver.ts\n            \n            guard\n            GeneralConfigResolver\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/lib/resolvers/general-landing-page-config.resolver.ts\n            \n            guard\n            GeneralLandingPageConfigResolver\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/lib/resolvers/login-prefill.resolver.ts\n            \n            guard\n            LoginPrefillResolver\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/resolvers/login-prefill.resolver.ts\n            \n            variable\n            CLIENT_ID_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/resolvers/login-prefill.resolver.ts\n            \n            variable\n            EMAIL_ID_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/services/request-cache.service.ts\n            \n            injectable\n            RequestCacheService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/services/request-cache.service.ts\n            \n            variable\n            maxAge\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/services/tc-buttons-helper.service.ts\n            \n            injectable\n            TcButtonsHelperService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lib/services/tc-general-config.service.ts\n            \n            injectable\n            TcGeneralConfigService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/services/tc-general-landing-page-config.service.ts\n            \n            injectable\n            TcGeneralLandingPageConfigService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/services/tc-logging.service.ts\n            \n            injectable\n            LogService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/lib/services/tc-login.service.ts\n            \n            injectable\n            TcLoginService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/services/tc-shared-state.service.ts\n            \n            injectable\n            TcSharedStateService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/lib/tc-core-lib.module.ts\n            \n            variable\n            TC_NAVBAR_URL\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^7.2.6\n        \n            @angular/core : ^7.2.6\n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LogLevel   (src/.../tc-logging.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/services/tc-logging.service.ts\n    \n        \n            \n                \n                    \n                        \n                        LogLevel\n                    \n                \n                        \n                            \n                                 All\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 Debug\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 Info\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 Warn\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 Fatal\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 Off\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            compare   (src/.../tibco-cloud-table-datasource.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/components/tibco-cloud-table/tibco-cloud-table-datasource.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            compare\n                        \n                        \n                    \n                \n            \n            \n                \ncompare(a, b, isAsc)\n                \n            \n\n\n\n\n            \n                \n                    Simple sort comparator for example ID/Name columns (for client-side sorting). \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isAsc\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n Core CSDK Library\nThe core library contains the core capabilties required for any CSDK application.\n\n\n\n\nTibco Cloud authentication\nTenant Authorization\nShared State Config\nLogging\nError Handling\nCaching\nMock Services\nRoles\n\n\n\nThe other CSDK libraries will be dependant on this library.\nThis library should not depend on other CSDK libraries to avoid circular dependencies.\nNote: Stuff used by multiple other libraries can go here if not in their own library.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        TcCoreLibModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TcCoreLibModule\n\n\n\ncluster_TcCoreLibModule_declarations\n\n\n\ncluster_TcCoreLibModule_exports\n\n\n\ncluster_TcCoreLibModule_providers\n\n\n\n\nDurationSincePipe\n\nDurationSincePipe\n\n\n\nTcCoreLibModule\n\nTcCoreLibModule\n\nTcCoreLibModule -->\n\nDurationSincePipe->TcCoreLibModule\n\n\n\n\n\nEllipsisPipe\n\nEllipsisPipe\n\nTcCoreLibModule -->\n\nEllipsisPipe->TcCoreLibModule\n\n\n\n\n\nHighlightPipe\n\nHighlightPipe\n\nTcCoreLibModule -->\n\nHighlightPipe->TcCoreLibModule\n\n\n\n\n\nOnCreateDirective\n\nOnCreateDirective\n\nTcCoreLibModule -->\n\nOnCreateDirective->TcCoreLibModule\n\n\n\n\n\nOrderByDatePipe\n\nOrderByDatePipe\n\nTcCoreLibModule -->\n\nOrderByDatePipe->TcCoreLibModule\n\n\n\n\n\nReversePipe\n\nReversePipe\n\nTcCoreLibModule -->\n\nReversePipe->TcCoreLibModule\n\n\n\n\n\nTibcoCloudConfigurationComponent\n\nTibcoCloudConfigurationComponent\n\nTcCoreLibModule -->\n\nTibcoCloudConfigurationComponent->TcCoreLibModule\n\n\n\n\n\nTibcoCloudErrorComponent\n\nTibcoCloudErrorComponent\n\nTcCoreLibModule -->\n\nTibcoCloudErrorComponent->TcCoreLibModule\n\n\n\n\n\nTibcoCloudLoginComponent\n\nTibcoCloudLoginComponent\n\nTcCoreLibModule -->\n\nTibcoCloudLoginComponent->TcCoreLibModule\n\n\n\n\n\nTibcoCloudMenuBarComponent\n\nTibcoCloudMenuBarComponent\n\nTcCoreLibModule -->\n\nTibcoCloudMenuBarComponent->TcCoreLibModule\n\n\n\n\n\nTibcoCloudMultipleSubscriptionComponent\n\nTibcoCloudMultipleSubscriptionComponent\n\nTcCoreLibModule -->\n\nTibcoCloudMultipleSubscriptionComponent->TcCoreLibModule\n\n\n\n\n\nTibcoCloudNavbarComponent\n\nTibcoCloudNavbarComponent\n\nTcCoreLibModule -->\n\nTibcoCloudNavbarComponent->TcCoreLibModule\n\n\n\n\n\nTibcoCloudNewElementComponent\n\nTibcoCloudNewElementComponent\n\nTcCoreLibModule -->\n\nTibcoCloudNewElementComponent->TcCoreLibModule\n\n\n\n\n\nTibcoCloudSelectTableComponent\n\nTibcoCloudSelectTableComponent\n\nTcCoreLibModule -->\n\nTibcoCloudSelectTableComponent->TcCoreLibModule\n\n\n\n\n\nTibcoCloudSettingLandingComponent\n\nTibcoCloudSettingLandingComponent\n\nTcCoreLibModule -->\n\nTibcoCloudSettingLandingComponent->TcCoreLibModule\n\n\n\n\n\nTibcoCloudSettingMenuEntryComponent\n\nTibcoCloudSettingMenuEntryComponent\n\nTcCoreLibModule -->\n\nTibcoCloudSettingMenuEntryComponent->TcCoreLibModule\n\n\n\n\n\nTibcoCloudSettingsGeneralComponent\n\nTibcoCloudSettingsGeneralComponent\n\nTcCoreLibModule -->\n\nTibcoCloudSettingsGeneralComponent->TcCoreLibModule\n\n\n\n\n\nTibcoCloudSplashScreenComponent\n\nTibcoCloudSplashScreenComponent\n\nTcCoreLibModule -->\n\nTibcoCloudSplashScreenComponent->TcCoreLibModule\n\n\n\n\n\nTibcoCloudTableComponent\n\nTibcoCloudTableComponent\n\nTcCoreLibModule -->\n\nTibcoCloudTableComponent->TcCoreLibModule\n\n\n\n\n\nTibcoCloudWidgetHeaderComponent\n\nTibcoCloudWidgetHeaderComponent\n\nTcCoreLibModule -->\n\nTibcoCloudWidgetHeaderComponent->TcCoreLibModule\n\n\n\n\n\nDurationSincePipe \n\nDurationSincePipe \n\nDurationSincePipe  -->\n\nTcCoreLibModule->DurationSincePipe \n\n\n\n\n\nEllipsisPipe \n\nEllipsisPipe \n\nEllipsisPipe  -->\n\nTcCoreLibModule->EllipsisPipe \n\n\n\n\n\nHighlightPipe \n\nHighlightPipe \n\nHighlightPipe  -->\n\nTcCoreLibModule->HighlightPipe \n\n\n\n\n\nOnCreateDirective \n\nOnCreateDirective \n\nOnCreateDirective  -->\n\nTcCoreLibModule->OnCreateDirective \n\n\n\n\n\nOrderByDatePipe \n\nOrderByDatePipe \n\nOrderByDatePipe  -->\n\nTcCoreLibModule->OrderByDatePipe \n\n\n\n\n\nReversePipe \n\nReversePipe \n\nReversePipe  -->\n\nTcCoreLibModule->ReversePipe \n\n\n\n\n\nTibcoCloudConfigurationComponent \n\nTibcoCloudConfigurationComponent \n\nTibcoCloudConfigurationComponent  -->\n\nTcCoreLibModule->TibcoCloudConfigurationComponent \n\n\n\n\n\nTibcoCloudErrorComponent \n\nTibcoCloudErrorComponent \n\nTibcoCloudErrorComponent  -->\n\nTcCoreLibModule->TibcoCloudErrorComponent \n\n\n\n\n\nTibcoCloudLoginComponent \n\nTibcoCloudLoginComponent \n\nTibcoCloudLoginComponent  -->\n\nTcCoreLibModule->TibcoCloudLoginComponent \n\n\n\n\n\nTibcoCloudMenuBarComponent \n\nTibcoCloudMenuBarComponent \n\nTibcoCloudMenuBarComponent  -->\n\nTcCoreLibModule->TibcoCloudMenuBarComponent \n\n\n\n\n\nTibcoCloudMultipleSubscriptionComponent \n\nTibcoCloudMultipleSubscriptionComponent \n\nTibcoCloudMultipleSubscriptionComponent  -->\n\nTcCoreLibModule->TibcoCloudMultipleSubscriptionComponent \n\n\n\n\n\nTibcoCloudNavbarComponent \n\nTibcoCloudNavbarComponent \n\nTibcoCloudNavbarComponent  -->\n\nTcCoreLibModule->TibcoCloudNavbarComponent \n\n\n\n\n\nTibcoCloudNewElementComponent \n\nTibcoCloudNewElementComponent \n\nTibcoCloudNewElementComponent  -->\n\nTcCoreLibModule->TibcoCloudNewElementComponent \n\n\n\n\n\nTibcoCloudSelectTableComponent \n\nTibcoCloudSelectTableComponent \n\nTibcoCloudSelectTableComponent  -->\n\nTcCoreLibModule->TibcoCloudSelectTableComponent \n\n\n\n\n\nTibcoCloudSettingMenuEntryComponent \n\nTibcoCloudSettingMenuEntryComponent \n\nTibcoCloudSettingMenuEntryComponent  -->\n\nTcCoreLibModule->TibcoCloudSettingMenuEntryComponent \n\n\n\n\n\nTibcoCloudSettingsGeneralComponent \n\nTibcoCloudSettingsGeneralComponent \n\nTibcoCloudSettingsGeneralComponent  -->\n\nTcCoreLibModule->TibcoCloudSettingsGeneralComponent \n\n\n\n\n\nTibcoCloudSplashScreenComponent \n\nTibcoCloudSplashScreenComponent \n\nTibcoCloudSplashScreenComponent  -->\n\nTcCoreLibModule->TibcoCloudSplashScreenComponent \n\n\n\n\n\nTibcoCloudTableComponent \n\nTibcoCloudTableComponent \n\nTibcoCloudTableComponent  -->\n\nTcCoreLibModule->TibcoCloudTableComponent \n\n\n\n\n\nTibcoCloudWidgetHeaderComponent \n\nTibcoCloudWidgetHeaderComponent \n\nTibcoCloudWidgetHeaderComponent  -->\n\nTcCoreLibModule->TibcoCloudWidgetHeaderComponent \n\n\n\n\n\nAuthErrorInterceptor\n\nAuthErrorInterceptor\n\nTcCoreLibModule -->\n\nAuthErrorInterceptor->TcCoreLibModule\n\n\n\n\n\nCachingInterceptor\n\nCachingInterceptor\n\nTcCoreLibModule -->\n\nCachingInterceptor->TcCoreLibModule\n\n\n\n\n\nRequestCacheService\n\nRequestCacheService\n\nTcCoreLibModule -->\n\nRequestCacheService->TcCoreLibModule\n\n\n\n\n\nTcButtonsHelperService\n\nTcButtonsHelperService\n\nTcCoreLibModule -->\n\nTcButtonsHelperService->TcCoreLibModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    27 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CLIENT_ID_KEY   (src/.../login-prefill.resolver.ts)\n                        \n                        \n                            EMAIL_ID_KEY   (src/.../login-prefill.resolver.ts)\n                        \n                        \n                            GlobalNavbar   (src/.../tibco-cloud-navbar.component.ts)\n                        \n                        \n                            maxAge   (src/.../request-cache.service.ts)\n                        \n                        \n                            TC_NAVBAR_URL   (src/.../tc-core-lib.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/resolvers/login-prefill.resolver.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CLIENT_ID_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'tcs-login-client-id'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EMAIL_ID_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'tcs-login-email-id'\n                        \n                    \n\n\n            \n        \n\n    src/lib/components/tibco-cloud-navbar/tibco-cloud-navbar.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            GlobalNavbar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/lib/services/request-cache.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            maxAge\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 3.6e+6\n                        \n                    \n\n\n            \n        \n\n    src/lib/tc-core-lib.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TC_NAVBAR_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { url: 'https://account.cloud.tibco.com/tsc-ws-content/tsc-universal-header/globalNavbar.js', type: 'application/javascript' }\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
